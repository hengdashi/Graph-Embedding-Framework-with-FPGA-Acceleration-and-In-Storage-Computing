cc1plus: warning: command line option '-std=c99' is valid for C/ObjC but not for C++ [enabled by default]
cc1plus: warning: command line option '-fgnu89-inline' is valid for C/ObjC but not for C++ [enabled by default]
cc1plus: warning: command line option '-std=c99' is valid for C/ObjC but not for C++ [enabled by default]
cc1plus: warning: command line option '-fgnu89-inline' is valid for C/ObjC but not for C++ [enabled by default]
cc1plus: warning: command line option '-std=c99' is valid for C/ObjC but not for C++ [enabled by default]
cc1plus: warning: command line option '-fgnu89-inline' is valid for C/ObjC but not for C++ [enabled by default]
__merlin_opencl_if.cpp: In function 'int __merlin_create_command_queue()':
__merlin_opencl_if.cpp:161:19: warning: '_cl_command_queue* clCreateCommandQueue(cl_context, cl_device_id, cl_command_queue_properties, cl_int*)' is deprecated (declared at /usr/include/CL/cl.h:1443) [-Wdeprecated-declarations]
     commands[i] = clCreateCommandQueue(
                   ^
__merlin_opencl_if.cpp:162:73: warning: '_cl_command_queue* clCreateCommandQueue(cl_context, cl_device_id, cl_command_queue_properties, cl_int*)' is deprecated (declared at /usr/include/CL/cl.h:1443) [-Wdeprecated-declarations]
         context, device_id, CL_QUEUE_OUT_OF_ORDER_EXEC_MODE_ENABLE, &err);
                                                                         ^
__merlin_opencl_if.cpp: In function 'int opencl_enqueue_task(cl_kernel, cl_command_queue)':
__merlin_opencl_if.cpp:479:13: warning: 'cl_int clEnqueueTask(cl_command_queue, cl_kernel, cl_uint, _cl_event* const*, _cl_event**)' is deprecated (declared at /usr/include/CL/cl.h:1457) [-Wdeprecated-declarations]
   int err = clEnqueueTask(commands, kernel, 0, NULL, &event);
             ^
__merlin_opencl_if.cpp:479:60: warning: 'cl_int clEnqueueTask(cl_command_queue, cl_kernel, cl_uint, _cl_event* const*, _cl_event**)' is deprecated (declared at /usr/include/CL/cl.h:1457) [-Wdeprecated-declarations]
   int err = clEnqueueTask(commands, kernel, 0, NULL, &event);
                                                            ^
