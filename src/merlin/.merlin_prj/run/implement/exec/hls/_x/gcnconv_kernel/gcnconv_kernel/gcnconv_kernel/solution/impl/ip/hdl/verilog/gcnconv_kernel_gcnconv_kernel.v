// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.op
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="gcnconv_kernel_gcnconv_kernel,hls_ip_2019_1_op,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.920000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2462,HLS_SYN_DSP=53,HLS_SYN_FF=19431,HLS_SYN_LUT=27513,HLS_VERSION=2019_1_op}" *)

module gcnconv_kernel_gcnconv_kernel (
        ap_clk,
        ap_rst_n,
        event_done,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt,
        event_start,
        stall_start_ext,
        stall_done_ext,
        stall_start_str,
        stall_done_str,
        stall_start_int,
        stall_done_int
);

parameter    ap_ST_fsm_state1 = 77'd1;
parameter    ap_ST_fsm_state2 = 77'd2;
parameter    ap_ST_fsm_state3 = 77'd4;
parameter    ap_ST_fsm_state4 = 77'd8;
parameter    ap_ST_fsm_state5 = 77'd16;
parameter    ap_ST_fsm_state6 = 77'd32;
parameter    ap_ST_fsm_state7 = 77'd64;
parameter    ap_ST_fsm_state8 = 77'd128;
parameter    ap_ST_fsm_pp0_stage0 = 77'd256;
parameter    ap_ST_fsm_state12 = 77'd512;
parameter    ap_ST_fsm_state13 = 77'd1024;
parameter    ap_ST_fsm_pp1_stage0 = 77'd2048;
parameter    ap_ST_fsm_pp1_stage1 = 77'd4096;
parameter    ap_ST_fsm_pp1_stage2 = 77'd8192;
parameter    ap_ST_fsm_pp1_stage3 = 77'd16384;
parameter    ap_ST_fsm_pp1_stage4 = 77'd32768;
parameter    ap_ST_fsm_pp1_stage5 = 77'd65536;
parameter    ap_ST_fsm_pp1_stage6 = 77'd131072;
parameter    ap_ST_fsm_pp1_stage7 = 77'd262144;
parameter    ap_ST_fsm_pp1_stage8 = 77'd524288;
parameter    ap_ST_fsm_state32 = 77'd1048576;
parameter    ap_ST_fsm_state33 = 77'd2097152;
parameter    ap_ST_fsm_pp2_stage0 = 77'd4194304;
parameter    ap_ST_fsm_pp2_stage1 = 77'd8388608;
parameter    ap_ST_fsm_pp2_stage2 = 77'd16777216;
parameter    ap_ST_fsm_pp2_stage3 = 77'd33554432;
parameter    ap_ST_fsm_pp2_stage4 = 77'd67108864;
parameter    ap_ST_fsm_pp2_stage5 = 77'd134217728;
parameter    ap_ST_fsm_pp2_stage6 = 77'd268435456;
parameter    ap_ST_fsm_state47 = 77'd536870912;
parameter    ap_ST_fsm_state48 = 77'd1073741824;
parameter    ap_ST_fsm_state49 = 77'd2147483648;
parameter    ap_ST_fsm_state50 = 77'd4294967296;
parameter    ap_ST_fsm_state51 = 77'd8589934592;
parameter    ap_ST_fsm_state52 = 77'd17179869184;
parameter    ap_ST_fsm_state53 = 77'd34359738368;
parameter    ap_ST_fsm_state54 = 77'd68719476736;
parameter    ap_ST_fsm_state55 = 77'd137438953472;
parameter    ap_ST_fsm_pp5_stage0 = 77'd274877906944;
parameter    ap_ST_fsm_pp5_stage1 = 77'd549755813888;
parameter    ap_ST_fsm_pp5_stage2 = 77'd1099511627776;
parameter    ap_ST_fsm_pp5_stage3 = 77'd2199023255552;
parameter    ap_ST_fsm_pp5_stage4 = 77'd4398046511104;
parameter    ap_ST_fsm_pp5_stage5 = 77'd8796093022208;
parameter    ap_ST_fsm_pp5_stage6 = 77'd17592186044416;
parameter    ap_ST_fsm_pp5_stage7 = 77'd35184372088832;
parameter    ap_ST_fsm_pp5_stage8 = 77'd70368744177664;
parameter    ap_ST_fsm_pp5_stage9 = 77'd140737488355328;
parameter    ap_ST_fsm_state67 = 77'd281474976710656;
parameter    ap_ST_fsm_pp6_stage0 = 77'd562949953421312;
parameter    ap_ST_fsm_state84 = 77'd1125899906842624;
parameter    ap_ST_fsm_state85 = 77'd2251799813685248;
parameter    ap_ST_fsm_pp7_stage0 = 77'd4503599627370496;
parameter    ap_ST_fsm_state98 = 77'd9007199254740992;
parameter    ap_ST_fsm_state99 = 77'd18014398509481984;
parameter    ap_ST_fsm_pp8_stage0 = 77'd36028797018963968;
parameter    ap_ST_fsm_pp8_stage1 = 77'd72057594037927936;
parameter    ap_ST_fsm_pp8_stage2 = 77'd144115188075855872;
parameter    ap_ST_fsm_pp8_stage3 = 77'd288230376151711744;
parameter    ap_ST_fsm_pp8_stage4 = 77'd576460752303423488;
parameter    ap_ST_fsm_pp8_stage5 = 77'd1152921504606846976;
parameter    ap_ST_fsm_pp8_stage6 = 77'd2305843009213693952;
parameter    ap_ST_fsm_pp8_stage7 = 77'd4611686018427387904;
parameter    ap_ST_fsm_pp8_stage8 = 77'd9223372036854775808;
parameter    ap_ST_fsm_pp8_stage9 = 77'd18446744073709551616;
parameter    ap_ST_fsm_pp8_stage10 = 77'd36893488147419103232;
parameter    ap_ST_fsm_pp8_stage11 = 77'd73786976294838206464;
parameter    ap_ST_fsm_pp8_stage12 = 77'd147573952589676412928;
parameter    ap_ST_fsm_pp8_stage13 = 77'd295147905179352825856;
parameter    ap_ST_fsm_pp8_stage14 = 77'd590295810358705651712;
parameter    ap_ST_fsm_pp8_stage15 = 77'd1180591620717411303424;
parameter    ap_ST_fsm_pp8_stage16 = 77'd2361183241434822606848;
parameter    ap_ST_fsm_pp8_stage17 = 77'd4722366482869645213696;
parameter    ap_ST_fsm_pp8_stage18 = 77'd9444732965739290427392;
parameter    ap_ST_fsm_pp8_stage19 = 77'd18889465931478580854784;
parameter    ap_ST_fsm_pp8_stage20 = 77'd37778931862957161709568;
parameter    ap_ST_fsm_state123 = 77'd75557863725914323419136;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   event_done;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;
output   event_start;
output   stall_start_ext;
output   stall_done_ext;
output   stall_start_str;
output   stall_done_str;
output   stall_start_int;
output   stall_done_int;

reg stall_start_ext;
reg stall_done_ext;
reg stall_start_str;
reg stall_done_str;
reg stall_start_int;
reg stall_done_int;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [76:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] x_data;
wire   [63:0] weight_data;
wire   [63:0] edge_index;
wire   [63:0] result_data;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln1097_reg_6387;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
reg   [0:0] icmp_ln3363_reg_6592;
reg   [0:0] icmp_ln3346_reg_6506;
wire    ap_CS_fsm_pp1_stage8;
wire    ap_block_pp1_stage8;
reg   [0:0] icmp_ln3416_reg_6515;
reg   [0:0] icmp_ln3464_reg_6519;
reg   [0:0] icmp_ln3512_reg_6523;
reg   [0:0] icmp_ln3419_reg_6601;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_pp1_stage2;
reg   [0:0] and_ln3553_11_reg_6659;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] and_ln3517_8_reg_6695;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_pp1_stage3;
reg   [0:0] and_ln3517_9_reg_6699;
reg   [0:0] and_ln3517_9_reg_6699_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_pp1_stage4;
reg   [0:0] and_ln3517_10_reg_6703;
reg   [0:0] and_ln3517_10_reg_6703_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage5;
wire    ap_block_pp1_stage5;
reg   [0:0] and_ln3517_11_reg_6707;
reg   [0:0] and_ln3517_11_reg_6707_pp1_iter1_reg;
reg   [0:0] and_ln3469_4_reg_6727;
reg   [0:0] and_ln3469_5_reg_6731;
reg   [0:0] and_ln3469_5_reg_6731_pp1_iter1_reg;
reg   [0:0] and_ln3469_6_reg_6735;
reg   [0:0] and_ln3469_6_reg_6735_pp1_iter1_reg;
reg   [0:0] and_ln3469_7_reg_6739;
reg   [0:0] and_ln3469_7_reg_6739_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage6;
wire    ap_block_pp1_stage6;
reg   [0:0] and_ln3469_8_reg_6743;
reg   [0:0] and_ln3469_8_reg_6743_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage7;
wire    ap_block_pp1_stage7;
reg   [0:0] and_ln3469_9_reg_6747;
reg   [0:0] and_ln3469_9_reg_6747_pp1_iter1_reg;
reg   [0:0] and_ln3469_10_reg_6751;
reg   [0:0] and_ln3469_10_reg_6751_pp1_iter1_reg;
reg   [0:0] and_ln3469_11_reg_6755;
reg   [0:0] and_ln3469_11_reg_6755_pp1_iter1_reg;
reg   [0:0] and_ln3421_reg_6759;
reg   [0:0] and_ln3421_1_reg_6763;
reg   [0:0] and_ln3421_1_reg_6763_pp1_iter1_reg;
reg   [0:0] and_ln3421_2_reg_6767;
reg   [0:0] and_ln3421_2_reg_6767_pp1_iter1_reg;
reg   [0:0] and_ln3421_3_reg_6771;
reg   [0:0] and_ln3421_3_reg_6771_pp1_iter1_reg;
reg   [0:0] icmp_ln3421_reg_6605;
reg   [0:0] icmp_ln3421_reg_6605_pp1_iter1_reg;
reg   [0:0] and_ln3421_4_reg_6775;
reg   [0:0] and_ln3421_4_reg_6775_pp1_iter1_reg;
wire    ap_CS_fsm_pp8_stage2;
reg    ap_enable_reg_pp8_iter0;
wire    ap_block_pp8_stage2;
reg   [0:0] icmp_ln252_reg_7715;
wire    ap_CS_fsm_pp8_stage9;
wire    ap_block_pp8_stage9;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_pp8_stage16;
wire    ap_block_pp8_stage16;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_pp8_stage17;
wire    ap_block_pp8_stage17;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_pp8_stage1;
reg    ap_enable_reg_pp8_iter1;
wire    ap_block_pp8_stage1;
reg   [0:0] icmp_ln252_reg_7715_pp8_iter1_reg;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [63:0] gmem_AWADDR;
reg   [0:0] gmem_AWID;
reg   [31:0] gmem_AWLEN;
reg   [2:0] gmem_AWSIZE;
reg   [1:0] gmem_AWBURST;
reg   [1:0] gmem_AWLOCK;
reg   [3:0] gmem_AWCACHE;
reg   [2:0] gmem_AWPROT;
reg   [3:0] gmem_AWQOS;
reg   [3:0] gmem_AWREGION;
reg   [0:0] gmem_AWUSER;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg   [511:0] gmem_WDATA;
reg   [63:0] gmem_WSTRB;
reg    gmem_WLAST;
reg   [0:0] gmem_WID;
reg   [0:0] gmem_WUSER;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [63:0] gmem_ARADDR;
reg   [0:0] gmem_ARID;
reg   [31:0] gmem_ARLEN;
reg   [2:0] gmem_ARSIZE;
reg   [1:0] gmem_ARBURST;
reg   [1:0] gmem_ARLOCK;
reg   [3:0] gmem_ARCACHE;
reg   [2:0] gmem_ARPROT;
reg   [3:0] gmem_ARQOS;
reg   [3:0] gmem_ARREGION;
reg   [0:0] gmem_ARUSER;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [511:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [8:0] i_0_i_reg_2260;
reg   [9:0] index2_2_i_reg_2271;
reg   [63:0] index1_1_i_reg_2283;
reg   [5:0] i_0_i28_reg_2318;
reg   [5:0] i_0_i28_reg_2318_pp1_iter1_reg;
wire    ap_block_state14_pp1_stage0_iter0;
reg    ap_predicate_op752_read_state23;
reg    ap_predicate_op806_read_state23;
reg    ap_predicate_op863_read_state23;
reg    ap_predicate_op899_read_state23;
reg    ap_block_state23_pp1_stage0_iter1;
reg    ap_predicate_op873_readreq_state23;
reg    ap_block_state23_io;
reg    ap_block_pp1_stage0_11001;
reg   [8:0] k_0_reg_2342;
reg   [31:0] mul_0_reg_2353;
reg   [16:0] i4_0_reg_2425;
reg   [14:0] i5_0_reg_2436;
reg   [16:0] i6_0_reg_2447;
reg   [16:0] i7_0_reg_2459;
wire   [58:0] grp_fu_2601_p2;
reg   [58:0] reg_2804;
wire   [0:0] icmp_ln3363_fu_3461_p2;
wire   [0:0] icmp_ln3419_fu_3481_p2;
wire   [58:0] grp_fu_2665_p2;
reg   [58:0] reg_2808;
wire    ap_block_state15_pp1_stage1_iter0;
reg    ap_predicate_op457_readreq_state15;
reg    ap_predicate_op461_readreq_state15;
reg    ap_predicate_op465_readreq_state15;
reg    ap_predicate_op469_readreq_state15;
reg    ap_predicate_op473_readreq_state15;
reg    ap_block_state15_io;
reg    ap_predicate_op1053_read_state24;
reg    ap_predicate_op1063_read_state24;
reg    ap_predicate_op1077_read_state24;
reg    ap_block_state24_pp1_stage1_iter1;
reg    ap_block_pp1_stage1_11001;
wire    ap_block_state16_pp1_stage2_iter0;
reg    ap_predicate_op477_readreq_state16;
reg    ap_predicate_op481_readreq_state16;
reg    ap_predicate_op486_readreq_state16;
reg    ap_predicate_op491_readreq_state16;
reg    ap_block_state16_io;
reg    ap_predicate_op1089_read_state25;
reg    ap_predicate_op1098_read_state25;
reg    ap_predicate_op1111_read_state25;
reg    ap_block_state25_pp1_stage2_iter1;
reg    ap_block_pp1_stage2_11001;
wire    ap_block_state17_pp1_stage3_iter0;
reg    ap_predicate_op500_readreq_state17;
reg    ap_predicate_op506_readreq_state17;
reg    ap_predicate_op512_readreq_state17;
reg    ap_block_state17_io;
reg    ap_predicate_op1122_read_state26;
reg    ap_predicate_op1130_read_state26;
reg    ap_predicate_op1142_read_state26;
reg    ap_block_state26_pp1_stage3_iter1;
reg    ap_block_pp1_stage3_11001;
wire    ap_block_state18_pp1_stage4_iter0;
reg    ap_predicate_op522_readreq_state18;
reg    ap_predicate_op529_readreq_state18;
reg    ap_predicate_op536_readreq_state18;
reg    ap_block_state18_io;
reg    ap_predicate_op1158_read_state27;
reg    ap_predicate_op1169_read_state27;
reg    ap_block_state27_pp1_stage4_iter1;
reg    ap_block_pp1_stage4_11001;
wire    ap_block_state19_pp1_stage5_iter0;
reg    ap_predicate_op547_readreq_state19;
reg    ap_predicate_op554_readreq_state19;
reg    ap_predicate_op562_readreq_state19;
reg    ap_block_state19_io;
reg    ap_predicate_op1184_read_state28;
reg    ap_predicate_op1214_read_state28;
reg    ap_block_state28_pp1_stage5_iter1;
reg    ap_block_pp1_stage5_11001;
wire    ap_block_state20_pp1_stage6_iter0;
reg    ap_predicate_op579_readreq_state20;
reg    ap_predicate_op588_readreq_state20;
reg    ap_block_state20_io;
reg    ap_predicate_op1222_read_state29;
reg    ap_block_state29_pp1_stage6_iter1;
reg    ap_block_pp1_stage6_11001;
wire    ap_block_state21_pp1_stage7_iter0;
reg    ap_predicate_op606_readreq_state21;
reg    ap_predicate_op617_readreq_state21;
reg    ap_block_state21_io;
reg    ap_predicate_op1238_read_state30;
reg    ap_block_state30_pp1_stage7_iter1;
reg    ap_block_pp1_stage7_11001;
wire   [31:0] grp_fu_2575_p2;
reg   [31:0] reg_2812;
wire    ap_CS_fsm_pp2_stage5;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state39_pp2_stage5_iter0;
wire    ap_block_state46_pp2_stage5_iter1;
wire    ap_block_pp2_stage5_11001;
reg   [0:0] icmp_ln182_reg_7460;
wire    ap_block_state86_pp7_stage0_iter0;
wire    ap_block_state87_pp7_stage0_iter1;
wire    ap_block_state88_pp7_stage0_iter2;
wire    ap_block_state89_pp7_stage0_iter3;
wire    ap_block_state90_pp7_stage0_iter4;
wire    ap_block_state91_pp7_stage0_iter5;
wire    ap_block_state92_pp7_stage0_iter6;
wire    ap_block_state93_pp7_stage0_iter7;
wire    ap_block_state94_pp7_stage0_iter8;
wire    ap_block_state95_pp7_stage0_iter9;
wire    ap_block_state96_pp7_stage0_iter10;
wire    ap_block_state97_pp7_stage0_iter11;
wire    ap_block_pp7_stage0_11001;
reg    ap_enable_reg_pp7_iter6;
reg   [0:0] icmp_ln242_reg_7665;
reg   [0:0] icmp_ln242_reg_7665_pp7_iter5_reg;
wire    ap_CS_fsm_pp8_stage6;
wire    ap_block_state106_pp8_stage6_iter0;
wire    ap_block_pp8_stage6_11001;
wire   [31:0] grp_fu_2510_p2;
reg   [31:0] reg_2819;
reg    ap_enable_reg_pp2_iter1;
reg   [0:0] icmp_ln182_reg_7460_pp2_iter1_reg;
wire    ap_CS_fsm_pp5_stage9;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state65_pp5_stage9_iter0;
wire    ap_block_pp5_stage9_11001;
reg   [0:0] icmp_ln223_reg_7617;
wire    ap_block_state116_pp8_stage16_iter0;
reg    ap_block_state116_io;
reg    ap_block_pp8_stage16_11001;
wire   [31:0] edge_weight_q0;
reg   [31:0] reg_2825;
wire    ap_CS_fsm_pp5_stage1;
wire    ap_block_state57_pp5_stage1_iter0;
wire    ap_block_pp5_stage1_11001;
reg    ap_enable_reg_pp7_iter2;
reg   [0:0] icmp_ln242_reg_7665_pp7_iter1_reg;
wire   [31:0] deg_q0;
reg   [31:0] reg_2831;
wire    ap_CS_fsm_pp5_stage2;
wire    ap_block_state58_pp5_stage2_iter0;
wire    ap_block_pp5_stage2_11001;
wire    ap_block_state68_pp6_stage0_iter0;
wire    ap_block_state69_pp6_stage0_iter1;
wire    ap_block_state70_pp6_stage0_iter2;
wire    ap_block_state71_pp6_stage0_iter3;
wire    ap_block_state72_pp6_stage0_iter4;
wire    ap_block_state73_pp6_stage0_iter5;
wire    ap_block_state74_pp6_stage0_iter6;
wire    ap_block_state75_pp6_stage0_iter7;
wire    ap_block_state76_pp6_stage0_iter8;
wire    ap_block_state77_pp6_stage0_iter9;
wire    ap_block_state78_pp6_stage0_iter10;
wire    ap_block_state79_pp6_stage0_iter11;
wire    ap_block_state80_pp6_stage0_iter12;
wire    ap_block_state81_pp6_stage0_iter13;
wire    ap_block_state82_pp6_stage0_iter14;
wire    ap_block_state83_pp6_stage0_iter15;
wire    ap_block_pp6_stage0_11001;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter1;
reg   [0:0] icmp_ln232_reg_7641;
wire   [31:0] grp_fu_2580_p2;
reg   [31:0] reg_2837;
reg    ap_enable_reg_pp7_iter10;
reg   [0:0] icmp_ln242_reg_7665_pp7_iter9_reg;
reg   [57:0] tmp_18_reg_6344;
reg   [57:0] edge_index5_reg_6349;
reg   [57:0] weight_data3_reg_6358;
reg   [57:0] tmp_19_reg_6363;
wire   [58:0] p_cast33_fu_2893_p1;
reg   [58:0] p_cast33_reg_6374;
wire    ap_CS_fsm_state8;
wire   [58:0] p_cast_fu_2896_p1;
reg   [58:0] p_cast_reg_6379;
wire   [0:0] icmp_ln1097_fu_2899_p2;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1097_reg_6387_pp0_iter1_reg;
wire   [8:0] i_fu_2905_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] trunc_ln1110_fu_2911_p1;
reg   [31:0] trunc_ln1110_reg_6396;
reg   [31:0] raw_bits_1_reg_6401;
reg   [31:0] raw_bits_s_reg_6406;
reg   [31:0] raw_bits_2_reg_6411;
reg   [31:0] raw_bits_3_reg_6416;
reg   [31:0] raw_bits_4_reg_6421;
reg   [31:0] raw_bits_5_reg_6426;
reg   [31:0] raw_bits_6_reg_6431;
reg   [31:0] raw_bits_8_reg_6436;
reg   [31:0] raw_bits_9_reg_6441;
reg   [31:0] raw_bits_7_reg_6446;
reg   [31:0] raw_bits_10_reg_6451;
reg   [31:0] raw_bits_11_reg_6456;
reg   [31:0] raw_bits_12_reg_6461;
reg   [31:0] raw_bits_13_reg_6466;
reg   [31:0] raw_bits_14_reg_6471;
wire   [9:0] index2_1_fu_3217_p3;
reg    ap_enable_reg_pp0_iter2;
wire   [63:0] index1_1_fu_3225_p3;
wire   [25:0] add_ln169_fu_3233_p2;
reg   [25:0] add_ln169_reg_6486;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln169_fu_3239_p2;
wire   [14:0] i_3_fu_3245_p2;
reg   [14:0] i_3_reg_6495;
wire   [19:0] lshr_ln_fu_3277_p4;
reg   [19:0] lshr_ln_reg_6500;
wire   [0:0] icmp_ln3346_fu_3331_p2;
wire   [5:0] len_fu_3343_p3;
reg   [5:0] len_reg_6510;
wire   [0:0] icmp_ln3416_fu_3351_p2;
wire   [0:0] icmp_ln3464_fu_3357_p2;
wire   [0:0] icmp_ln3512_fu_3363_p2;
wire   [63:0] add_ln3553_fu_3375_p2;
reg   [63:0] add_ln3553_reg_6527;
wire   [0:0] icmp_ln3373_1_fu_3381_p2;
reg   [0:0] icmp_ln3373_1_reg_6532;
wire   [0:0] icmp_ln3373_2_fu_3387_p2;
reg   [0:0] icmp_ln3373_2_reg_6537;
wire   [0:0] icmp_ln3421_1_fu_3393_p2;
reg   [0:0] icmp_ln3421_1_reg_6542;
wire   [0:0] icmp_ln3421_2_fu_3399_p2;
reg   [0:0] icmp_ln3421_2_reg_6547;
wire   [0:0] icmp_ln3421_3_fu_3405_p2;
reg   [0:0] icmp_ln3421_3_reg_6552;
wire   [0:0] xor_ln3469_fu_3419_p2;
reg   [0:0] xor_ln3469_reg_6557;
wire   [0:0] icmp_ln3469_fu_3425_p2;
reg   [0:0] icmp_ln3469_reg_6562;
wire   [0:0] icmp_ln3469_1_fu_3431_p2;
reg   [0:0] icmp_ln3469_1_reg_6567;
wire   [0:0] icmp_ln3469_2_fu_3437_p2;
reg   [0:0] icmp_ln3469_2_reg_6572;
wire   [0:0] icmp_ln3469_3_fu_3443_p2;
reg   [0:0] icmp_ln3469_3_reg_6577;
wire   [0:0] icmp_ln3469_4_fu_3449_p2;
reg   [0:0] icmp_ln3469_4_reg_6582;
wire   [0:0] icmp_ln3469_5_fu_3455_p2;
reg   [0:0] icmp_ln3469_5_reg_6587;
wire   [5:0] i_8_fu_3466_p2;
reg   [5:0] i_8_reg_6596;
reg   [0:0] icmp_ln3419_reg_6601_pp1_iter1_reg;
wire   [0:0] grp_fu_2597_p2;
wire   [58:0] zext_ln3424_11_fu_3492_p1;
reg   [58:0] zext_ln3424_11_reg_6609;
wire   [0:0] grp_fu_2605_p2;
reg   [0:0] and_ln3553_reg_6615;
wire   [0:0] grp_fu_2610_p2;
reg   [0:0] and_ln3553_1_reg_6619;
wire   [0:0] grp_fu_2615_p2;
reg   [0:0] and_ln3553_2_reg_6623;
wire   [0:0] grp_fu_2620_p2;
reg   [0:0] and_ln3553_3_reg_6627;
wire   [0:0] grp_fu_2625_p2;
reg   [0:0] and_ln3553_4_reg_6631;
reg   [0:0] and_ln3553_4_reg_6631_pp1_iter1_reg;
wire   [0:0] grp_fu_2630_p2;
reg   [0:0] and_ln3553_5_reg_6635;
reg   [0:0] and_ln3553_5_reg_6635_pp1_iter1_reg;
wire   [0:0] grp_fu_2635_p2;
reg   [0:0] and_ln3553_6_reg_6639;
reg   [0:0] and_ln3553_6_reg_6639_pp1_iter1_reg;
wire   [0:0] grp_fu_2640_p2;
reg   [0:0] and_ln3553_7_reg_6643;
reg   [0:0] and_ln3553_7_reg_6643_pp1_iter1_reg;
wire   [0:0] grp_fu_2645_p2;
reg   [0:0] and_ln3553_8_reg_6647;
reg   [0:0] and_ln3553_8_reg_6647_pp1_iter1_reg;
wire   [0:0] grp_fu_2650_p2;
reg   [0:0] and_ln3553_9_reg_6651;
reg   [0:0] and_ln3553_9_reg_6651_pp1_iter1_reg;
wire   [0:0] grp_fu_2655_p2;
reg   [0:0] and_ln3553_10_reg_6655;
reg   [0:0] and_ln3553_10_reg_6655_pp1_iter1_reg;
wire   [0:0] grp_fu_2660_p2;
reg   [0:0] and_ln3553_11_reg_6659_pp1_iter1_reg;
reg   [0:0] and_ln3517_reg_6663;
reg   [0:0] and_ln3517_1_reg_6667;
reg   [0:0] and_ln3517_2_reg_6671;
reg   [0:0] and_ln3517_3_reg_6675;
reg   [0:0] and_ln3517_4_reg_6679;
reg   [0:0] and_ln3517_4_reg_6679_pp1_iter1_reg;
reg   [0:0] and_ln3517_5_reg_6683;
reg   [0:0] and_ln3517_5_reg_6683_pp1_iter1_reg;
reg   [0:0] and_ln3517_6_reg_6687;
reg   [0:0] and_ln3517_6_reg_6687_pp1_iter1_reg;
reg   [0:0] and_ln3517_7_reg_6691;
reg   [0:0] and_ln3517_7_reg_6691_pp1_iter1_reg;
reg   [0:0] and_ln3517_8_reg_6695_pp1_iter1_reg;
reg   [0:0] and_ln3469_reg_6711;
reg   [0:0] and_ln3469_1_reg_6715;
reg   [0:0] and_ln3469_2_reg_6719;
reg   [0:0] and_ln3469_3_reg_6723;
reg   [0:0] and_ln3469_4_reg_6727_pp1_iter1_reg;
reg   [0:0] and_ln3421_reg_6759_pp1_iter1_reg;
reg   [0:0] icmp_ln3373_reg_6779;
wire   [58:0] add_ln32_fu_3506_p2;
reg   [58:0] add_ln32_reg_6783;
reg   [0:0] and_ln3373_reg_6788;
reg   [0:0] and_ln3373_1_reg_6792;
wire   [58:0] add_ln32_22_fu_3741_p2;
reg   [58:0] add_ln32_22_reg_6922;
wire   [31:0] trunc_ln3555_fu_3756_p1;
reg   [31:0] trunc_ln3555_reg_6933;
reg    ap_predicate_op619_read_state22;
reg    ap_predicate_op636_read_state22;
reg    ap_predicate_op653_read_state22;
reg    ap_predicate_op671_read_state22;
reg    ap_predicate_op682_read_state22;
reg    ap_block_state22_pp1_stage8_iter0;
reg    ap_predicate_op670_readreq_state22;
reg    ap_block_state22_io;
wire    ap_block_state31_pp1_stage8_iter1;
reg    ap_block_pp1_stage8_11001;
reg   [31:0] raw_bits_6_1_reg_6938;
reg   [31:0] raw_bits_6_2_reg_6943;
reg   [31:0] raw_bits_6_3_reg_6948;
reg   [31:0] raw_bits_6_4_reg_6953;
reg   [31:0] raw_bits_6_5_reg_6958;
reg   [31:0] raw_bits_6_6_reg_6963;
reg   [31:0] raw_bits_6_7_reg_6968;
reg   [31:0] raw_bits_6_8_reg_6973;
reg   [31:0] raw_bits_6_9_reg_6978;
reg   [31:0] raw_bits_6_s_reg_6983;
reg   [31:0] raw_bits_6_10_reg_6988;
reg   [31:0] raw_bits_6_11_reg_6993;
reg   [31:0] raw_bits_6_12_reg_6998;
reg   [31:0] raw_bits_6_13_reg_7003;
wire   [31:0] trunc_ln3519_fu_3900_p1;
reg   [31:0] trunc_ln3519_reg_7008;
reg   [31:0] raw_bits_5_1_reg_7013;
reg   [31:0] raw_bits_5_2_reg_7018;
reg   [31:0] raw_bits_5_3_reg_7023;
reg   [31:0] raw_bits_5_4_reg_7028;
reg   [31:0] raw_bits_5_5_reg_7033;
reg   [31:0] raw_bits_5_6_reg_7038;
reg   [31:0] raw_bits_5_7_reg_7043;
reg   [31:0] raw_bits_5_8_reg_7048;
reg   [31:0] raw_bits_5_9_reg_7053;
reg   [31:0] raw_bits_5_s_reg_7058;
reg   [31:0] raw_bits_5_10_reg_7063;
wire   [31:0] trunc_ln3471_fu_4014_p1;
reg   [31:0] trunc_ln3471_reg_7068;
reg   [31:0] raw_bits_4_1_reg_7073;
reg   [31:0] raw_bits_4_2_reg_7078;
reg   [31:0] raw_bits_4_3_reg_7083;
reg   [31:0] raw_bits_4_4_reg_7088;
reg   [31:0] raw_bits_4_5_reg_7093;
reg   [31:0] raw_bits_4_6_reg_7098;
reg   [31:0] raw_bits_4_7_reg_7103;
wire   [31:0] trunc_ln3423_fu_4099_p1;
reg   [31:0] trunc_ln3423_reg_7114;
reg   [31:0] raw_bits_3_1_reg_7119;
reg   [31:0] raw_bits_3_2_reg_7124;
reg   [31:0] raw_bits_3_3_reg_7129;
wire   [31:0] trunc_ln3375_fu_4133_p1;
reg   [31:0] trunc_ln3375_reg_7134;
reg   [31:0] raw_bits_2_1_reg_7139;
reg   [31:0] raw_bits_2_2_reg_7144;
reg   [31:0] raw_bits_2_3_reg_7149;
reg   [31:0] raw_bits_2_4_reg_7154;
reg   [31:0] raw_bits_2_5_reg_7159;
reg   [31:0] raw_bits_2_6_reg_7164;
reg   [31:0] raw_bits_2_7_reg_7169;
reg   [31:0] raw_bits_2_8_reg_7174;
reg   [31:0] raw_bits_2_9_reg_7179;
reg   [31:0] raw_bits_2_s_reg_7184;
reg   [31:0] raw_bits_2_10_reg_7189;
reg   [31:0] raw_bits_2_11_reg_7194;
reg   [31:0] raw_bits_2_12_reg_7199;
reg   [31:0] raw_bits_2_13_reg_7204;
reg   [31:0] raw_bits_2_14_reg_7209;
wire   [9:0] shl_ln2_fu_4287_p3;
reg   [9:0] shl_ln2_reg_7214;
reg   [31:0] raw_bits_6_14_reg_7225;
reg   [31:0] raw_bits_5_11_reg_7230;
reg   [31:0] raw_bits_4_8_reg_7235;
reg   [31:0] raw_bits_3_4_reg_7246;
reg   [31:0] raw_bits_5_12_reg_7251;
reg   [31:0] raw_bits_4_9_reg_7256;
reg   [31:0] raw_bits_3_5_reg_7261;
reg   [31:0] raw_bits_5_13_reg_7266;
reg   [31:0] raw_bits_4_s_reg_7271;
reg   [31:0] raw_bits_3_6_reg_7276;
reg   [31:0] raw_bits_5_14_reg_7281;
reg   [31:0] raw_bits_4_10_reg_7286;
reg   [31:0] raw_bits_3_7_reg_7291;
reg   [31:0] raw_bits_4_11_reg_7296;
reg   [31:0] raw_bits_3_8_reg_7301;
reg   [31:0] raw_bits_3_9_reg_7306;
reg   [31:0] raw_bits_3_s_reg_7311;
reg   [31:0] raw_bits_3_10_reg_7316;
reg   [31:0] raw_bits_3_11_reg_7321;
reg   [31:0] raw_bits_3_12_reg_7326;
reg   [31:0] raw_bits_3_13_reg_7331;
reg   [31:0] raw_bits_4_12_reg_7336;
reg   [31:0] raw_bits_3_14_reg_7341;
reg   [31:0] raw_bits_4_13_reg_7346;
reg   [31:0] raw_bits_4_14_reg_7351;
wire   [6:0] shl_ln3472_7_fu_5657_p3;
reg   [6:0] shl_ln3472_7_reg_7356;
reg   [14:0] x_mul_0_addr_reg_7361;
wire    ap_CS_fsm_state32;
reg   [14:0] x_mul_1_addr_reg_7366;
reg   [14:0] x_mul_2_addr_reg_7371;
reg   [14:0] x_mul_3_addr_reg_7376;
reg   [14:0] x_mul_4_addr_reg_7381;
reg   [14:0] x_mul_5_addr_reg_7386;
reg   [14:0] x_mul_6_addr_reg_7391;
reg   [14:0] x_mul_7_addr_reg_7396;
reg   [14:0] x_mul_8_addr_reg_7401;
reg   [14:0] x_mul_9_addr_reg_7406;
reg   [14:0] x_mul_10_addr_reg_7411;
reg   [14:0] x_mul_11_addr_reg_7416;
reg   [14:0] x_mul_12_addr_reg_7421;
reg   [14:0] x_mul_13_addr_reg_7426;
reg   [14:0] x_mul_14_addr_reg_7431;
reg   [14:0] x_mul_15_addr_reg_7436;
wire   [0:0] icmp_ln178_fu_5693_p2;
wire    ap_CS_fsm_state33;
wire   [4:0] j_fu_5699_p2;
reg   [4:0] j_reg_7445;
wire   [31:0] zext_ln187_fu_5709_p1;
reg   [31:0] zext_ln187_reg_7450;
wire   [10:0] zext_ln182_fu_5723_p1;
reg   [10:0] zext_ln182_reg_7455;
wire   [0:0] icmp_ln182_fu_5727_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state34_pp2_stage0_iter0;
wire    ap_block_state41_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [8:0] k_fu_5733_p2;
reg   [8:0] k_reg_7464;
wire   [2:0] trunc_ln187_1_fu_5768_p1;
reg   [2:0] trunc_ln187_1_reg_7509;
wire   [31:0] x_buf_0_6_q0;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state35_pp2_stage1_iter0;
wire    ap_block_state42_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
wire   [31:0] x_buf_0_5_q0;
wire   [31:0] x_buf_0_4_q0;
wire   [31:0] x_buf_0_3_q0;
wire   [31:0] x_buf_0_2_q0;
wire   [31:0] x_buf_0_1_q0;
wire   [31:0] x_buf_0_0_q0;
wire   [31:0] x_buf_0_7_q0;
wire   [31:0] tmp_12_fu_5794_p10;
reg   [31:0] tmp_12_reg_7593;
wire   [14:0] i_1_fu_5825_p2;
wire    ap_CS_fsm_state50;
wire   [16:0] i_2_fu_5867_p2;
wire    ap_CS_fsm_state53;
wire   [0:0] icmp_ln223_fu_5878_p2;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state56_pp5_stage0_iter0;
wire    ap_block_state66_pp5_stage0_iter1;
wire    ap_block_pp5_stage0_11001;
wire   [16:0] i_4_fu_5884_p2;
reg   [16:0] i_4_reg_7621;
reg   [14:0] deg_addr_reg_7636;
wire   [0:0] icmp_ln232_fu_5901_p2;
reg   [0:0] icmp_ln232_reg_7641_pp6_iter1_reg;
reg   [0:0] icmp_ln232_reg_7641_pp6_iter2_reg;
reg   [0:0] icmp_ln232_reg_7641_pp6_iter3_reg;
reg   [0:0] icmp_ln232_reg_7641_pp6_iter4_reg;
reg   [0:0] icmp_ln232_reg_7641_pp6_iter5_reg;
reg   [0:0] icmp_ln232_reg_7641_pp6_iter6_reg;
reg   [0:0] icmp_ln232_reg_7641_pp6_iter7_reg;
reg   [0:0] icmp_ln232_reg_7641_pp6_iter8_reg;
reg   [0:0] icmp_ln232_reg_7641_pp6_iter9_reg;
reg   [0:0] icmp_ln232_reg_7641_pp6_iter10_reg;
reg   [0:0] icmp_ln232_reg_7641_pp6_iter11_reg;
reg   [0:0] icmp_ln232_reg_7641_pp6_iter12_reg;
reg   [0:0] icmp_ln232_reg_7641_pp6_iter13_reg;
reg   [0:0] icmp_ln232_reg_7641_pp6_iter14_reg;
wire   [14:0] i_5_fu_5907_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [63:0] zext_ln237_fu_5913_p1;
reg   [63:0] zext_ln237_reg_7650;
reg   [63:0] zext_ln237_reg_7650_pp6_iter1_reg;
reg   [63:0] zext_ln237_reg_7650_pp6_iter2_reg;
reg   [63:0] zext_ln237_reg_7650_pp6_iter3_reg;
reg   [63:0] zext_ln237_reg_7650_pp6_iter4_reg;
reg   [63:0] zext_ln237_reg_7650_pp6_iter5_reg;
reg   [63:0] zext_ln237_reg_7650_pp6_iter6_reg;
reg   [63:0] zext_ln237_reg_7650_pp6_iter7_reg;
reg   [63:0] zext_ln237_reg_7650_pp6_iter8_reg;
reg   [63:0] zext_ln237_reg_7650_pp6_iter9_reg;
reg   [63:0] zext_ln237_reg_7650_pp6_iter10_reg;
reg   [63:0] zext_ln237_reg_7650_pp6_iter11_reg;
reg   [63:0] zext_ln237_reg_7650_pp6_iter12_reg;
reg   [63:0] zext_ln237_reg_7650_pp6_iter13_reg;
reg   [63:0] zext_ln237_reg_7650_pp6_iter14_reg;
wire   [31:0] grp_fu_2592_p2;
reg   [31:0] tmp_11_reg_7660;
wire   [0:0] icmp_ln242_fu_5918_p2;
wire    ap_CS_fsm_pp7_stage0;
reg   [0:0] icmp_ln242_reg_7665_pp7_iter2_reg;
reg   [0:0] icmp_ln242_reg_7665_pp7_iter3_reg;
reg   [0:0] icmp_ln242_reg_7665_pp7_iter4_reg;
reg   [0:0] icmp_ln242_reg_7665_pp7_iter6_reg;
reg   [0:0] icmp_ln242_reg_7665_pp7_iter7_reg;
reg   [0:0] icmp_ln242_reg_7665_pp7_iter8_reg;
reg   [0:0] icmp_ln242_reg_7665_pp7_iter10_reg;
wire   [16:0] i_6_fu_5924_p2;
reg   [16:0] i_6_reg_7669;
reg    ap_enable_reg_pp7_iter0;
wire   [63:0] zext_ln247_fu_5945_p1;
reg   [63:0] zext_ln247_reg_7679;
reg   [63:0] zext_ln247_reg_7679_pp7_iter2_reg;
reg   [63:0] zext_ln247_reg_7679_pp7_iter3_reg;
reg   [63:0] zext_ln247_reg_7679_pp7_iter4_reg;
reg   [63:0] zext_ln247_reg_7679_pp7_iter5_reg;
reg   [63:0] zext_ln247_reg_7679_pp7_iter6_reg;
reg   [63:0] zext_ln247_reg_7679_pp7_iter7_reg;
reg   [63:0] zext_ln247_reg_7679_pp7_iter8_reg;
reg   [63:0] zext_ln247_reg_7679_pp7_iter9_reg;
reg   [63:0] zext_ln247_reg_7679_pp7_iter10_reg;
wire   [31:0] deg_inv_sqrt_q0;
reg   [31:0] deg_inv_sqrt_load_1_reg_7695;
wire   [31:0] deg_inv_sqrt_q1;
reg   [31:0] deg_inv_sqrt_load_reg_7710;
wire   [0:0] icmp_ln252_fu_5960_p2;
wire    ap_CS_fsm_pp8_stage0;
wire    ap_block_state100_pp8_stage0_iter0;
wire    ap_block_state121_pp8_stage0_iter1;
wire    ap_block_pp8_stage0_11001;
wire   [16:0] i_7_fu_5966_p2;
reg   [16:0] i_7_reg_7719;
wire   [31:0] norm_q0;
reg   [31:0] norm_load_reg_7739;
wire    ap_block_state101_pp8_stage1_iter0;
reg    ap_block_state122_pp8_stage1_iter1;
reg    ap_block_pp8_stage1_11001;
wire   [58:0] add_ln32_8_fu_6005_p2;
reg   [58:0] add_ln32_8_reg_7747;
reg   [63:0] gmem_addr_9_reg_7832;
wire    ap_block_state102_pp8_stage2_iter0;
reg    ap_block_state102_io;
reg    ap_block_pp8_stage2_11001;
wire   [31:0] x_mul_0_q0;
reg   [31:0] x_mul_0_load_reg_7839;
wire   [31:0] x_mul_1_q0;
reg   [31:0] x_mul_1_load_reg_7844;
wire   [31:0] x_mul_2_q0;
reg   [31:0] x_mul_2_load_reg_7849;
wire   [31:0] x_mul_3_q0;
reg   [31:0] x_mul_3_load_reg_7854;
wire   [31:0] x_mul_4_q0;
reg   [31:0] x_mul_4_load_reg_7859;
wire   [31:0] x_mul_5_q0;
reg   [31:0] x_mul_5_load_reg_7864;
wire   [31:0] x_mul_6_q0;
reg   [31:0] x_mul_6_load_reg_7869;
wire   [31:0] x_mul_7_q0;
reg   [31:0] x_mul_7_load_reg_7874;
wire   [31:0] x_mul_8_q0;
reg   [31:0] x_mul_8_load_reg_7879;
wire   [31:0] x_mul_9_q0;
reg   [31:0] x_mul_9_load_reg_7884;
wire   [31:0] x_mul_10_q0;
reg   [31:0] x_mul_10_load_reg_7889;
wire   [31:0] x_mul_11_q0;
reg   [31:0] x_mul_11_load_reg_7894;
wire   [31:0] x_mul_12_q0;
reg   [31:0] x_mul_12_load_reg_7899;
wire   [31:0] x_mul_13_q0;
reg   [31:0] x_mul_13_load_reg_7904;
wire   [31:0] x_mul_14_q0;
reg   [31:0] x_mul_14_load_reg_7909;
wire   [31:0] x_mul_15_q0;
reg   [31:0] x_mul_15_load_reg_7914;
wire   [31:0] grp_fu_2584_p2;
reg   [31:0] tmp_7_2_reg_7919;
wire   [31:0] grp_fu_2588_p2;
reg   [31:0] tmp_7_3_reg_7924;
reg   [31:0] tmp_7_4_reg_7929;
wire    ap_CS_fsm_pp8_stage7;
wire    ap_block_state107_pp8_stage7_iter0;
wire    ap_block_pp8_stage7_11001;
reg   [31:0] tmp_7_5_reg_7934;
reg   [31:0] tmp_7_6_reg_7939;
reg   [31:0] tmp_7_7_reg_7944;
reg   [31:0] tmp_7_8_reg_7949;
wire    ap_CS_fsm_pp8_stage8;
wire    ap_block_state108_pp8_stage8_iter0;
wire    ap_block_pp8_stage8_11001;
reg   [31:0] tmp_7_9_reg_7954;
reg   [31:0] tmp_7_s_reg_7959;
reg   [31:0] tmp_7_10_reg_7964;
wire   [31:0] trunc_ln162_fu_6040_p1;
reg   [31:0] trunc_ln162_reg_7969;
reg    ap_block_state109_pp8_stage9_iter0;
reg    ap_block_pp8_stage9_11001;
reg   [31:0] raw_bits_7_1_reg_7974;
reg   [31:0] raw_bits_7_2_reg_7979;
reg   [31:0] raw_bits_7_3_reg_7984;
reg   [31:0] raw_bits_7_4_reg_7989;
reg   [31:0] raw_bits_7_5_reg_7994;
reg   [31:0] raw_bits_7_6_reg_7999;
reg   [31:0] raw_bits_7_7_reg_8004;
reg   [31:0] raw_bits_7_8_reg_8009;
reg   [31:0] raw_bits_7_9_reg_8014;
reg   [31:0] raw_bits_7_s_reg_8019;
reg   [31:0] raw_bits_7_10_reg_8024;
reg   [31:0] raw_bits_7_11_reg_8029;
reg   [31:0] tmp_7_11_reg_8034;
reg   [31:0] raw_bits_7_12_reg_8039;
reg   [31:0] tmp_7_12_reg_8044;
reg   [31:0] raw_bits_7_13_reg_8049;
reg   [31:0] tmp_7_13_reg_8054;
reg   [31:0] raw_bits_7_14_reg_8059;
reg   [31:0] tmp_7_14_reg_8064;
wire   [31:0] bitcast_ln163_fu_6194_p1;
wire    ap_CS_fsm_pp8_stage10;
wire    ap_block_state110_pp8_stage10_iter0;
wire    ap_block_pp8_stage10_11001;
wire   [31:0] grp_fu_2515_p2;
reg   [31:0] tmp_0_1_reg_8149;
wire   [31:0] grp_fu_2519_p2;
reg   [31:0] tmp_0_2_reg_8154;
wire   [31:0] grp_fu_2523_p2;
reg   [31:0] tmp_0_3_reg_8159;
wire   [31:0] grp_fu_2527_p2;
reg   [31:0] tmp_0_4_reg_8164;
wire   [31:0] grp_fu_2531_p2;
reg   [31:0] tmp_0_5_reg_8169;
wire   [31:0] grp_fu_2535_p2;
reg   [31:0] tmp_0_6_reg_8174;
wire   [31:0] grp_fu_2539_p2;
reg   [31:0] tmp_0_7_reg_8179;
wire   [31:0] grp_fu_2543_p2;
reg   [31:0] tmp_0_8_reg_8184;
wire   [31:0] grp_fu_2547_p2;
reg   [31:0] tmp_0_9_reg_8189;
wire   [31:0] grp_fu_2551_p2;
reg   [31:0] tmp_0_s_reg_8194;
wire   [31:0] grp_fu_2555_p2;
reg   [31:0] tmp_0_10_reg_8199;
wire   [31:0] grp_fu_2559_p2;
reg   [31:0] tmp_0_11_reg_8204;
wire   [31:0] grp_fu_2563_p2;
reg   [31:0] tmp_0_12_reg_8209;
wire   [31:0] grp_fu_2567_p2;
reg   [31:0] tmp_0_13_reg_8214;
wire   [31:0] grp_fu_2571_p2;
reg   [31:0] tmp_0_14_reg_8219;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state14;
reg    ap_block_pp1_stage8_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state34;
wire    ap_block_state40_pp2_stage6_iter0;
wire    ap_block_pp2_stage6_subdone;
wire    ap_CS_fsm_pp2_stage6;
wire    ap_block_pp2_stage5_subdone;
wire    ap_CS_fsm_state55;
wire    grp_merlin_memcpy_2_0_fu_2502_ap_ready;
wire    grp_merlin_memcpy_2_0_fu_2502_ap_done;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state56;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp5_stage9_subdone;
wire    ap_CS_fsm_state67;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state68;
reg    ap_enable_reg_pp6_iter2;
reg    ap_enable_reg_pp6_iter3;
reg    ap_enable_reg_pp6_iter4;
reg    ap_enable_reg_pp6_iter5;
reg    ap_enable_reg_pp6_iter6;
reg    ap_enable_reg_pp6_iter7;
reg    ap_enable_reg_pp6_iter8;
reg    ap_enable_reg_pp6_iter9;
reg    ap_enable_reg_pp6_iter10;
reg    ap_enable_reg_pp6_iter11;
reg    ap_enable_reg_pp6_iter12;
reg    ap_enable_reg_pp6_iter13;
reg    ap_enable_reg_pp6_iter14;
reg    ap_enable_reg_pp6_iter15;
wire    ap_CS_fsm_state85;
wire    grp_merlin_memcpy_3_0_fu_2486_ap_ready;
wire    grp_merlin_memcpy_3_0_fu_2486_ap_done;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state86;
reg    ap_enable_reg_pp7_iter1;
reg    ap_enable_reg_pp7_iter3;
reg    ap_enable_reg_pp7_iter4;
reg    ap_enable_reg_pp7_iter5;
reg    ap_enable_reg_pp7_iter7;
reg    ap_enable_reg_pp7_iter8;
reg    ap_enable_reg_pp7_iter9;
reg    ap_enable_reg_pp7_iter11;
wire    ap_CS_fsm_state99;
wire    grp_merlin_memcpy_4_0_fu_2494_ap_ready;
wire    grp_merlin_memcpy_4_0_fu_2494_ap_done;
wire    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_exit_iter0_state100;
wire    ap_block_state120_pp8_stage20_iter0;
wire    ap_block_pp8_stage20_subdone;
wire    ap_CS_fsm_pp8_stage20;
reg    ap_block_pp8_stage1_subdone;
reg   [9:0] weight_buf_0_0_address0;
reg    weight_buf_0_0_ce0;
reg    weight_buf_0_0_we0;
wire   [31:0] weight_buf_0_0_d0;
wire   [31:0] weight_buf_0_0_q0;
wire   [9:0] weight_buf_0_0_address1;
reg    weight_buf_0_0_ce1;
reg    weight_buf_0_0_we1;
wire   [31:0] weight_buf_0_0_d1;
reg   [9:0] weight_buf_0_1_address0;
reg    weight_buf_0_1_ce0;
reg    weight_buf_0_1_we0;
wire   [31:0] weight_buf_0_1_d0;
wire   [31:0] weight_buf_0_1_q0;
wire   [9:0] weight_buf_0_1_address1;
reg    weight_buf_0_1_ce1;
reg    weight_buf_0_1_we1;
wire   [31:0] weight_buf_0_1_d1;
reg   [9:0] weight_buf_0_2_address0;
reg    weight_buf_0_2_ce0;
reg    weight_buf_0_2_we0;
wire   [31:0] weight_buf_0_2_d0;
wire   [31:0] weight_buf_0_2_q0;
wire   [9:0] weight_buf_0_2_address1;
reg    weight_buf_0_2_ce1;
reg    weight_buf_0_2_we1;
wire   [31:0] weight_buf_0_2_d1;
reg   [9:0] weight_buf_0_3_address0;
reg    weight_buf_0_3_ce0;
reg    weight_buf_0_3_we0;
wire   [31:0] weight_buf_0_3_d0;
wire   [31:0] weight_buf_0_3_q0;
wire   [9:0] weight_buf_0_3_address1;
reg    weight_buf_0_3_ce1;
reg    weight_buf_0_3_we1;
wire   [31:0] weight_buf_0_3_d1;
reg   [9:0] weight_buf_0_4_address0;
reg    weight_buf_0_4_ce0;
reg    weight_buf_0_4_we0;
wire   [31:0] weight_buf_0_4_d0;
wire   [31:0] weight_buf_0_4_q0;
wire   [9:0] weight_buf_0_4_address1;
reg    weight_buf_0_4_ce1;
reg    weight_buf_0_4_we1;
wire   [31:0] weight_buf_0_4_d1;
reg   [9:0] weight_buf_0_5_address0;
reg    weight_buf_0_5_ce0;
reg    weight_buf_0_5_we0;
wire   [31:0] weight_buf_0_5_d0;
wire   [31:0] weight_buf_0_5_q0;
wire   [9:0] weight_buf_0_5_address1;
reg    weight_buf_0_5_ce1;
reg    weight_buf_0_5_we1;
wire   [31:0] weight_buf_0_5_d1;
reg   [9:0] weight_buf_0_6_address0;
reg    weight_buf_0_6_ce0;
reg    weight_buf_0_6_we0;
wire   [31:0] weight_buf_0_6_d0;
wire   [31:0] weight_buf_0_6_q0;
wire   [9:0] weight_buf_0_6_address1;
reg    weight_buf_0_6_ce1;
reg    weight_buf_0_6_we1;
wire   [31:0] weight_buf_0_6_d1;
reg   [9:0] weight_buf_0_7_address0;
reg    weight_buf_0_7_ce0;
reg    weight_buf_0_7_we0;
wire   [31:0] weight_buf_0_7_d0;
wire   [31:0] weight_buf_0_7_q0;
wire   [9:0] weight_buf_0_7_address1;
reg    weight_buf_0_7_ce1;
reg    weight_buf_0_7_we1;
wire   [31:0] weight_buf_0_7_d1;
reg   [17:0] edge_index_buf_3_address0;
reg    edge_index_buf_3_ce0;
reg    edge_index_buf_3_we0;
wire   [31:0] edge_index_buf_3_q0;
wire   [17:0] edge_index_buf_3_address1;
reg    edge_index_buf_3_ce1;
wire   [31:0] edge_index_buf_3_q1;
reg   [17:0] edge_index_buf_2_address0;
reg    edge_index_buf_2_ce0;
reg    edge_index_buf_2_we0;
reg   [31:0] edge_index_buf_2_d0;
wire   [31:0] edge_index_buf_2_q0;
wire   [17:0] edge_index_buf_2_address1;
reg    edge_index_buf_2_ce1;
reg    edge_index_buf_2_we1;
wire   [31:0] edge_index_buf_2_d1;
reg   [17:0] edge_index_buf_1_address0;
reg    edge_index_buf_1_ce0;
reg    edge_index_buf_1_we0;
wire   [31:0] edge_index_buf_1_q0;
wire   [17:0] edge_index_buf_1_address1;
reg    edge_index_buf_1_ce1;
wire   [31:0] edge_index_buf_1_q1;
reg   [16:0] edge_index_buf_0_address0;
reg    edge_index_buf_0_ce0;
reg    edge_index_buf_0_we0;
wire   [31:0] edge_index_buf_0_q0;
reg   [16:0] edge_weight_address0;
reg    edge_weight_ce0;
reg    edge_weight_we0;
reg   [14:0] x_mul_0_address0;
reg    x_mul_0_ce0;
reg    x_mul_0_we0;
reg   [14:0] x_mul_1_address0;
reg    x_mul_1_ce0;
reg    x_mul_1_we0;
reg   [14:0] x_mul_2_address0;
reg    x_mul_2_ce0;
reg    x_mul_2_we0;
reg   [14:0] x_mul_3_address0;
reg    x_mul_3_ce0;
reg    x_mul_3_we0;
reg   [14:0] x_mul_4_address0;
reg    x_mul_4_ce0;
reg    x_mul_4_we0;
reg   [14:0] x_mul_5_address0;
reg    x_mul_5_ce0;
reg    x_mul_5_we0;
reg   [14:0] x_mul_6_address0;
reg    x_mul_6_ce0;
reg    x_mul_6_we0;
reg   [14:0] x_mul_7_address0;
reg    x_mul_7_ce0;
reg    x_mul_7_we0;
reg   [14:0] x_mul_8_address0;
reg    x_mul_8_ce0;
reg    x_mul_8_we0;
reg   [14:0] x_mul_9_address0;
reg    x_mul_9_ce0;
reg    x_mul_9_we0;
reg   [14:0] x_mul_10_address0;
reg    x_mul_10_ce0;
reg    x_mul_10_we0;
reg   [14:0] x_mul_11_address0;
reg    x_mul_11_ce0;
reg    x_mul_11_we0;
reg   [14:0] x_mul_12_address0;
reg    x_mul_12_ce0;
reg    x_mul_12_we0;
reg   [14:0] x_mul_13_address0;
reg    x_mul_13_ce0;
reg    x_mul_13_we0;
reg   [14:0] x_mul_14_address0;
reg    x_mul_14_ce0;
reg    x_mul_14_we0;
reg   [14:0] x_mul_15_address0;
reg    x_mul_15_ce0;
reg    x_mul_15_we0;
reg   [14:0] deg_address0;
reg    deg_ce0;
reg    deg_we0;
reg   [14:0] deg_inv_sqrt_address0;
reg    deg_inv_sqrt_ce0;
reg    deg_inv_sqrt_we0;
wire   [14:0] deg_inv_sqrt_address1;
reg    deg_inv_sqrt_ce1;
reg   [16:0] norm_address0;
reg    norm_ce0;
reg    norm_we0;
reg   [5:0] x_buf_0_0_address0;
reg    x_buf_0_0_ce0;
reg    x_buf_0_0_we0;
reg   [31:0] x_buf_0_0_d0;
reg   [5:0] x_buf_0_0_address1;
reg    x_buf_0_0_ce1;
reg    x_buf_0_0_we1;
reg   [31:0] x_buf_0_0_d1;
reg   [5:0] x_buf_0_1_address0;
reg    x_buf_0_1_ce0;
reg    x_buf_0_1_we0;
reg   [31:0] x_buf_0_1_d0;
reg   [5:0] x_buf_0_1_address1;
reg    x_buf_0_1_ce1;
reg    x_buf_0_1_we1;
reg   [31:0] x_buf_0_1_d1;
reg   [5:0] x_buf_0_2_address0;
reg    x_buf_0_2_ce0;
reg    x_buf_0_2_we0;
reg   [31:0] x_buf_0_2_d0;
reg   [5:0] x_buf_0_2_address1;
reg    x_buf_0_2_ce1;
reg    x_buf_0_2_we1;
reg   [31:0] x_buf_0_2_d1;
reg   [5:0] x_buf_0_3_address0;
reg    x_buf_0_3_ce0;
reg    x_buf_0_3_we0;
reg   [31:0] x_buf_0_3_d0;
reg   [5:0] x_buf_0_3_address1;
reg    x_buf_0_3_ce1;
reg    x_buf_0_3_we1;
reg   [31:0] x_buf_0_3_d1;
reg   [5:0] x_buf_0_4_address0;
reg    x_buf_0_4_ce0;
reg    x_buf_0_4_we0;
reg   [31:0] x_buf_0_4_d0;
reg   [5:0] x_buf_0_4_address1;
reg    x_buf_0_4_ce1;
reg    x_buf_0_4_we1;
reg   [31:0] x_buf_0_4_d1;
reg   [5:0] x_buf_0_5_address0;
reg    x_buf_0_5_ce0;
reg    x_buf_0_5_we0;
reg   [31:0] x_buf_0_5_d0;
reg   [5:0] x_buf_0_5_address1;
reg    x_buf_0_5_ce1;
reg    x_buf_0_5_we1;
reg   [31:0] x_buf_0_5_d1;
reg   [5:0] x_buf_0_6_address0;
reg    x_buf_0_6_ce0;
reg    x_buf_0_6_we0;
reg   [31:0] x_buf_0_6_d0;
reg   [5:0] x_buf_0_6_address1;
reg    x_buf_0_6_ce1;
reg    x_buf_0_6_we1;
reg   [31:0] x_buf_0_6_d1;
reg   [5:0] x_buf_0_7_address0;
reg    x_buf_0_7_ce0;
reg    x_buf_0_7_we0;
reg   [31:0] x_buf_0_7_d0;
reg   [5:0] x_buf_0_7_address1;
reg    x_buf_0_7_ce1;
reg    x_buf_0_7_we1;
reg   [31:0] x_buf_0_7_d1;
wire    grp_merlin_memcpy_1_0_0_fu_2470_ap_start;
wire    grp_merlin_memcpy_1_0_0_fu_2470_ap_done;
wire    grp_merlin_memcpy_1_0_0_fu_2470_ap_idle;
wire    grp_merlin_memcpy_1_0_0_fu_2470_ap_ready;
wire    grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWVALID;
wire   [63:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWADDR;
wire   [0:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWID;
wire   [31:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWLEN;
wire   [2:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWSIZE;
wire   [1:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWBURST;
wire   [1:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWLOCK;
wire   [3:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWCACHE;
wire   [2:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWPROT;
wire   [3:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWQOS;
wire   [3:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWREGION;
wire   [0:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWUSER;
wire    grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WVALID;
wire   [511:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WDATA;
wire   [63:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WSTRB;
wire    grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WLAST;
wire   [0:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WID;
wire   [0:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WUSER;
wire    grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARVALID;
wire   [63:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARADDR;
wire   [0:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARID;
wire   [31:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARLEN;
wire   [2:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARSIZE;
wire   [1:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARBURST;
wire   [1:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARLOCK;
wire   [3:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARCACHE;
wire   [2:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARPROT;
wire   [3:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARQOS;
wire   [3:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARREGION;
wire   [0:0] grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARUSER;
wire    grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_RREADY;
wire    grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_BREADY;
wire   [17:0] grp_merlin_memcpy_1_0_0_fu_2470_src_address0;
wire    grp_merlin_memcpy_1_0_0_fu_2470_src_ce0;
wire    grp_merlin_memcpy_1_0_0_fu_2470_ap_ext_blocking_n;
wire    grp_merlin_memcpy_1_0_0_fu_2470_ap_str_blocking_n;
wire    grp_merlin_memcpy_1_0_0_fu_2470_ap_int_blocking_n;
wire    grp_merlin_memcpy_0_0_fu_2478_ap_start;
wire    grp_merlin_memcpy_0_0_fu_2478_ap_done;
wire    grp_merlin_memcpy_0_0_fu_2478_ap_idle;
wire    grp_merlin_memcpy_0_0_fu_2478_ap_ready;
wire   [17:0] grp_merlin_memcpy_0_0_fu_2478_dst_address0;
wire    grp_merlin_memcpy_0_0_fu_2478_dst_ce0;
wire    grp_merlin_memcpy_0_0_fu_2478_dst_we0;
wire   [31:0] grp_merlin_memcpy_0_0_fu_2478_dst_d0;
wire    grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWVALID;
wire   [63:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWADDR;
wire   [0:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWID;
wire   [31:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWLEN;
wire   [2:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWSIZE;
wire   [1:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWBURST;
wire   [1:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWLOCK;
wire   [3:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWCACHE;
wire   [2:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWPROT;
wire   [3:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWQOS;
wire   [3:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWREGION;
wire   [0:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWUSER;
wire    grp_merlin_memcpy_0_0_fu_2478_m_axi_src_WVALID;
wire   [511:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_WDATA;
wire   [63:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_WSTRB;
wire    grp_merlin_memcpy_0_0_fu_2478_m_axi_src_WLAST;
wire   [0:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_WID;
wire   [0:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_WUSER;
wire    grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARVALID;
wire   [63:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARADDR;
wire   [0:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARID;
wire   [31:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARLEN;
wire   [2:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARSIZE;
wire   [1:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARBURST;
wire   [1:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARLOCK;
wire   [3:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARCACHE;
wire   [2:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARPROT;
wire   [3:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARQOS;
wire   [3:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARREGION;
wire   [0:0] grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARUSER;
wire    grp_merlin_memcpy_0_0_fu_2478_m_axi_src_RREADY;
wire    grp_merlin_memcpy_0_0_fu_2478_m_axi_src_BREADY;
wire    grp_merlin_memcpy_0_0_fu_2478_ap_ext_blocking_n;
wire    grp_merlin_memcpy_0_0_fu_2478_ap_str_blocking_n;
wire    grp_merlin_memcpy_0_0_fu_2478_ap_int_blocking_n;
wire    grp_merlin_memcpy_3_0_fu_2486_ap_start;
wire    grp_merlin_memcpy_3_0_fu_2486_ap_idle;
wire   [17:0] grp_merlin_memcpy_3_0_fu_2486_dst_address0;
wire    grp_merlin_memcpy_3_0_fu_2486_dst_ce0;
wire    grp_merlin_memcpy_3_0_fu_2486_dst_we0;
wire   [31:0] grp_merlin_memcpy_3_0_fu_2486_dst_d0;
wire    grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWVALID;
wire   [63:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWADDR;
wire   [0:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWID;
wire   [31:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWLEN;
wire   [2:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWSIZE;
wire   [1:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWBURST;
wire   [1:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWLOCK;
wire   [3:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWCACHE;
wire   [2:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWPROT;
wire   [3:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWQOS;
wire   [3:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWREGION;
wire   [0:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWUSER;
wire    grp_merlin_memcpy_3_0_fu_2486_m_axi_src_WVALID;
wire   [511:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_WDATA;
wire   [63:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_WSTRB;
wire    grp_merlin_memcpy_3_0_fu_2486_m_axi_src_WLAST;
wire   [0:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_WID;
wire   [0:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_WUSER;
wire    grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARVALID;
wire   [63:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARADDR;
wire   [0:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARID;
wire   [31:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARLEN;
wire   [2:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARSIZE;
wire   [1:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARBURST;
wire   [1:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARLOCK;
wire   [3:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARCACHE;
wire   [2:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARPROT;
wire   [3:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARQOS;
wire   [3:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARREGION;
wire   [0:0] grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARUSER;
wire    grp_merlin_memcpy_3_0_fu_2486_m_axi_src_RREADY;
wire    grp_merlin_memcpy_3_0_fu_2486_m_axi_src_BREADY;
wire    grp_merlin_memcpy_3_0_fu_2486_ap_ext_blocking_n;
wire    grp_merlin_memcpy_3_0_fu_2486_ap_str_blocking_n;
wire    grp_merlin_memcpy_3_0_fu_2486_ap_int_blocking_n;
wire    grp_merlin_memcpy_4_0_fu_2494_ap_start;
wire    grp_merlin_memcpy_4_0_fu_2494_ap_idle;
wire   [17:0] grp_merlin_memcpy_4_0_fu_2494_dst_address0;
wire    grp_merlin_memcpy_4_0_fu_2494_dst_ce0;
wire    grp_merlin_memcpy_4_0_fu_2494_dst_we0;
wire   [31:0] grp_merlin_memcpy_4_0_fu_2494_dst_d0;
wire    grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWVALID;
wire   [63:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWADDR;
wire   [0:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWID;
wire   [31:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWLEN;
wire   [2:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWSIZE;
wire   [1:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWBURST;
wire   [1:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWLOCK;
wire   [3:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWCACHE;
wire   [2:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWPROT;
wire   [3:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWQOS;
wire   [3:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWREGION;
wire   [0:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWUSER;
wire    grp_merlin_memcpy_4_0_fu_2494_m_axi_src_WVALID;
wire   [511:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_WDATA;
wire   [63:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_WSTRB;
wire    grp_merlin_memcpy_4_0_fu_2494_m_axi_src_WLAST;
wire   [0:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_WID;
wire   [0:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_WUSER;
wire    grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARVALID;
wire   [63:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARADDR;
wire   [0:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARID;
wire   [31:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARLEN;
wire   [2:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARSIZE;
wire   [1:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARBURST;
wire   [1:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARLOCK;
wire   [3:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARCACHE;
wire   [2:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARPROT;
wire   [3:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARQOS;
wire   [3:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARREGION;
wire   [0:0] grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARUSER;
wire    grp_merlin_memcpy_4_0_fu_2494_m_axi_src_RREADY;
wire    grp_merlin_memcpy_4_0_fu_2494_m_axi_src_BREADY;
wire    grp_merlin_memcpy_4_0_fu_2494_ap_ext_blocking_n;
wire    grp_merlin_memcpy_4_0_fu_2494_ap_str_blocking_n;
wire    grp_merlin_memcpy_4_0_fu_2494_ap_int_blocking_n;
wire    grp_merlin_memcpy_2_0_fu_2502_ap_start;
wire    grp_merlin_memcpy_2_0_fu_2502_ap_idle;
wire   [16:0] grp_merlin_memcpy_2_0_fu_2502_dst_address0;
wire    grp_merlin_memcpy_2_0_fu_2502_dst_ce0;
wire    grp_merlin_memcpy_2_0_fu_2502_dst_we0;
wire   [31:0] grp_merlin_memcpy_2_0_fu_2502_dst_d0;
wire    grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWVALID;
wire   [63:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWADDR;
wire   [0:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWID;
wire   [31:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWLEN;
wire   [2:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWSIZE;
wire   [1:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWBURST;
wire   [1:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWLOCK;
wire   [3:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWCACHE;
wire   [2:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWPROT;
wire   [3:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWQOS;
wire   [3:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWREGION;
wire   [0:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWUSER;
wire    grp_merlin_memcpy_2_0_fu_2502_m_axi_src_WVALID;
wire   [511:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_WDATA;
wire   [63:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_WSTRB;
wire    grp_merlin_memcpy_2_0_fu_2502_m_axi_src_WLAST;
wire   [0:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_WID;
wire   [0:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_WUSER;
wire    grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARVALID;
wire   [63:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARADDR;
wire   [0:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARID;
wire   [31:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARLEN;
wire   [2:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARSIZE;
wire   [1:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARBURST;
wire   [1:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARLOCK;
wire   [3:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARCACHE;
wire   [2:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARPROT;
wire   [3:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARQOS;
wire   [3:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARREGION;
wire   [0:0] grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARUSER;
wire    grp_merlin_memcpy_2_0_fu_2502_m_axi_src_RREADY;
wire    grp_merlin_memcpy_2_0_fu_2502_m_axi_src_BREADY;
wire    grp_merlin_memcpy_2_0_fu_2502_ap_ext_blocking_n;
wire    grp_merlin_memcpy_2_0_fu_2502_ap_str_blocking_n;
wire    grp_merlin_memcpy_2_0_fu_2502_ap_int_blocking_n;
reg   [14:0] i_0_reg_2295;
wire    ap_CS_fsm_state12;
reg   [25:0] phi_mul_reg_2307;
reg   [5:0] ap_phi_mux_i_0_i28_phi_fu_2322_p4;
reg   [4:0] j_0_reg_2330;
wire    ap_CS_fsm_state48;
reg   [8:0] ap_phi_mux_k_0_phi_fu_2346_p4;
wire    ap_block_pp2_stage0;
reg   [31:0] ap_phi_reg_pp2_iter0_phi_ln187_reg_2381;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_state36_pp2_stage2_iter0;
wire    ap_block_state43_pp2_stage2_iter1;
wire    ap_block_pp2_stage2_11001;
reg   [14:0] i1_0_reg_2403;
wire    ap_CS_fsm_state49;
wire   [0:0] icmp_ln195_fu_5819_p2;
reg   [16:0] i3_0_reg_2414;
wire    ap_CS_fsm_state52;
wire   [0:0] icmp_ln213_fu_5861_p2;
reg   [16:0] ap_phi_mux_i4_0_phi_fu_2429_p4;
wire    ap_block_pp5_stage0;
reg   [16:0] ap_phi_mux_i6_0_phi_fu_2451_p4;
wire    ap_block_pp7_stage0;
reg   [16:0] ap_phi_mux_i7_0_phi_fu_2463_p4;
wire    ap_block_pp8_stage0;
reg    grp_merlin_memcpy_1_0_0_fu_2470_ap_start_reg;
wire    ap_CS_fsm_state51;
reg    grp_merlin_memcpy_0_0_fu_2478_ap_start_reg;
reg    grp_merlin_memcpy_3_0_fu_2486_ap_start_reg;
wire    ap_CS_fsm_state84;
reg    grp_merlin_memcpy_4_0_fu_2494_ap_start_reg;
wire    ap_CS_fsm_state98;
reg    grp_merlin_memcpy_2_0_fu_2502_ap_start_reg;
wire    ap_CS_fsm_state54;
wire   [63:0] zext_ln1111_1_fu_3099_p1;
wire   [63:0] zext_ln1111_3_fu_3159_p1;
wire   [63:0] zext_ln3556_fu_4324_p1;
wire   [63:0] zext_ln3556_1_fu_4349_p1;
wire   [63:0] zext_ln3556_2_fu_4374_p1;
wire   [63:0] zext_ln3556_3_fu_4383_p1;
wire   [63:0] zext_ln3556_4_fu_4408_p1;
wire   [63:0] zext_ln3556_5_fu_4433_p1;
wire   [63:0] zext_ln3556_6_fu_4458_p1;
wire   [63:0] zext_ln3556_7_fu_4467_p1;
wire   [63:0] zext_ln3520_fu_4486_p1;
wire   [63:0] zext_ln3520_1_fu_4511_p1;
wire   [63:0] zext_ln3520_2_fu_4536_p1;
wire   [63:0] zext_ln3520_3_fu_4561_p1;
wire   [63:0] zext_ln3520_4_fu_4570_p1;
wire   [63:0] zext_ln3520_5_fu_4579_p1;
wire   [63:0] zext_ln3520_6_fu_4588_p1;
wire   [63:0] zext_ln3520_7_fu_4597_p1;
wire   [63:0] zext_ln3472_fu_4632_p1;
wire   [63:0] zext_ln3472_1_fu_4657_p1;
wire   [63:0] zext_ln3472_2_fu_4682_p1;
wire   [63:0] zext_ln3472_3_fu_4707_p1;
wire   [63:0] zext_ln3472_4_fu_4716_p1;
wire   [63:0] zext_ln3472_5_fu_4725_p1;
wire   [63:0] zext_ln3472_6_fu_4734_p1;
wire   [63:0] zext_ln3472_7_fu_4743_p1;
wire   [63:0] zext_ln3424_fu_4788_p1;
wire   [63:0] zext_ln3424_1_fu_4813_p1;
wire   [63:0] zext_ln3424_2_fu_4838_p1;
wire   [63:0] zext_ln3424_3_fu_4863_p1;
wire   [63:0] zext_ln3376_fu_4896_p1;
wire   [63:0] zext_ln3376_1_fu_4946_p1;
wire   [63:0] zext_ln3376_2_fu_4991_p1;
wire   [63:0] zext_ln3556_8_fu_5000_p1;
wire   [63:0] zext_ln3556_9_fu_5009_p1;
wire   [63:0] zext_ln3556_10_fu_5018_p1;
wire   [63:0] zext_ln3556_11_fu_5027_p1;
wire   [63:0] zext_ln3556_12_fu_5036_p1;
wire   [63:0] zext_ln3556_13_fu_5045_p1;
wire   [63:0] zext_ln3556_14_fu_5054_p1;
wire   [63:0] zext_ln3556_15_fu_5071_p1;
wire   [63:0] zext_ln3520_8_fu_5080_p1;
wire   [63:0] zext_ln3520_9_fu_5089_p1;
wire   [63:0] zext_ln3520_10_fu_5098_p1;
wire   [63:0] zext_ln3520_11_fu_5107_p1;
wire   [63:0] zext_ln3520_12_fu_5124_p1;
wire   [63:0] zext_ln3472_8_fu_5151_p1;
wire   [63:0] zext_ln3424_4_fu_5178_p1;
wire   [63:0] zext_ln3520_13_fu_5205_p1;
wire   [63:0] zext_ln3472_9_fu_5232_p1;
wire   [63:0] zext_ln3424_5_fu_5259_p1;
wire   [63:0] zext_ln3520_14_fu_5286_p1;
wire   [63:0] zext_ln3472_10_fu_5313_p1;
wire   [63:0] zext_ln3424_6_fu_5340_p1;
wire   [63:0] zext_ln3520_15_fu_5367_p1;
wire   [63:0] zext_ln3472_11_fu_5384_p1;
wire   [63:0] zext_ln3424_7_fu_5411_p1;
wire   [63:0] zext_ln3472_12_fu_5498_p1;
wire   [63:0] zext_ln3424_8_fu_5525_p1;
wire   [63:0] zext_ln3424_9_fu_5555_p1;
wire   [63:0] zext_ln3472_13_fu_5592_p1;
wire   [63:0] zext_ln3424_10_fu_5625_p1;
wire   [63:0] zext_ln3472_14_fu_5642_p1;
wire   [63:0] zext_ln3472_15_fu_5669_p1;
wire   [63:0] zext_ln189_fu_5673_p1;
wire   [63:0] zext_ln187_3_fu_5756_p1;
wire   [63:0] zext_ln187_2_fu_5782_p1;
wire   [63:0] zext_ln207_fu_5837_p1;
wire   [63:0] zext_ln207_2_fu_5856_p1;
wire   [63:0] zext_ln218_fu_5873_p1;
wire   [63:0] zext_ln228_fu_5890_p1;
wire  signed [63:0] sext_ln228_fu_5896_p1;
wire    ap_block_pp5_stage1;
wire    ap_block_pp6_stage0;
wire   [63:0] zext_ln247_1_fu_5940_p1;
wire  signed [63:0] sext_ln247_1_fu_5950_p1;
wire  signed [63:0] sext_ln247_fu_5955_p1;
wire   [63:0] zext_ln265_fu_5982_p1;
wire   [63:0] zext_ln266_fu_5987_p1;
wire  signed [63:0] sext_ln266_fu_6010_p1;
wire   [63:0] empty_fu_2883_p1;
wire   [63:0] zext_ln32_6_fu_3511_p1;
wire   [63:0] zext_ln32_5_fu_3522_p1;
wire   [63:0] zext_ln32_3_fu_3533_p1;
wire   [63:0] zext_ln32_2_fu_3544_p1;
wire   [63:0] zext_ln32_1_fu_3555_p1;
wire   [63:0] zext_ln32_26_fu_3565_p1;
wire   [63:0] zext_ln32_19_fu_3576_p1;
wire   [63:0] zext_ln32_13_fu_3587_p1;
wire   [63:0] zext_ln32_4_fu_3598_p1;
wire   [63:0] zext_ln32_21_fu_3609_p1;
wire   [63:0] zext_ln32_15_fu_3620_p1;
wire   [63:0] zext_ln32_7_fu_3631_p1;
wire   [63:0] zext_ln32_23_fu_3642_p1;
wire   [63:0] zext_ln32_16_fu_3653_p1;
wire   [63:0] zext_ln32_8_fu_3664_p1;
wire   [63:0] zext_ln32_25_fu_3675_p1;
wire   [63:0] zext_ln32_17_fu_3686_p1;
wire   [63:0] zext_ln32_11_fu_3697_p1;
wire   [63:0] zext_ln32_18_fu_3708_p1;
wire   [63:0] zext_ln32_12_fu_3719_p1;
wire   [63:0] zext_ln32_20_fu_3730_p1;
wire   [63:0] zext_ln32_14_fu_3745_p1;
wire   [63:0] zext_ln32_22_fu_4088_p1;
wire   [63:0] zext_ln32_24_fu_4758_p1;
wire   [63:0] zext_ln32_10_fu_6030_p1;
wire    ap_block_state117_pp8_stage17_iter0;
reg    ap_block_state117_io;
reg    ap_block_pp8_stage17_11001;
wire   [511:0] tmp_16_fu_6307_p17;
wire    ap_block_pp8_stage17_01001;
wire   [31:0] bitcast_ln3556_fu_4304_p1;
wire   [31:0] bitcast_ln3520_5_fu_4575_p1;
wire   [31:0] bitcast_ln3472_1_fu_4637_p1;
wire   [31:0] bitcast_ln3376_1_fu_4908_p1;
wire   [31:0] bitcast_ln3376_9_fu_4957_p1;
wire   [31:0] bitcast_ln3556_8_fu_4996_p1;
wire   [31:0] bitcast_ln3520_13_fu_5193_p1;
wire   [31:0] bitcast_ln3472_9_fu_5220_p1;
wire   [31:0] bitcast_ln3424_5_fu_5247_p1;
wire   [31:0] bitcast_ln3424_13_fu_5562_p1;
wire   [31:0] bitcast_ln3556_1_fu_4329_p1;
wire   [31:0] bitcast_ln3520_6_fu_4584_p1;
wire   [31:0] bitcast_ln3472_2_fu_4662_p1;
wire   [31:0] bitcast_ln3376_2_fu_4912_p1;
wire   [31:0] bitcast_ln3376_10_fu_4961_p1;
wire   [31:0] bitcast_ln3556_9_fu_5005_p1;
wire   [31:0] bitcast_ln3520_14_fu_5274_p1;
wire   [31:0] bitcast_ln3472_10_fu_5301_p1;
wire   [31:0] bitcast_ln3424_6_fu_5328_p1;
wire   [31:0] bitcast_ln3424_14_fu_5566_p1;
wire   [31:0] bitcast_ln3556_2_fu_4354_p1;
wire   [31:0] bitcast_ln3520_7_fu_4593_p1;
wire   [31:0] bitcast_ln3472_3_fu_4687_p1;
wire   [31:0] bitcast_ln3376_3_fu_4916_p1;
wire   [31:0] bitcast_ln3376_11_fu_4965_p1;
wire   [31:0] bitcast_ln3556_10_fu_5014_p1;
wire   [31:0] bitcast_ln3520_15_fu_5355_p1;
wire   [31:0] bitcast_ln3472_11_fu_5372_p1;
wire   [31:0] bitcast_ln3424_7_fu_5399_p1;
wire   [31:0] bitcast_ln3424_15_fu_5607_p1;
wire   [31:0] bitcast_ln3556_3_fu_4379_p1;
wire   [31:0] bitcast_ln3520_fu_4482_p1;
wire   [31:0] bitcast_ln3472_4_fu_4712_p1;
wire   [31:0] bitcast_ln3424_fu_4768_p1;
wire   [31:0] bitcast_ln3376_4_fu_4920_p1;
wire   [31:0] bitcast_ln3376_12_fu_4969_p1;
wire   [31:0] bitcast_ln3556_11_fu_5023_p1;
wire   [31:0] bitcast_ln3520_8_fu_5076_p1;
wire   [31:0] bitcast_ln3472_12_fu_5486_p1;
wire   [31:0] bitcast_ln3424_8_fu_5513_p1;
wire   [31:0] bitcast_ln3556_4_fu_4388_p1;
wire   [31:0] bitcast_ln3520_1_fu_4491_p1;
wire   [31:0] bitcast_ln3472_5_fu_4721_p1;
wire   [31:0] bitcast_ln3424_1_fu_4793_p1;
wire   [31:0] bitcast_ln3376_5_fu_4924_p1;
wire   [31:0] bitcast_ln3376_13_fu_4973_p1;
wire   [31:0] bitcast_ln3556_12_fu_5032_p1;
wire   [31:0] bitcast_ln3520_9_fu_5085_p1;
wire   [31:0] bitcast_ln3424_9_fu_5533_p1;
wire   [31:0] bitcast_ln3472_13_fu_5580_p1;
wire   [31:0] bitcast_ln3556_5_fu_4413_p1;
wire   [31:0] bitcast_ln3520_2_fu_4516_p1;
wire   [31:0] bitcast_ln3472_6_fu_4730_p1;
wire   [31:0] bitcast_ln3424_2_fu_4818_p1;
wire   [31:0] bitcast_ln3376_6_fu_4928_p1;
wire   [31:0] bitcast_ln3376_14_fu_4977_p1;
wire   [31:0] bitcast_ln3556_13_fu_5041_p1;
wire   [31:0] bitcast_ln3520_10_fu_5094_p1;
wire   [31:0] bitcast_ln3424_10_fu_5537_p1;
wire   [31:0] bitcast_ln3472_14_fu_5630_p1;
wire   [31:0] bitcast_ln3556_6_fu_4438_p1;
wire   [31:0] bitcast_ln3520_3_fu_4541_p1;
wire   [31:0] bitcast_ln3472_7_fu_4739_p1;
wire   [31:0] bitcast_ln3424_3_fu_4843_p1;
wire   [31:0] bitcast_ln3376_7_fu_4932_p1;
wire   [31:0] bitcast_ln3376_15_fu_4981_p1;
wire   [31:0] bitcast_ln3556_14_fu_5050_p1;
wire   [31:0] bitcast_ln3520_11_fu_5103_p1;
wire   [31:0] bitcast_ln3424_11_fu_5541_p1;
wire   [31:0] bitcast_ln3472_15_fu_5665_p1;
wire   [31:0] bitcast_ln3556_7_fu_4463_p1;
wire   [31:0] bitcast_ln3520_4_fu_4566_p1;
wire   [31:0] bitcast_ln3472_fu_4612_p1;
wire   [31:0] bitcast_ln3376_fu_4878_p1;
wire   [31:0] bitcast_ln3376_8_fu_4936_p1;
wire   [31:0] bitcast_ln3556_15_fu_5059_p1;
wire   [31:0] bitcast_ln3520_12_fu_5112_p1;
wire   [31:0] bitcast_ln3472_8_fu_5139_p1;
wire   [31:0] bitcast_ln3424_4_fu_5166_p1;
wire   [31:0] bitcast_ln3424_12_fu_5545_p1;
wire    ap_CS_fsm_state47;
wire   [3:0] trunc_ln189_fu_5815_p1;
wire   [31:0] zext_ln195_fu_5831_p1;
reg   [31:0] grp_fu_2510_p0;
reg   [31:0] grp_fu_2510_p1;
wire    ap_block_pp2_stage6;
wire    ap_CS_fsm_pp5_stage3;
wire    ap_block_pp5_stage3;
wire    ap_block_pp8_stage10;
wire   [31:0] grp_fu_2515_p0;
wire   [31:0] grp_fu_2519_p0;
wire   [31:0] grp_fu_2523_p0;
wire   [31:0] grp_fu_2527_p0;
wire   [31:0] grp_fu_2531_p0;
wire   [31:0] grp_fu_2535_p0;
wire   [31:0] grp_fu_2539_p0;
wire   [31:0] grp_fu_2543_p0;
wire   [31:0] grp_fu_2547_p0;
wire   [31:0] grp_fu_2551_p0;
wire   [31:0] grp_fu_2555_p0;
wire   [31:0] grp_fu_2559_p0;
wire   [31:0] grp_fu_2563_p0;
wire   [31:0] grp_fu_2567_p0;
wire   [31:0] grp_fu_2571_p0;
reg   [31:0] grp_fu_2575_p0;
reg   [31:0] grp_fu_2575_p1;
wire    ap_block_pp2_stage2;
wire    ap_CS_fsm_pp8_stage3;
wire    ap_block_pp8_stage3;
wire    ap_CS_fsm_pp8_stage4;
wire    ap_block_pp8_stage4;
wire    ap_CS_fsm_pp8_stage5;
wire    ap_block_pp8_stage5;
wire    ap_block_pp8_stage6;
reg   [31:0] grp_fu_2580_p0;
reg   [31:0] grp_fu_2580_p1;
reg   [31:0] grp_fu_2584_p1;
reg   [31:0] grp_fu_2588_p1;
wire   [63:0] zext_ln3363_1_fu_3476_p1;
wire   [9:0] grp_fu_2669_p2;
wire   [9:0] grp_fu_2684_p2;
reg   [9:0] grp_fu_2699_p0;
wire   [9:0] grp_fu_2699_p2;
reg   [9:0] grp_fu_2714_p0;
wire   [9:0] grp_fu_2714_p2;
reg   [9:0] grp_fu_2729_p0;
wire   [9:0] grp_fu_2729_p2;
reg   [9:0] grp_fu_2744_p0;
wire   [9:0] grp_fu_2744_p2;
reg   [9:0] grp_fu_2759_p0;
wire   [9:0] grp_fu_2759_p2;
reg   [9:0] grp_fu_2774_p0;
wire   [9:0] grp_fu_2774_p2;
reg   [9:0] grp_fu_2789_p0;
wire   [9:0] grp_fu_2789_p2;
wire   [1:0] trunc_ln1111_fu_3077_p1;
wire   [2:0] shl_ln_fu_3081_p3;
wire   [10:0] tmp_17_fu_3065_p3;
wire   [10:0] zext_ln1111_fu_3089_p1;
wire   [10:0] add_ln1111_fu_3093_p2;
wire   [2:0] or_ln1111_fu_3143_p2;
wire   [10:0] zext_ln1111_2_fu_3149_p1;
wire   [10:0] add_ln1111_1_fu_3153_p2;
wire   [0:0] icmp_ln1113_fu_3199_p2;
wire   [9:0] index2_fu_3205_p2;
wire   [63:0] index1_fu_3211_p2;
wire   [3:0] head_align_fu_3261_p4;
wire   [23:0] trunc_ln_fu_3251_p4;
wire   [23:0] add_ln3342_fu_3291_p2;
wire   [19:0] end_fu_3297_p4;
wire   [5:0] trunc_ln2_fu_3311_p4;
wire   [5:0] trunc_ln3347_1_fu_3321_p4;
wire   [5:0] sub_ln3347_fu_3337_p2;
wire   [63:0] start_fu_3287_p1;
wire   [63:0] zext_ln3342_fu_3307_p1;
wire   [63:0] xor_ln3553_fu_3369_p2;
wire   [3:0] tail_align_fu_3271_p2;
wire   [0:0] tmp_21_fu_3411_p3;
wire   [19:0] zext_ln3363_fu_3472_p1;
wire   [19:0] add_ln3423_fu_3487_p2;
wire   [19:0] add_ln3375_fu_3497_p2;
wire   [58:0] zext_ln32_fu_3502_p1;
wire   [9:0] add_ln3556_fu_4308_p2;
wire   [6:0] lshr_ln5_fu_4314_p4;
wire   [9:0] add_ln3556_1_fu_4333_p2;
wire   [6:0] lshr_ln3556_1_fu_4339_p4;
wire   [9:0] add_ln3556_2_fu_4358_p2;
wire   [6:0] lshr_ln3556_2_fu_4364_p4;
wire   [6:0] grp_fu_2674_p4;
wire   [9:0] add_ln3556_4_fu_4392_p2;
wire   [6:0] lshr_ln3556_4_fu_4398_p4;
wire   [9:0] add_ln3556_5_fu_4417_p2;
wire   [6:0] lshr_ln3556_5_fu_4423_p4;
wire   [9:0] add_ln3556_6_fu_4442_p2;
wire   [6:0] lshr_ln3556_6_fu_4448_p4;
wire   [6:0] grp_fu_2689_p4;
wire   [9:0] add_ln3520_1_fu_4495_p2;
wire   [6:0] lshr_ln3520_1_fu_4501_p4;
wire   [9:0] add_ln3520_2_fu_4520_p2;
wire   [6:0] lshr_ln3520_2_fu_4526_p4;
wire   [9:0] add_ln3520_3_fu_4545_p2;
wire   [6:0] lshr_ln3520_3_fu_4551_p4;
wire   [6:0] grp_fu_2704_p4;
wire   [6:0] grp_fu_2719_p4;
wire   [6:0] grp_fu_2734_p4;
wire   [9:0] add_ln3472_fu_4616_p2;
wire   [6:0] lshr_ln3_fu_4622_p4;
wire   [9:0] add_ln3472_1_fu_4641_p2;
wire   [6:0] lshr_ln3472_1_fu_4647_p4;
wire   [9:0] add_ln3472_2_fu_4666_p2;
wire   [6:0] lshr_ln3472_2_fu_4672_p4;
wire   [9:0] add_ln3472_3_fu_4691_p2;
wire   [6:0] lshr_ln3472_3_fu_4697_p4;
wire   [6:0] grp_fu_2749_p4;
wire   [6:0] grp_fu_2764_p4;
wire   [6:0] grp_fu_2779_p4;
wire   [6:0] grp_fu_2794_p4;
wire   [9:0] add_ln3424_fu_4772_p2;
wire   [6:0] lshr_ln1_fu_4778_p4;
wire   [9:0] add_ln3424_1_fu_4797_p2;
wire   [6:0] lshr_ln3424_1_fu_4803_p4;
wire   [9:0] add_ln3424_2_fu_4822_p2;
wire   [6:0] lshr_ln3424_2_fu_4828_p4;
wire   [9:0] add_ln3424_3_fu_4847_p2;
wire   [6:0] lshr_ln3424_3_fu_4853_p4;
wire   [6:0] shl_ln1_fu_4882_p3;
wire   [5:0] shl_ln3376_fu_4890_p2;
wire   [5:0] or_ln3376_fu_4940_p2;
wire   [5:0] or_ln3376_1_fu_4985_p2;
wire   [6:0] shl_ln5_fu_5063_p3;
wire   [6:0] shl_ln4_fu_5116_p3;
wire   [6:0] shl_ln3_fu_5143_p3;
wire   [6:0] shl_ln3424_1_fu_5170_p3;
wire   [6:0] shl_ln3520_1_fu_5197_p3;
wire   [6:0] shl_ln3472_1_fu_5224_p3;
wire   [6:0] shl_ln3424_2_fu_5251_p3;
wire   [6:0] shl_ln3520_2_fu_5278_p3;
wire   [6:0] shl_ln3472_2_fu_5305_p3;
wire   [6:0] shl_ln3424_3_fu_5332_p3;
wire   [6:0] shl_ln3520_3_fu_5359_p3;
wire   [6:0] shl_ln3472_3_fu_5376_p3;
wire   [6:0] shl_ln3424_4_fu_5403_p3;
wire   [6:0] shl_ln3472_4_fu_5490_p3;
wire   [6:0] shl_ln3424_5_fu_5517_p3;
wire   [6:0] or_ln3424_fu_5549_p2;
wire   [6:0] shl_ln3472_5_fu_5584_p3;
wire   [6:0] shl_ln3424_6_fu_5611_p3;
wire   [6:0] or_ln3424_1_fu_5619_p2;
wire   [6:0] shl_ln3472_6_fu_5634_p3;
wire   [2:0] trunc_ln187_fu_5705_p1;
wire   [1:0] tmp_22_fu_5713_p4;
wire   [9:0] tmp_20_fu_5739_p3;
wire   [10:0] zext_ln187_1_fu_5747_p1;
wire   [10:0] add_ln187_fu_5751_p2;
wire   [5:0] lshr_ln2_fu_5772_p4;
wire    ap_block_pp2_stage1;
wire   [15:0] zext_ln207_1_fu_5842_p1;
wire   [15:0] add_ln207_fu_5846_p2;
wire  signed [16:0] sext_ln207_fu_5852_p1;
wire   [17:0] zext_ln242_fu_5930_p1;
wire   [17:0] add_ln247_fu_5934_p2;
wire   [17:0] zext_ln252_fu_5972_p1;
wire   [17:0] add_ln265_fu_5976_p2;
wire   [25:0] trunc_ln160_fu_5993_p1;
wire  signed [57:0] sext_ln160_fu_5997_p1;
wire   [58:0] zext_ln32_9_fu_6001_p1;
wire   [31:0] bitcast_ln177_15_fu_6304_p1;
wire   [31:0] bitcast_ln177_14_fu_6301_p1;
wire   [31:0] bitcast_ln177_13_fu_6298_p1;
wire   [31:0] bitcast_ln177_12_fu_6295_p1;
wire   [31:0] bitcast_ln177_11_fu_6292_p1;
wire   [31:0] bitcast_ln177_10_fu_6289_p1;
wire   [31:0] bitcast_ln177_9_fu_6286_p1;
wire   [31:0] bitcast_ln177_8_fu_6283_p1;
wire   [31:0] bitcast_ln177_7_fu_6280_p1;
wire   [31:0] bitcast_ln177_6_fu_6277_p1;
wire   [31:0] bitcast_ln177_5_fu_6274_p1;
wire   [31:0] bitcast_ln177_4_fu_6271_p1;
wire   [31:0] bitcast_ln177_3_fu_6268_p1;
wire   [31:0] bitcast_ln177_2_fu_6265_p1;
wire   [31:0] bitcast_ln177_1_fu_6262_p1;
wire   [31:0] bitcast_ln177_fu_6258_p1;
reg    grp_fu_2510_ce;
wire    ap_block_pp2_stage6_11001;
wire    ap_block_state37_pp2_stage3_iter0;
wire    ap_block_state44_pp2_stage3_iter1;
wire    ap_block_pp2_stage3_11001;
wire    ap_CS_fsm_pp2_stage3;
wire    ap_block_state38_pp2_stage4_iter0;
wire    ap_block_state45_pp2_stage4_iter1;
wire    ap_block_pp2_stage4_11001;
wire    ap_CS_fsm_pp2_stage4;
wire    ap_block_state59_pp5_stage3_iter0;
wire    ap_block_pp5_stage3_11001;
wire    ap_block_state60_pp5_stage4_iter0;
wire    ap_block_pp5_stage4_11001;
wire    ap_CS_fsm_pp5_stage4;
wire    ap_block_state61_pp5_stage5_iter0;
wire    ap_block_pp5_stage5_11001;
wire    ap_CS_fsm_pp5_stage5;
wire    ap_block_state62_pp5_stage6_iter0;
wire    ap_block_pp5_stage6_11001;
wire    ap_CS_fsm_pp5_stage6;
wire    ap_block_state63_pp5_stage7_iter0;
wire    ap_block_pp5_stage7_11001;
wire    ap_CS_fsm_pp5_stage7;
wire    ap_block_state64_pp5_stage8_iter0;
wire    ap_block_pp5_stage8_11001;
wire    ap_CS_fsm_pp5_stage8;
wire    ap_block_state111_pp8_stage11_iter0;
wire    ap_block_pp8_stage11_11001;
wire    ap_CS_fsm_pp8_stage11;
wire    ap_block_state112_pp8_stage12_iter0;
wire    ap_block_pp8_stage12_11001;
wire    ap_CS_fsm_pp8_stage12;
wire    ap_block_state113_pp8_stage13_iter0;
wire    ap_block_pp8_stage13_11001;
wire    ap_CS_fsm_pp8_stage13;
wire    ap_block_state114_pp8_stage14_iter0;
wire    ap_block_pp8_stage14_11001;
wire    ap_CS_fsm_pp8_stage14;
wire    ap_block_state115_pp8_stage15_iter0;
wire    ap_block_pp8_stage15_11001;
wire    ap_CS_fsm_pp8_stage15;
reg    grp_fu_2515_ce;
reg    grp_fu_2519_ce;
reg    grp_fu_2523_ce;
reg    grp_fu_2527_ce;
reg    grp_fu_2531_ce;
reg    grp_fu_2535_ce;
reg    grp_fu_2539_ce;
reg    grp_fu_2543_ce;
reg    grp_fu_2547_ce;
reg    grp_fu_2551_ce;
reg    grp_fu_2555_ce;
reg    grp_fu_2559_ce;
reg    grp_fu_2563_ce;
reg    grp_fu_2567_ce;
reg    grp_fu_2571_ce;
reg    grp_fu_2575_ce;
wire    ap_block_state103_pp8_stage3_iter0;
wire    ap_block_pp8_stage3_11001;
wire    ap_block_state104_pp8_stage4_iter0;
wire    ap_block_pp8_stage4_11001;
wire    ap_block_state105_pp8_stage5_iter0;
wire    ap_block_pp8_stage5_11001;
reg    grp_fu_2580_ce;
reg    grp_fu_2584_ce;
reg    grp_fu_2588_ce;
wire    ap_CS_fsm_state123;
reg   [76:0] ap_NS_fsm;
reg    ap_block_pp1_stage1_subdone;
reg    ap_block_pp1_stage2_subdone;
reg    ap_block_pp1_stage3_subdone;
reg    ap_block_pp1_stage4_subdone;
reg    ap_block_pp1_stage5_subdone;
reg    ap_block_pp1_stage6_subdone;
reg    ap_block_pp1_stage7_subdone;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp2_stage2_subdone;
wire    ap_block_pp2_stage3_subdone;
wire    ap_block_pp2_stage4_subdone;
wire    ap_block_pp5_stage1_subdone;
wire    ap_block_pp5_stage2_subdone;
wire    ap_block_pp5_stage3_subdone;
wire    ap_block_pp5_stage4_subdone;
wire    ap_block_pp5_stage5_subdone;
wire    ap_block_pp5_stage6_subdone;
wire    ap_block_pp5_stage7_subdone;
wire    ap_block_pp5_stage8_subdone;
reg    ap_block_pp8_stage2_subdone;
wire    ap_block_pp8_stage3_subdone;
wire    ap_block_pp8_stage4_subdone;
wire    ap_block_pp8_stage5_subdone;
wire    ap_block_pp8_stage6_subdone;
wire    ap_block_pp8_stage7_subdone;
wire    ap_block_pp8_stage8_subdone;
reg    ap_block_pp8_stage9_subdone;
wire    ap_block_pp8_stage10_subdone;
wire    ap_block_pp8_stage11_subdone;
wire    ap_block_pp8_stage12_subdone;
wire    ap_block_pp8_stage13_subdone;
wire    ap_block_pp8_stage14_subdone;
wire    ap_block_pp8_stage15_subdone;
reg    ap_block_pp8_stage16_subdone;
reg    ap_block_pp8_stage17_subdone;
wire    ap_block_state118_pp8_stage18_iter0;
wire    ap_block_pp8_stage18_subdone;
wire    ap_block_pp8_stage18_11001;
wire    ap_block_state119_pp8_stage19_iter0;
wire    ap_block_pp8_stage19_subdone;
wire    ap_block_pp8_stage19_11001;
wire    ap_block_pp8_stage20_11001;
wire    ap_ext_blocking_cur_n;
reg    ap_ext_blocking_sub_n;
reg    ap_wait_0;
reg    ap_sub_ext_blocking_0;
reg    ap_wait_1;
reg    ap_sub_ext_blocking_1;
reg    ap_wait_2;
reg    ap_sub_ext_blocking_2;
reg    ap_wait_3;
reg    ap_sub_ext_blocking_3;
reg    ap_wait_4;
reg    ap_sub_ext_blocking_4;
reg    ap_str_blocking_sub_n;
reg    ap_sub_str_blocking_0;
reg    ap_sub_str_blocking_1;
reg    ap_sub_str_blocking_2;
reg    ap_sub_str_blocking_3;
reg    ap_sub_str_blocking_4;
reg    ap_int_blocking_sub_n;
reg    ap_sub_int_blocking_0;
reg    ap_sub_int_blocking_1;
reg    ap_sub_int_blocking_2;
reg    ap_sub_int_blocking_3;
reg    ap_sub_int_blocking_4;
wire    ap_ext_blocking_n;
wire    ap_str_blocking_n;
wire    ap_int_blocking_n;
reg    ap_ext_blocking_n_reg;
reg    ap_str_blocking_n_reg;
reg    ap_int_blocking_n_reg;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;
reg    ap_condition_7149;
reg    ap_condition_7162;
reg    ap_condition_7166;
reg    ap_condition_7170;
reg    ap_condition_7174;
reg    ap_condition_7179;
reg    ap_condition_7186;
reg    ap_condition_7192;
reg    ap_condition_7196;
reg    ap_condition_7203;
reg    ap_condition_7209;
reg    ap_condition_7215;
reg    ap_condition_7178;
reg    ap_condition_7220;
reg    ap_condition_7225;
reg    ap_condition_7231;
reg    ap_condition_7237;
reg    ap_condition_7240;
reg    ap_condition_7245;
reg    ap_condition_7251;
reg    ap_condition_7257;
reg    ap_condition_7260;
reg    ap_condition_7265;
reg    ap_condition_7269;
reg    ap_condition_7275;
reg    ap_condition_7281;
reg    ap_condition_3481;
reg    ap_condition_3507;
reg    ap_condition_3543;
reg    ap_condition_3559;
reg    ap_condition_257;
reg    ap_condition_7295;
reg    ap_condition_7298;
reg    ap_condition_3491;
reg    ap_condition_3547;
reg    ap_condition_7305;
reg    ap_condition_7308;
reg    ap_condition_3495;
reg    ap_condition_3551;
reg    ap_condition_7316;
reg    ap_condition_7319;
reg    ap_condition_3499;
reg    ap_condition_3555;
wire    ap_CS_fsm_pp8_stage18;
wire    ap_CS_fsm_pp8_stage19;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_CS_fsm = 77'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
#0 ap_enable_reg_pp6_iter4 = 1'b0;
#0 ap_enable_reg_pp6_iter5 = 1'b0;
#0 ap_enable_reg_pp6_iter6 = 1'b0;
#0 ap_enable_reg_pp6_iter7 = 1'b0;
#0 ap_enable_reg_pp6_iter8 = 1'b0;
#0 ap_enable_reg_pp6_iter9 = 1'b0;
#0 ap_enable_reg_pp6_iter10 = 1'b0;
#0 ap_enable_reg_pp6_iter11 = 1'b0;
#0 ap_enable_reg_pp6_iter12 = 1'b0;
#0 ap_enable_reg_pp6_iter13 = 1'b0;
#0 ap_enable_reg_pp6_iter14 = 1'b0;
#0 ap_enable_reg_pp6_iter15 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter3 = 1'b0;
#0 ap_enable_reg_pp7_iter4 = 1'b0;
#0 ap_enable_reg_pp7_iter5 = 1'b0;
#0 ap_enable_reg_pp7_iter7 = 1'b0;
#0 ap_enable_reg_pp7_iter8 = 1'b0;
#0 ap_enable_reg_pp7_iter9 = 1'b0;
#0 ap_enable_reg_pp7_iter11 = 1'b0;
#0 grp_merlin_memcpy_1_0_0_fu_2470_ap_start_reg = 1'b0;
#0 grp_merlin_memcpy_0_0_fu_2478_ap_start_reg = 1'b0;
#0 grp_merlin_memcpy_3_0_fu_2486_ap_start_reg = 1'b0;
#0 grp_merlin_memcpy_4_0_fu_2494_ap_start_reg = 1'b0;
#0 grp_merlin_memcpy_2_0_fu_2502_ap_start_reg = 1'b0;
end

gcnconv_kernel_gcnconv_kernel_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
gcnconv_kernel_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .event_start(event_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .x_data(x_data),
    .weight_data(weight_data),
    .edge_index(edge_index),
    .result_data(result_data)
);

gcnconv_kernel_gcnconv_kernel_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gcnconv_kernel_gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(gmem_ARID),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(gmem_ARSIZE),
    .I_ARLOCK(gmem_ARLOCK),
    .I_ARCACHE(gmem_ARCACHE),
    .I_ARQOS(gmem_ARQOS),
    .I_ARPROT(gmem_ARPROT),
    .I_ARUSER(gmem_ARUSER),
    .I_ARBURST(gmem_ARBURST),
    .I_ARREGION(gmem_ARREGION),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(gmem_AWID),
    .I_AWLEN(gmem_AWLEN),
    .I_AWSIZE(gmem_AWSIZE),
    .I_AWLOCK(gmem_AWLOCK),
    .I_AWCACHE(gmem_AWCACHE),
    .I_AWQOS(gmem_AWQOS),
    .I_AWPROT(gmem_AWPROT),
    .I_AWUSER(gmem_AWUSER),
    .I_AWBURST(gmem_AWBURST),
    .I_AWREGION(gmem_AWREGION),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WID(gmem_WID),
    .I_WUSER(gmem_WUSER),
    .I_WLAST(gmem_WLAST),
    .I_WSTRB(gmem_WSTRB),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

gcnconv_kernel_gcnconv_kernel_weight_buf_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
weight_buf_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buf_0_0_address0),
    .ce0(weight_buf_0_0_ce0),
    .we0(weight_buf_0_0_we0),
    .d0(weight_buf_0_0_d0),
    .q0(weight_buf_0_0_q0),
    .address1(weight_buf_0_0_address1),
    .ce1(weight_buf_0_0_ce1),
    .we1(weight_buf_0_0_we1),
    .d1(weight_buf_0_0_d1)
);

gcnconv_kernel_gcnconv_kernel_weight_buf_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
weight_buf_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buf_0_1_address0),
    .ce0(weight_buf_0_1_ce0),
    .we0(weight_buf_0_1_we0),
    .d0(weight_buf_0_1_d0),
    .q0(weight_buf_0_1_q0),
    .address1(weight_buf_0_1_address1),
    .ce1(weight_buf_0_1_ce1),
    .we1(weight_buf_0_1_we1),
    .d1(weight_buf_0_1_d1)
);

gcnconv_kernel_gcnconv_kernel_weight_buf_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
weight_buf_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buf_0_2_address0),
    .ce0(weight_buf_0_2_ce0),
    .we0(weight_buf_0_2_we0),
    .d0(weight_buf_0_2_d0),
    .q0(weight_buf_0_2_q0),
    .address1(weight_buf_0_2_address1),
    .ce1(weight_buf_0_2_ce1),
    .we1(weight_buf_0_2_we1),
    .d1(weight_buf_0_2_d1)
);

gcnconv_kernel_gcnconv_kernel_weight_buf_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
weight_buf_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buf_0_3_address0),
    .ce0(weight_buf_0_3_ce0),
    .we0(weight_buf_0_3_we0),
    .d0(weight_buf_0_3_d0),
    .q0(weight_buf_0_3_q0),
    .address1(weight_buf_0_3_address1),
    .ce1(weight_buf_0_3_ce1),
    .we1(weight_buf_0_3_we1),
    .d1(weight_buf_0_3_d1)
);

gcnconv_kernel_gcnconv_kernel_weight_buf_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
weight_buf_0_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buf_0_4_address0),
    .ce0(weight_buf_0_4_ce0),
    .we0(weight_buf_0_4_we0),
    .d0(weight_buf_0_4_d0),
    .q0(weight_buf_0_4_q0),
    .address1(weight_buf_0_4_address1),
    .ce1(weight_buf_0_4_ce1),
    .we1(weight_buf_0_4_we1),
    .d1(weight_buf_0_4_d1)
);

gcnconv_kernel_gcnconv_kernel_weight_buf_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
weight_buf_0_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buf_0_5_address0),
    .ce0(weight_buf_0_5_ce0),
    .we0(weight_buf_0_5_we0),
    .d0(weight_buf_0_5_d0),
    .q0(weight_buf_0_5_q0),
    .address1(weight_buf_0_5_address1),
    .ce1(weight_buf_0_5_ce1),
    .we1(weight_buf_0_5_we1),
    .d1(weight_buf_0_5_d1)
);

gcnconv_kernel_gcnconv_kernel_weight_buf_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
weight_buf_0_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buf_0_6_address0),
    .ce0(weight_buf_0_6_ce0),
    .we0(weight_buf_0_6_we0),
    .d0(weight_buf_0_6_d0),
    .q0(weight_buf_0_6_q0),
    .address1(weight_buf_0_6_address1),
    .ce1(weight_buf_0_6_ce1),
    .we1(weight_buf_0_6_we1),
    .d1(weight_buf_0_6_d1)
);

gcnconv_kernel_gcnconv_kernel_weight_buf_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
weight_buf_0_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buf_0_7_address0),
    .ce0(weight_buf_0_7_ce0),
    .we0(weight_buf_0_7_we0),
    .d0(weight_buf_0_7_d0),
    .q0(weight_buf_0_7_q0),
    .address1(weight_buf_0_7_address1),
    .ce1(weight_buf_0_7_ce1),
    .we1(weight_buf_0_7_we1),
    .d1(weight_buf_0_7_d1)
);

gcnconv_kernel_gcnconv_kernel_edge_index_buf_3 #(
    .DataWidth( 32 ),
    .AddressRange( 216730 ),
    .AddressWidth( 18 ))
edge_index_buf_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(edge_index_buf_3_address0),
    .ce0(edge_index_buf_3_ce0),
    .we0(edge_index_buf_3_we0),
    .d0(grp_merlin_memcpy_4_0_fu_2494_dst_d0),
    .q0(edge_index_buf_3_q0),
    .address1(edge_index_buf_3_address1),
    .ce1(edge_index_buf_3_ce1),
    .q1(edge_index_buf_3_q1)
);

gcnconv_kernel_gcnconv_kernel_edge_index_buf_2 #(
    .DataWidth( 32 ),
    .AddressRange( 216730 ),
    .AddressWidth( 18 ))
edge_index_buf_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(edge_index_buf_2_address0),
    .ce0(edge_index_buf_2_ce0),
    .we0(edge_index_buf_2_we0),
    .d0(edge_index_buf_2_d0),
    .q0(edge_index_buf_2_q0),
    .address1(edge_index_buf_2_address1),
    .ce1(edge_index_buf_2_ce1),
    .we1(edge_index_buf_2_we1),
    .d1(edge_index_buf_2_d1)
);

gcnconv_kernel_gcnconv_kernel_edge_index_buf_3 #(
    .DataWidth( 32 ),
    .AddressRange( 216730 ),
    .AddressWidth( 18 ))
edge_index_buf_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(edge_index_buf_1_address0),
    .ce0(edge_index_buf_1_ce0),
    .we0(edge_index_buf_1_we0),
    .d0(grp_merlin_memcpy_3_0_fu_2486_dst_d0),
    .q0(edge_index_buf_1_q0),
    .address1(edge_index_buf_1_address1),
    .ce1(edge_index_buf_1_ce1),
    .q1(edge_index_buf_1_q1)
);

gcnconv_kernel_gcnconv_kernel_edge_index_buf_0 #(
    .DataWidth( 32 ),
    .AddressRange( 108365 ),
    .AddressWidth( 17 ))
edge_index_buf_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(edge_index_buf_0_address0),
    .ce0(edge_index_buf_0_ce0),
    .we0(edge_index_buf_0_we0),
    .d0(grp_merlin_memcpy_2_0_fu_2502_dst_d0),
    .q0(edge_index_buf_0_q0)
);

gcnconv_kernel_gcnconv_kernel_edge_index_buf_0 #(
    .DataWidth( 32 ),
    .AddressRange( 108365 ),
    .AddressWidth( 17 ))
edge_weight_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(edge_weight_address0),
    .ce0(edge_weight_ce0),
    .we0(edge_weight_we0),
    .d0(32'd1065353216),
    .q0(edge_weight_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_0_address0),
    .ce0(x_mul_0_ce0),
    .we0(x_mul_0_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_0_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_1_address0),
    .ce0(x_mul_1_ce0),
    .we0(x_mul_1_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_1_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_2_address0),
    .ce0(x_mul_2_ce0),
    .we0(x_mul_2_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_2_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_3_address0),
    .ce0(x_mul_3_ce0),
    .we0(x_mul_3_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_3_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_4_address0),
    .ce0(x_mul_4_ce0),
    .we0(x_mul_4_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_4_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_5_address0),
    .ce0(x_mul_5_ce0),
    .we0(x_mul_5_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_5_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_6_address0),
    .ce0(x_mul_6_ce0),
    .we0(x_mul_6_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_6_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_7_address0),
    .ce0(x_mul_7_ce0),
    .we0(x_mul_7_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_7_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_8_address0),
    .ce0(x_mul_8_ce0),
    .we0(x_mul_8_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_8_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_9_address0),
    .ce0(x_mul_9_ce0),
    .we0(x_mul_9_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_9_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_10_address0),
    .ce0(x_mul_10_ce0),
    .we0(x_mul_10_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_10_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_11_address0),
    .ce0(x_mul_11_ce0),
    .we0(x_mul_11_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_11_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_12_address0),
    .ce0(x_mul_12_ce0),
    .we0(x_mul_12_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_12_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_13_address0),
    .ce0(x_mul_13_ce0),
    .we0(x_mul_13_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_13_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_14_address0),
    .ce0(x_mul_14_ce0),
    .we0(x_mul_14_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_14_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
x_mul_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_mul_15_address0),
    .ce0(x_mul_15_ce0),
    .we0(x_mul_15_we0),
    .d0(mul_0_reg_2353),
    .q0(x_mul_15_q0)
);

gcnconv_kernel_gcnconv_kernel_x_mul_0 #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
deg_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(deg_address0),
    .ce0(deg_ce0),
    .we0(deg_we0),
    .d0(reg_2819),
    .q0(deg_q0)
);

gcnconv_kernel_gcnconv_kernel_deg_inv_sqrt #(
    .DataWidth( 32 ),
    .AddressRange( 19717 ),
    .AddressWidth( 15 ))
deg_inv_sqrt_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(deg_inv_sqrt_address0),
    .ce0(deg_inv_sqrt_ce0),
    .we0(deg_inv_sqrt_we0),
    .d0(tmp_11_reg_7660),
    .q0(deg_inv_sqrt_q0),
    .address1(deg_inv_sqrt_address1),
    .ce1(deg_inv_sqrt_ce1),
    .q1(deg_inv_sqrt_q1)
);

gcnconv_kernel_gcnconv_kernel_edge_index_buf_0 #(
    .DataWidth( 32 ),
    .AddressRange( 108365 ),
    .AddressWidth( 17 ))
norm_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(norm_address0),
    .ce0(norm_ce0),
    .we0(norm_we0),
    .d0(reg_2837),
    .q0(norm_q0)
);

gcnconv_kernel_gcnconv_kernel_x_buf_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 63 ),
    .AddressWidth( 6 ))
x_buf_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_buf_0_0_address0),
    .ce0(x_buf_0_0_ce0),
    .we0(x_buf_0_0_we0),
    .d0(x_buf_0_0_d0),
    .q0(x_buf_0_0_q0),
    .address1(x_buf_0_0_address1),
    .ce1(x_buf_0_0_ce1),
    .we1(x_buf_0_0_we1),
    .d1(x_buf_0_0_d1)
);

gcnconv_kernel_gcnconv_kernel_x_buf_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 63 ),
    .AddressWidth( 6 ))
x_buf_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_buf_0_1_address0),
    .ce0(x_buf_0_1_ce0),
    .we0(x_buf_0_1_we0),
    .d0(x_buf_0_1_d0),
    .q0(x_buf_0_1_q0),
    .address1(x_buf_0_1_address1),
    .ce1(x_buf_0_1_ce1),
    .we1(x_buf_0_1_we1),
    .d1(x_buf_0_1_d1)
);

gcnconv_kernel_gcnconv_kernel_x_buf_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 63 ),
    .AddressWidth( 6 ))
x_buf_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_buf_0_2_address0),
    .ce0(x_buf_0_2_ce0),
    .we0(x_buf_0_2_we0),
    .d0(x_buf_0_2_d0),
    .q0(x_buf_0_2_q0),
    .address1(x_buf_0_2_address1),
    .ce1(x_buf_0_2_ce1),
    .we1(x_buf_0_2_we1),
    .d1(x_buf_0_2_d1)
);

gcnconv_kernel_gcnconv_kernel_x_buf_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 63 ),
    .AddressWidth( 6 ))
x_buf_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_buf_0_3_address0),
    .ce0(x_buf_0_3_ce0),
    .we0(x_buf_0_3_we0),
    .d0(x_buf_0_3_d0),
    .q0(x_buf_0_3_q0),
    .address1(x_buf_0_3_address1),
    .ce1(x_buf_0_3_ce1),
    .we1(x_buf_0_3_we1),
    .d1(x_buf_0_3_d1)
);

gcnconv_kernel_gcnconv_kernel_x_buf_0_4 #(
    .DataWidth( 32 ),
    .AddressRange( 62 ),
    .AddressWidth( 6 ))
x_buf_0_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_buf_0_4_address0),
    .ce0(x_buf_0_4_ce0),
    .we0(x_buf_0_4_we0),
    .d0(x_buf_0_4_d0),
    .q0(x_buf_0_4_q0),
    .address1(x_buf_0_4_address1),
    .ce1(x_buf_0_4_ce1),
    .we1(x_buf_0_4_we1),
    .d1(x_buf_0_4_d1)
);

gcnconv_kernel_gcnconv_kernel_x_buf_0_4 #(
    .DataWidth( 32 ),
    .AddressRange( 62 ),
    .AddressWidth( 6 ))
x_buf_0_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_buf_0_5_address0),
    .ce0(x_buf_0_5_ce0),
    .we0(x_buf_0_5_we0),
    .d0(x_buf_0_5_d0),
    .q0(x_buf_0_5_q0),
    .address1(x_buf_0_5_address1),
    .ce1(x_buf_0_5_ce1),
    .we1(x_buf_0_5_we1),
    .d1(x_buf_0_5_d1)
);

gcnconv_kernel_gcnconv_kernel_x_buf_0_4 #(
    .DataWidth( 32 ),
    .AddressRange( 62 ),
    .AddressWidth( 6 ))
x_buf_0_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_buf_0_6_address0),
    .ce0(x_buf_0_6_ce0),
    .we0(x_buf_0_6_we0),
    .d0(x_buf_0_6_d0),
    .q0(x_buf_0_6_q0),
    .address1(x_buf_0_6_address1),
    .ce1(x_buf_0_6_ce1),
    .we1(x_buf_0_6_we1),
    .d1(x_buf_0_6_d1)
);

gcnconv_kernel_gcnconv_kernel_x_buf_0_4 #(
    .DataWidth( 32 ),
    .AddressRange( 62 ),
    .AddressWidth( 6 ))
x_buf_0_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_buf_0_7_address0),
    .ce0(x_buf_0_7_ce0),
    .we0(x_buf_0_7_we0),
    .d0(x_buf_0_7_d0),
    .q0(x_buf_0_7_q0),
    .address1(x_buf_0_7_address1),
    .ce1(x_buf_0_7_ce1),
    .we1(x_buf_0_7_we1),
    .d1(x_buf_0_7_d1)
);

gcnconv_kernel_merlin_memcpy_1_0_0 grp_merlin_memcpy_1_0_0_fu_2470(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_merlin_memcpy_1_0_0_fu_2470_ap_start),
    .ap_done(grp_merlin_memcpy_1_0_0_fu_2470_ap_done),
    .ap_idle(grp_merlin_memcpy_1_0_0_fu_2470_ap_idle),
    .ap_ready(grp_merlin_memcpy_1_0_0_fu_2470_ap_ready),
    .m_axi_dst_AWVALID(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWVALID),
    .m_axi_dst_AWREADY(gmem_AWREADY),
    .m_axi_dst_AWADDR(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWADDR),
    .m_axi_dst_AWID(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWID),
    .m_axi_dst_AWLEN(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWLEN),
    .m_axi_dst_AWSIZE(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWSIZE),
    .m_axi_dst_AWBURST(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWBURST),
    .m_axi_dst_AWLOCK(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWLOCK),
    .m_axi_dst_AWCACHE(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWCACHE),
    .m_axi_dst_AWPROT(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWPROT),
    .m_axi_dst_AWQOS(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWQOS),
    .m_axi_dst_AWREGION(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWREGION),
    .m_axi_dst_AWUSER(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWUSER),
    .m_axi_dst_WVALID(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WVALID),
    .m_axi_dst_WREADY(gmem_WREADY),
    .m_axi_dst_WDATA(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WDATA),
    .m_axi_dst_WSTRB(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WSTRB),
    .m_axi_dst_WLAST(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WLAST),
    .m_axi_dst_WID(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WID),
    .m_axi_dst_WUSER(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WUSER),
    .m_axi_dst_ARVALID(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARVALID),
    .m_axi_dst_ARREADY(gmem_ARREADY),
    .m_axi_dst_ARADDR(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARADDR),
    .m_axi_dst_ARID(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARID),
    .m_axi_dst_ARLEN(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARLEN),
    .m_axi_dst_ARSIZE(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARSIZE),
    .m_axi_dst_ARBURST(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARBURST),
    .m_axi_dst_ARLOCK(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARLOCK),
    .m_axi_dst_ARCACHE(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARCACHE),
    .m_axi_dst_ARPROT(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARPROT),
    .m_axi_dst_ARQOS(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARQOS),
    .m_axi_dst_ARREGION(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARREGION),
    .m_axi_dst_ARUSER(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARUSER),
    .m_axi_dst_RVALID(gmem_RVALID),
    .m_axi_dst_RREADY(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_RREADY),
    .m_axi_dst_RDATA(gmem_RDATA),
    .m_axi_dst_RLAST(gmem_RLAST),
    .m_axi_dst_RID(gmem_RID),
    .m_axi_dst_RUSER(gmem_RUSER),
    .m_axi_dst_RRESP(gmem_RRESP),
    .m_axi_dst_BVALID(gmem_BVALID),
    .m_axi_dst_BREADY(grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_BREADY),
    .m_axi_dst_BRESP(gmem_BRESP),
    .m_axi_dst_BID(gmem_BID),
    .m_axi_dst_BUSER(gmem_BUSER),
    .dst_offset(edge_index5_reg_6349),
    .src_address0(grp_merlin_memcpy_1_0_0_fu_2470_src_address0),
    .src_ce0(grp_merlin_memcpy_1_0_0_fu_2470_src_ce0),
    .src_q0(edge_index_buf_2_q0),
    .ap_ext_blocking_n(grp_merlin_memcpy_1_0_0_fu_2470_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_merlin_memcpy_1_0_0_fu_2470_ap_str_blocking_n),
    .ap_int_blocking_n(grp_merlin_memcpy_1_0_0_fu_2470_ap_int_blocking_n)
);

gcnconv_kernel_merlin_memcpy_0_0 grp_merlin_memcpy_0_0_fu_2478(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_merlin_memcpy_0_0_fu_2478_ap_start),
    .ap_done(grp_merlin_memcpy_0_0_fu_2478_ap_done),
    .ap_idle(grp_merlin_memcpy_0_0_fu_2478_ap_idle),
    .ap_ready(grp_merlin_memcpy_0_0_fu_2478_ap_ready),
    .dst_address0(grp_merlin_memcpy_0_0_fu_2478_dst_address0),
    .dst_ce0(grp_merlin_memcpy_0_0_fu_2478_dst_ce0),
    .dst_we0(grp_merlin_memcpy_0_0_fu_2478_dst_we0),
    .dst_d0(grp_merlin_memcpy_0_0_fu_2478_dst_d0),
    .m_axi_src_AWVALID(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWVALID),
    .m_axi_src_AWREADY(1'b0),
    .m_axi_src_AWADDR(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWADDR),
    .m_axi_src_AWID(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWID),
    .m_axi_src_AWLEN(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWLEN),
    .m_axi_src_AWSIZE(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWSIZE),
    .m_axi_src_AWBURST(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWBURST),
    .m_axi_src_AWLOCK(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWLOCK),
    .m_axi_src_AWCACHE(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWCACHE),
    .m_axi_src_AWPROT(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWPROT),
    .m_axi_src_AWQOS(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWQOS),
    .m_axi_src_AWREGION(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWREGION),
    .m_axi_src_AWUSER(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_AWUSER),
    .m_axi_src_WVALID(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_WVALID),
    .m_axi_src_WREADY(1'b0),
    .m_axi_src_WDATA(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_WDATA),
    .m_axi_src_WSTRB(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_WSTRB),
    .m_axi_src_WLAST(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_WLAST),
    .m_axi_src_WID(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_WID),
    .m_axi_src_WUSER(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_WUSER),
    .m_axi_src_ARVALID(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARVALID),
    .m_axi_src_ARREADY(gmem_ARREADY),
    .m_axi_src_ARADDR(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARADDR),
    .m_axi_src_ARID(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARID),
    .m_axi_src_ARLEN(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARLEN),
    .m_axi_src_ARSIZE(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARSIZE),
    .m_axi_src_ARBURST(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARBURST),
    .m_axi_src_ARLOCK(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARLOCK),
    .m_axi_src_ARCACHE(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARCACHE),
    .m_axi_src_ARPROT(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARPROT),
    .m_axi_src_ARQOS(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARQOS),
    .m_axi_src_ARREGION(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARREGION),
    .m_axi_src_ARUSER(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARUSER),
    .m_axi_src_RVALID(gmem_RVALID),
    .m_axi_src_RREADY(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_RREADY),
    .m_axi_src_RDATA(gmem_RDATA),
    .m_axi_src_RLAST(gmem_RLAST),
    .m_axi_src_RID(gmem_RID),
    .m_axi_src_RUSER(gmem_RUSER),
    .m_axi_src_RRESP(gmem_RRESP),
    .m_axi_src_BVALID(1'b0),
    .m_axi_src_BREADY(grp_merlin_memcpy_0_0_fu_2478_m_axi_src_BREADY),
    .m_axi_src_BRESP(2'd0),
    .m_axi_src_BID(1'd0),
    .m_axi_src_BUSER(1'd0),
    .src_offset(edge_index5_reg_6349),
    .ap_ext_blocking_n(grp_merlin_memcpy_0_0_fu_2478_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_merlin_memcpy_0_0_fu_2478_ap_str_blocking_n),
    .ap_int_blocking_n(grp_merlin_memcpy_0_0_fu_2478_ap_int_blocking_n)
);

gcnconv_kernel_merlin_memcpy_3_0 grp_merlin_memcpy_3_0_fu_2486(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_merlin_memcpy_3_0_fu_2486_ap_start),
    .ap_done(grp_merlin_memcpy_3_0_fu_2486_ap_done),
    .ap_idle(grp_merlin_memcpy_3_0_fu_2486_ap_idle),
    .ap_ready(grp_merlin_memcpy_3_0_fu_2486_ap_ready),
    .dst_address0(grp_merlin_memcpy_3_0_fu_2486_dst_address0),
    .dst_ce0(grp_merlin_memcpy_3_0_fu_2486_dst_ce0),
    .dst_we0(grp_merlin_memcpy_3_0_fu_2486_dst_we0),
    .dst_d0(grp_merlin_memcpy_3_0_fu_2486_dst_d0),
    .m_axi_src_AWVALID(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWVALID),
    .m_axi_src_AWREADY(1'b0),
    .m_axi_src_AWADDR(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWADDR),
    .m_axi_src_AWID(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWID),
    .m_axi_src_AWLEN(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWLEN),
    .m_axi_src_AWSIZE(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWSIZE),
    .m_axi_src_AWBURST(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWBURST),
    .m_axi_src_AWLOCK(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWLOCK),
    .m_axi_src_AWCACHE(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWCACHE),
    .m_axi_src_AWPROT(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWPROT),
    .m_axi_src_AWQOS(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWQOS),
    .m_axi_src_AWREGION(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWREGION),
    .m_axi_src_AWUSER(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_AWUSER),
    .m_axi_src_WVALID(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_WVALID),
    .m_axi_src_WREADY(1'b0),
    .m_axi_src_WDATA(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_WDATA),
    .m_axi_src_WSTRB(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_WSTRB),
    .m_axi_src_WLAST(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_WLAST),
    .m_axi_src_WID(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_WID),
    .m_axi_src_WUSER(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_WUSER),
    .m_axi_src_ARVALID(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARVALID),
    .m_axi_src_ARREADY(gmem_ARREADY),
    .m_axi_src_ARADDR(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARADDR),
    .m_axi_src_ARID(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARID),
    .m_axi_src_ARLEN(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARLEN),
    .m_axi_src_ARSIZE(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARSIZE),
    .m_axi_src_ARBURST(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARBURST),
    .m_axi_src_ARLOCK(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARLOCK),
    .m_axi_src_ARCACHE(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARCACHE),
    .m_axi_src_ARPROT(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARPROT),
    .m_axi_src_ARQOS(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARQOS),
    .m_axi_src_ARREGION(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARREGION),
    .m_axi_src_ARUSER(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARUSER),
    .m_axi_src_RVALID(gmem_RVALID),
    .m_axi_src_RREADY(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_RREADY),
    .m_axi_src_RDATA(gmem_RDATA),
    .m_axi_src_RLAST(gmem_RLAST),
    .m_axi_src_RID(gmem_RID),
    .m_axi_src_RUSER(gmem_RUSER),
    .m_axi_src_RRESP(gmem_RRESP),
    .m_axi_src_BVALID(1'b0),
    .m_axi_src_BREADY(grp_merlin_memcpy_3_0_fu_2486_m_axi_src_BREADY),
    .m_axi_src_BRESP(2'd0),
    .m_axi_src_BID(1'd0),
    .m_axi_src_BUSER(1'd0),
    .src_offset(edge_index5_reg_6349),
    .ap_ext_blocking_n(grp_merlin_memcpy_3_0_fu_2486_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_merlin_memcpy_3_0_fu_2486_ap_str_blocking_n),
    .ap_int_blocking_n(grp_merlin_memcpy_3_0_fu_2486_ap_int_blocking_n)
);

gcnconv_kernel_merlin_memcpy_4_0 grp_merlin_memcpy_4_0_fu_2494(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_merlin_memcpy_4_0_fu_2494_ap_start),
    .ap_done(grp_merlin_memcpy_4_0_fu_2494_ap_done),
    .ap_idle(grp_merlin_memcpy_4_0_fu_2494_ap_idle),
    .ap_ready(grp_merlin_memcpy_4_0_fu_2494_ap_ready),
    .dst_address0(grp_merlin_memcpy_4_0_fu_2494_dst_address0),
    .dst_ce0(grp_merlin_memcpy_4_0_fu_2494_dst_ce0),
    .dst_we0(grp_merlin_memcpy_4_0_fu_2494_dst_we0),
    .dst_d0(grp_merlin_memcpy_4_0_fu_2494_dst_d0),
    .m_axi_src_AWVALID(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWVALID),
    .m_axi_src_AWREADY(1'b0),
    .m_axi_src_AWADDR(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWADDR),
    .m_axi_src_AWID(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWID),
    .m_axi_src_AWLEN(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWLEN),
    .m_axi_src_AWSIZE(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWSIZE),
    .m_axi_src_AWBURST(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWBURST),
    .m_axi_src_AWLOCK(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWLOCK),
    .m_axi_src_AWCACHE(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWCACHE),
    .m_axi_src_AWPROT(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWPROT),
    .m_axi_src_AWQOS(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWQOS),
    .m_axi_src_AWREGION(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWREGION),
    .m_axi_src_AWUSER(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_AWUSER),
    .m_axi_src_WVALID(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_WVALID),
    .m_axi_src_WREADY(1'b0),
    .m_axi_src_WDATA(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_WDATA),
    .m_axi_src_WSTRB(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_WSTRB),
    .m_axi_src_WLAST(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_WLAST),
    .m_axi_src_WID(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_WID),
    .m_axi_src_WUSER(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_WUSER),
    .m_axi_src_ARVALID(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARVALID),
    .m_axi_src_ARREADY(gmem_ARREADY),
    .m_axi_src_ARADDR(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARADDR),
    .m_axi_src_ARID(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARID),
    .m_axi_src_ARLEN(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARLEN),
    .m_axi_src_ARSIZE(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARSIZE),
    .m_axi_src_ARBURST(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARBURST),
    .m_axi_src_ARLOCK(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARLOCK),
    .m_axi_src_ARCACHE(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARCACHE),
    .m_axi_src_ARPROT(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARPROT),
    .m_axi_src_ARQOS(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARQOS),
    .m_axi_src_ARREGION(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARREGION),
    .m_axi_src_ARUSER(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARUSER),
    .m_axi_src_RVALID(gmem_RVALID),
    .m_axi_src_RREADY(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_RREADY),
    .m_axi_src_RDATA(gmem_RDATA),
    .m_axi_src_RLAST(gmem_RLAST),
    .m_axi_src_RID(gmem_RID),
    .m_axi_src_RUSER(gmem_RUSER),
    .m_axi_src_RRESP(gmem_RRESP),
    .m_axi_src_BVALID(1'b0),
    .m_axi_src_BREADY(grp_merlin_memcpy_4_0_fu_2494_m_axi_src_BREADY),
    .m_axi_src_BRESP(2'd0),
    .m_axi_src_BID(1'd0),
    .m_axi_src_BUSER(1'd0),
    .src_offset(edge_index5_reg_6349),
    .ap_ext_blocking_n(grp_merlin_memcpy_4_0_fu_2494_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_merlin_memcpy_4_0_fu_2494_ap_str_blocking_n),
    .ap_int_blocking_n(grp_merlin_memcpy_4_0_fu_2494_ap_int_blocking_n)
);

gcnconv_kernel_merlin_memcpy_2_0 grp_merlin_memcpy_2_0_fu_2502(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_merlin_memcpy_2_0_fu_2502_ap_start),
    .ap_done(grp_merlin_memcpy_2_0_fu_2502_ap_done),
    .ap_idle(grp_merlin_memcpy_2_0_fu_2502_ap_idle),
    .ap_ready(grp_merlin_memcpy_2_0_fu_2502_ap_ready),
    .dst_address0(grp_merlin_memcpy_2_0_fu_2502_dst_address0),
    .dst_ce0(grp_merlin_memcpy_2_0_fu_2502_dst_ce0),
    .dst_we0(grp_merlin_memcpy_2_0_fu_2502_dst_we0),
    .dst_d0(grp_merlin_memcpy_2_0_fu_2502_dst_d0),
    .m_axi_src_AWVALID(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWVALID),
    .m_axi_src_AWREADY(1'b0),
    .m_axi_src_AWADDR(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWADDR),
    .m_axi_src_AWID(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWID),
    .m_axi_src_AWLEN(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWLEN),
    .m_axi_src_AWSIZE(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWSIZE),
    .m_axi_src_AWBURST(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWBURST),
    .m_axi_src_AWLOCK(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWLOCK),
    .m_axi_src_AWCACHE(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWCACHE),
    .m_axi_src_AWPROT(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWPROT),
    .m_axi_src_AWQOS(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWQOS),
    .m_axi_src_AWREGION(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWREGION),
    .m_axi_src_AWUSER(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_AWUSER),
    .m_axi_src_WVALID(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_WVALID),
    .m_axi_src_WREADY(1'b0),
    .m_axi_src_WDATA(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_WDATA),
    .m_axi_src_WSTRB(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_WSTRB),
    .m_axi_src_WLAST(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_WLAST),
    .m_axi_src_WID(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_WID),
    .m_axi_src_WUSER(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_WUSER),
    .m_axi_src_ARVALID(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARVALID),
    .m_axi_src_ARREADY(gmem_ARREADY),
    .m_axi_src_ARADDR(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARADDR),
    .m_axi_src_ARID(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARID),
    .m_axi_src_ARLEN(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARLEN),
    .m_axi_src_ARSIZE(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARSIZE),
    .m_axi_src_ARBURST(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARBURST),
    .m_axi_src_ARLOCK(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARLOCK),
    .m_axi_src_ARCACHE(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARCACHE),
    .m_axi_src_ARPROT(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARPROT),
    .m_axi_src_ARQOS(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARQOS),
    .m_axi_src_ARREGION(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARREGION),
    .m_axi_src_ARUSER(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARUSER),
    .m_axi_src_RVALID(gmem_RVALID),
    .m_axi_src_RREADY(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_RREADY),
    .m_axi_src_RDATA(gmem_RDATA),
    .m_axi_src_RLAST(gmem_RLAST),
    .m_axi_src_RID(gmem_RID),
    .m_axi_src_RUSER(gmem_RUSER),
    .m_axi_src_RRESP(gmem_RRESP),
    .m_axi_src_BVALID(1'b0),
    .m_axi_src_BREADY(grp_merlin_memcpy_2_0_fu_2502_m_axi_src_BREADY),
    .m_axi_src_BRESP(2'd0),
    .m_axi_src_BID(1'd0),
    .m_axi_src_BUSER(1'd0),
    .src_offset(edge_index5_reg_6349),
    .ap_ext_blocking_n(grp_merlin_memcpy_2_0_fu_2502_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_merlin_memcpy_2_0_fu_2502_ap_str_blocking_n),
    .ap_int_blocking_n(grp_merlin_memcpy_2_0_fu_2502_ap_int_blocking_n)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2510_p0),
    .din1(grp_fu_2510_p1),
    .ce(grp_fu_2510_ce),
    .dout(grp_fu_2510_p2)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2515_p0),
    .din1(reg_2837),
    .ce(grp_fu_2515_ce),
    .dout(grp_fu_2515_p2)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2519_p0),
    .din1(tmp_7_2_reg_7919),
    .ce(grp_fu_2519_ce),
    .dout(grp_fu_2519_p2)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2523_p0),
    .din1(tmp_7_3_reg_7924),
    .ce(grp_fu_2523_ce),
    .dout(grp_fu_2523_p2)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2527_p0),
    .din1(tmp_7_4_reg_7929),
    .ce(grp_fu_2527_ce),
    .dout(grp_fu_2527_p2)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2531_p0),
    .din1(tmp_7_5_reg_7934),
    .ce(grp_fu_2531_ce),
    .dout(grp_fu_2531_p2)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2535_p0),
    .din1(tmp_7_6_reg_7939),
    .ce(grp_fu_2535_ce),
    .dout(grp_fu_2535_p2)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2539_p0),
    .din1(tmp_7_7_reg_7944),
    .ce(grp_fu_2539_ce),
    .dout(grp_fu_2539_p2)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2543_p0),
    .din1(tmp_7_8_reg_7949),
    .ce(grp_fu_2543_ce),
    .dout(grp_fu_2543_p2)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2547_p0),
    .din1(tmp_7_9_reg_7954),
    .ce(grp_fu_2547_ce),
    .dout(grp_fu_2547_p2)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2551_p0),
    .din1(tmp_7_s_reg_7959),
    .ce(grp_fu_2551_ce),
    .dout(grp_fu_2551_p2)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2555_p0),
    .din1(tmp_7_10_reg_7964),
    .ce(grp_fu_2555_ce),
    .dout(grp_fu_2555_p2)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U28(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2559_p0),
    .din1(tmp_7_11_reg_8034),
    .ce(grp_fu_2559_ce),
    .dout(grp_fu_2559_p2)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2563_p0),
    .din1(tmp_7_12_reg_8044),
    .ce(grp_fu_2563_ce),
    .dout(grp_fu_2563_p2)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2567_p0),
    .din1(tmp_7_13_reg_8054),
    .ce(grp_fu_2567_ce),
    .dout(grp_fu_2567_p2)
);

gcnconv_kernel_gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fadd_32ns_32ns_32_7_full_dsp_1_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2571_p0),
    .din1(tmp_7_14_reg_8064),
    .ce(grp_fu_2571_ce),
    .dout(grp_fu_2571_p2)
);

gcnconv_kernel_gcnconv_kernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fmul_32ns_32ns_32_4_max_dsp_1_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2575_p0),
    .din1(grp_fu_2575_p1),
    .ce(grp_fu_2575_ce),
    .dout(grp_fu_2575_p2)
);

gcnconv_kernel_gcnconv_kernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fmul_32ns_32ns_32_4_max_dsp_1_U33(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2580_p0),
    .din1(grp_fu_2580_p1),
    .ce(grp_fu_2580_ce),
    .dout(grp_fu_2580_p2)
);

gcnconv_kernel_gcnconv_kernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fmul_32ns_32ns_32_4_max_dsp_1_U34(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(norm_load_reg_7739),
    .din1(grp_fu_2584_p1),
    .ce(grp_fu_2584_ce),
    .dout(grp_fu_2584_p2)
);

gcnconv_kernel_gcnconv_kernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_fmul_32ns_32ns_32_4_max_dsp_1_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(norm_load_reg_7739),
    .din1(grp_fu_2588_p1),
    .ce(grp_fu_2588_ce),
    .dout(grp_fu_2588_p2)
);

gcnconv_kernel_gcnconv_kernel_frsqrt_32ns_32ns_32_13_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_frsqrt_32ns_32ns_32_13_full_dsp_1_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(32'd0),
    .din1(reg_2831),
    .ce(1'b1),
    .dout(grp_fu_2592_p2)
);

gcnconv_kernel_gcnconv_kernel_mux_832_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
gcnconv_kernel_mux_832_32_1_1_U37(
    .din0(weight_buf_0_0_q0),
    .din1(weight_buf_0_1_q0),
    .din2(weight_buf_0_2_q0),
    .din3(weight_buf_0_3_q0),
    .din4(weight_buf_0_4_q0),
    .din5(weight_buf_0_5_q0),
    .din6(weight_buf_0_6_q0),
    .din7(weight_buf_0_7_q0),
    .din8(zext_ln187_reg_7450),
    .dout(tmp_12_fu_5794_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state14))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage8_subdone) & (1'b1 == ap_CS_fsm_pp1_stage8))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state34) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln178_fu_5693_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp2_stage6_subdone) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp2_stage5_subdone) & (1'b1 == ap_CS_fsm_pp2_stage5)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln178_fu_5693_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state56) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((grp_merlin_memcpy_2_0_fu_2502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp5_stage9_subdone) & (1'b1 == ap_CS_fsm_pp5_stage9)))) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if (((grp_merlin_memcpy_2_0_fu_2502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state68) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state68)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state68);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter10 <= ap_enable_reg_pp6_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter11 <= ap_enable_reg_pp6_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter12 <= ap_enable_reg_pp6_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter13 <= ap_enable_reg_pp6_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter14 <= ap_enable_reg_pp6_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter15 <= ap_enable_reg_pp6_iter14;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp6_iter15 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter5 <= ap_enable_reg_pp6_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter6 <= ap_enable_reg_pp6_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter7 <= ap_enable_reg_pp6_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter8 <= ap_enable_reg_pp6_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter9 <= ap_enable_reg_pp6_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp7_stage0_subdone) & (1'b1 == ap_condition_pp7_exit_iter0_state86) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if (((grp_merlin_memcpy_3_0_fu_2486_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state85))) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state86)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state86);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter10 <= ap_enable_reg_pp7_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter11 <= ap_enable_reg_pp7_iter10;
        end else if (((grp_merlin_memcpy_3_0_fu_2486_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state85))) begin
            ap_enable_reg_pp7_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter3 <= ap_enable_reg_pp7_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter4 <= ap_enable_reg_pp7_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter5 <= ap_enable_reg_pp7_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter6 <= ap_enable_reg_pp7_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter7 <= ap_enable_reg_pp7_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter8 <= ap_enable_reg_pp7_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter9 <= ap_enable_reg_pp7_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp8_stage0_subdone) & (1'b1 == ap_condition_pp8_exit_iter0_state100) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if (((grp_merlin_memcpy_4_0_fu_2494_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state99))) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp8_stage1_subdone) & (1'b1 == ap_CS_fsm_pp8_stage1)) | ((1'b0 == ap_block_pp8_stage20_subdone) & (1'b1 == ap_CS_fsm_pp8_stage20)))) begin
            ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
        end else if (((grp_merlin_memcpy_4_0_fu_2494_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state99))) begin
            ap_enable_reg_pp8_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_merlin_memcpy_0_0_fu_2478_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd1))) begin
            grp_merlin_memcpy_0_0_fu_2478_ap_start_reg <= 1'b1;
        end else if ((grp_merlin_memcpy_0_0_fu_2478_ap_ready == 1'b1)) begin
            grp_merlin_memcpy_0_0_fu_2478_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_merlin_memcpy_1_0_0_fu_2470_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state51)) begin
            grp_merlin_memcpy_1_0_0_fu_2470_ap_start_reg <= 1'b1;
        end else if ((grp_merlin_memcpy_1_0_0_fu_2470_ap_ready == 1'b1)) begin
            grp_merlin_memcpy_1_0_0_fu_2470_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_merlin_memcpy_2_0_fu_2502_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state54)) begin
            grp_merlin_memcpy_2_0_fu_2502_ap_start_reg <= 1'b1;
        end else if ((grp_merlin_memcpy_2_0_fu_2502_ap_ready == 1'b1)) begin
            grp_merlin_memcpy_2_0_fu_2502_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_merlin_memcpy_3_0_fu_2486_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state84)) begin
            grp_merlin_memcpy_3_0_fu_2486_ap_start_reg <= 1'b1;
        end else if ((grp_merlin_memcpy_3_0_fu_2486_ap_ready == 1'b1)) begin
            grp_merlin_memcpy_3_0_fu_2486_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_merlin_memcpy_4_0_fu_2494_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state98)) begin
            grp_merlin_memcpy_4_0_fu_2494_ap_start_reg <= 1'b1;
        end else if ((grp_merlin_memcpy_4_0_fu_2494_ap_ready == 1'b1)) begin
            grp_merlin_memcpy_4_0_fu_2494_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_ext_blocking_n_reg <= ap_ext_blocking_n;
end

always @ (posedge ap_clk) begin
    ap_int_blocking_n_reg <= ap_int_blocking_n;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_7149)) begin
        if ((trunc_ln187_1_reg_7509 == 3'd7)) begin
            ap_phi_reg_pp2_iter0_phi_ln187_reg_2381 <= x_buf_0_7_q0;
        end else if ((trunc_ln187_1_reg_7509 == 3'd6)) begin
            ap_phi_reg_pp2_iter0_phi_ln187_reg_2381 <= x_buf_0_6_q0;
        end else if ((trunc_ln187_1_reg_7509 == 3'd5)) begin
            ap_phi_reg_pp2_iter0_phi_ln187_reg_2381 <= x_buf_0_5_q0;
        end else if ((trunc_ln187_1_reg_7509 == 3'd4)) begin
            ap_phi_reg_pp2_iter0_phi_ln187_reg_2381 <= x_buf_0_4_q0;
        end else if ((trunc_ln187_1_reg_7509 == 3'd3)) begin
            ap_phi_reg_pp2_iter0_phi_ln187_reg_2381 <= x_buf_0_3_q0;
        end else if ((trunc_ln187_1_reg_7509 == 3'd2)) begin
            ap_phi_reg_pp2_iter0_phi_ln187_reg_2381 <= x_buf_0_2_q0;
        end else if ((trunc_ln187_1_reg_7509 == 3'd1)) begin
            ap_phi_reg_pp2_iter0_phi_ln187_reg_2381 <= x_buf_0_1_q0;
        end else if ((trunc_ln187_1_reg_7509 == 3'd0)) begin
            ap_phi_reg_pp2_iter0_phi_ln187_reg_2381 <= x_buf_0_0_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    ap_str_blocking_n_reg <= ap_str_blocking_n;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) & (icmp_ln195_fu_5819_p2 == 1'd0))) begin
        i1_0_reg_2403 <= i_1_fu_5825_p2;
    end else if (((grp_merlin_memcpy_0_0_fu_2478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
        i1_0_reg_2403 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) & (icmp_ln213_fu_5861_p2 == 1'd0))) begin
        i3_0_reg_2414 <= i_2_fu_5867_p2;
    end else if (((grp_merlin_memcpy_1_0_0_fu_2470_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
        i3_0_reg_2414 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln223_reg_7617 == 1'd0))) begin
        i4_0_reg_2425 <= i_4_reg_7621;
    end else if (((grp_merlin_memcpy_2_0_fu_2502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
        i4_0_reg_2425 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        i5_0_reg_2436 <= 15'd0;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln232_fu_5901_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        i5_0_reg_2436 <= i_5_fu_5907_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln242_reg_7665 == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        i6_0_reg_2447 <= i_6_reg_7669;
    end else if (((grp_merlin_memcpy_3_0_fu_2486_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state85))) begin
        i6_0_reg_2447 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (icmp_ln252_reg_7715 == 1'd0))) begin
        i7_0_reg_2459 <= i_7_reg_7719;
    end else if (((grp_merlin_memcpy_4_0_fu_2494_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state99))) begin
        i7_0_reg_2459 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3363_reg_6592 == 1'd0))) begin
        i_0_i28_reg_2318 <= i_8_reg_6596;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd0))) begin
        i_0_i28_reg_2318 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1097_fu_2899_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_i_reg_2260 <= i_fu_2905_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_0_i_reg_2260 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_0_reg_2295 <= 15'd0;
    end else if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln178_fu_5693_p2 == 1'd1))) begin
        i_0_reg_2295 <= i_3_reg_6495;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        index1_1_i_reg_2283 <= index1_1_fu_3225_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        index1_1_i_reg_2283 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        index2_2_i_reg_2271 <= index2_1_fu_3217_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        index2_2_i_reg_2271 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        j_0_reg_2330 <= j_reg_7445;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        j_0_reg_2330 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln182_reg_7460 == 1'd0))) begin
        k_0_reg_2342 <= k_reg_7464;
    end else if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln178_fu_5693_p2 == 1'd0))) begin
        k_0_reg_2342 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln182_reg_7460_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage5_11001))) begin
        mul_0_reg_2353 <= grp_fu_2510_p2;
    end else if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln178_fu_5693_p2 == 1'd0))) begin
        mul_0_reg_2353 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        phi_mul_reg_2307 <= 26'd0;
    end else if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln178_fu_5693_p2 == 1'd1))) begin
        phi_mul_reg_2307 <= add_ln169_reg_6486;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln169_reg_6486 <= add_ln169_fu_3233_p2;
        i_3_reg_6495 <= i_3_fu_3245_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage7) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_11_reg_6755) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'b0 == ap_block_pp1_stage7_11001))) begin
        add_ln32_22_reg_6922 <= add_ln32_22_fu_3741_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (icmp_ln252_reg_7715 == 1'd0))) begin
        add_ln32_8_reg_7747 <= add_ln32_8_fu_6005_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3363_fu_3461_p2 == 1'd0))) begin
        add_ln32_reg_6783 <= add_ln32_fu_3506_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd0))) begin
        add_ln3553_reg_6527 <= add_ln3553_fu_3375_p2;
        icmp_ln3346_reg_6506 <= icmp_ln3346_fu_3331_p2;
        icmp_ln3373_1_reg_6532 <= icmp_ln3373_1_fu_3381_p2;
        icmp_ln3373_2_reg_6537 <= icmp_ln3373_2_fu_3387_p2;
        icmp_ln3416_reg_6515 <= icmp_ln3416_fu_3351_p2;
        icmp_ln3421_1_reg_6542 <= icmp_ln3421_1_fu_3393_p2;
        icmp_ln3421_2_reg_6547 <= icmp_ln3421_2_fu_3399_p2;
        icmp_ln3421_3_reg_6552 <= icmp_ln3421_3_fu_3405_p2;
        icmp_ln3464_reg_6519 <= icmp_ln3464_fu_3357_p2;
        icmp_ln3469_1_reg_6567 <= icmp_ln3469_1_fu_3431_p2;
        icmp_ln3469_2_reg_6572 <= icmp_ln3469_2_fu_3437_p2;
        icmp_ln3469_3_reg_6577 <= icmp_ln3469_3_fu_3443_p2;
        icmp_ln3469_4_reg_6582 <= icmp_ln3469_4_fu_3449_p2;
        icmp_ln3469_5_reg_6587 <= icmp_ln3469_5_fu_3455_p2;
        icmp_ln3469_reg_6562 <= icmp_ln3469_fu_3425_p2;
        icmp_ln3512_reg_6523 <= icmp_ln3512_fu_3363_p2;
        len_reg_6510 <= len_fu_3343_p3;
        lshr_ln_reg_6500 <= {{phi_mul_reg_2307[25:6]}};
        xor_ln3469_reg_6557 <= xor_ln3469_fu_3419_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3363_fu_3461_p2 == 1'd0))) begin
        and_ln3373_1_reg_6792 <= grp_fu_2660_p2;
        and_ln3373_reg_6788 <= grp_fu_2605_p2;
        icmp_ln3373_reg_6779 <= grp_fu_2597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3363_fu_3461_p2 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        and_ln3421_1_reg_6763 <= grp_fu_2610_p2;
        and_ln3421_2_reg_6767 <= grp_fu_2615_p2;
        and_ln3421_3_reg_6771 <= grp_fu_2620_p2;
        and_ln3421_4_reg_6775 <= grp_fu_2660_p2;
        and_ln3421_reg_6759 <= grp_fu_2605_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        and_ln3421_1_reg_6763_pp1_iter1_reg <= and_ln3421_1_reg_6763;
        and_ln3421_2_reg_6767_pp1_iter1_reg <= and_ln3421_2_reg_6767;
        and_ln3421_3_reg_6771_pp1_iter1_reg <= and_ln3421_3_reg_6771;
        and_ln3421_4_reg_6775_pp1_iter1_reg <= and_ln3421_4_reg_6775;
        and_ln3421_reg_6759_pp1_iter1_reg <= and_ln3421_reg_6759;
        and_ln3469_10_reg_6751_pp1_iter1_reg <= and_ln3469_10_reg_6751;
        and_ln3469_11_reg_6755_pp1_iter1_reg <= and_ln3469_11_reg_6755;
        and_ln3469_4_reg_6727_pp1_iter1_reg <= and_ln3469_4_reg_6727;
        and_ln3469_5_reg_6731_pp1_iter1_reg <= and_ln3469_5_reg_6731;
        and_ln3469_6_reg_6735_pp1_iter1_reg <= and_ln3469_6_reg_6735;
        and_ln3469_7_reg_6739_pp1_iter1_reg <= and_ln3469_7_reg_6739;
        and_ln3469_8_reg_6743_pp1_iter1_reg <= and_ln3469_8_reg_6743;
        and_ln3469_9_reg_6747_pp1_iter1_reg <= and_ln3469_9_reg_6747;
        and_ln3517_10_reg_6703_pp1_iter1_reg <= and_ln3517_10_reg_6703;
        and_ln3517_11_reg_6707_pp1_iter1_reg <= and_ln3517_11_reg_6707;
        and_ln3517_4_reg_6679_pp1_iter1_reg <= and_ln3517_4_reg_6679;
        and_ln3517_5_reg_6683_pp1_iter1_reg <= and_ln3517_5_reg_6683;
        and_ln3517_6_reg_6687_pp1_iter1_reg <= and_ln3517_6_reg_6687;
        and_ln3517_7_reg_6691_pp1_iter1_reg <= and_ln3517_7_reg_6691;
        and_ln3517_8_reg_6695_pp1_iter1_reg <= and_ln3517_8_reg_6695;
        and_ln3517_9_reg_6699_pp1_iter1_reg <= and_ln3517_9_reg_6699;
        and_ln3553_10_reg_6655_pp1_iter1_reg <= and_ln3553_10_reg_6655;
        and_ln3553_11_reg_6659_pp1_iter1_reg <= and_ln3553_11_reg_6659;
        and_ln3553_4_reg_6631_pp1_iter1_reg <= and_ln3553_4_reg_6631;
        and_ln3553_5_reg_6635_pp1_iter1_reg <= and_ln3553_5_reg_6635;
        and_ln3553_6_reg_6639_pp1_iter1_reg <= and_ln3553_6_reg_6639;
        and_ln3553_7_reg_6643_pp1_iter1_reg <= and_ln3553_7_reg_6643;
        and_ln3553_8_reg_6647_pp1_iter1_reg <= and_ln3553_8_reg_6647;
        and_ln3553_9_reg_6651_pp1_iter1_reg <= and_ln3553_9_reg_6651;
        i_0_i28_reg_2318_pp1_iter1_reg <= i_0_i28_reg_2318;
        icmp_ln3363_reg_6592 <= icmp_ln3363_fu_3461_p2;
        icmp_ln3419_reg_6601_pp1_iter1_reg <= icmp_ln3419_reg_6601;
        icmp_ln3421_reg_6605_pp1_iter1_reg <= icmp_ln3421_reg_6605;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3363_fu_3461_p2 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        and_ln3469_10_reg_6751 <= grp_fu_2655_p2;
        and_ln3469_11_reg_6755 <= grp_fu_2660_p2;
        and_ln3469_4_reg_6727 <= grp_fu_2625_p2;
        and_ln3469_5_reg_6731 <= grp_fu_2630_p2;
        and_ln3469_6_reg_6735 <= grp_fu_2635_p2;
        and_ln3469_7_reg_6739 <= grp_fu_2640_p2;
        and_ln3469_8_reg_6743 <= grp_fu_2645_p2;
        and_ln3469_9_reg_6747 <= grp_fu_2650_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_fu_3481_p2 == 1'd0) & (icmp_ln3363_fu_3461_p2 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        and_ln3469_1_reg_6715 <= grp_fu_2610_p2;
        and_ln3469_2_reg_6719 <= grp_fu_2615_p2;
        and_ln3469_3_reg_6723 <= grp_fu_2620_p2;
        and_ln3469_reg_6711 <= grp_fu_2605_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3363_fu_3461_p2 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        and_ln3517_10_reg_6703 <= grp_fu_2655_p2;
        and_ln3517_11_reg_6707 <= grp_fu_2660_p2;
        and_ln3517_8_reg_6695 <= grp_fu_2645_p2;
        and_ln3517_9_reg_6699 <= grp_fu_2650_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_fu_3481_p2 == 1'd0) & (icmp_ln3363_fu_3461_p2 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        and_ln3517_1_reg_6667 <= grp_fu_2610_p2;
        and_ln3517_2_reg_6671 <= grp_fu_2615_p2;
        and_ln3517_3_reg_6675 <= grp_fu_2620_p2;
        and_ln3517_4_reg_6679 <= grp_fu_2625_p2;
        and_ln3517_5_reg_6683 <= grp_fu_2630_p2;
        and_ln3517_6_reg_6687 <= grp_fu_2635_p2;
        and_ln3517_7_reg_6691 <= grp_fu_2640_p2;
        and_ln3517_reg_6663 <= grp_fu_2605_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3419_fu_3481_p2 == 1'd0) & (icmp_ln3363_fu_3461_p2 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        and_ln3553_10_reg_6655 <= grp_fu_2655_p2;
        and_ln3553_1_reg_6619 <= grp_fu_2610_p2;
        and_ln3553_2_reg_6623 <= grp_fu_2615_p2;
        and_ln3553_3_reg_6627 <= grp_fu_2620_p2;
        and_ln3553_4_reg_6631 <= grp_fu_2625_p2;
        and_ln3553_5_reg_6635 <= grp_fu_2630_p2;
        and_ln3553_6_reg_6639 <= grp_fu_2635_p2;
        and_ln3553_7_reg_6643 <= grp_fu_2640_p2;
        and_ln3553_8_reg_6647 <= grp_fu_2645_p2;
        and_ln3553_9_reg_6651 <= grp_fu_2650_p2;
        and_ln3553_reg_6615 <= grp_fu_2605_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3363_fu_3461_p2 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        and_ln3553_11_reg_6659 <= grp_fu_2660_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage1) & (icmp_ln223_reg_7617 == 1'd0) & (1'b0 == ap_block_pp5_stage1_11001))) begin
        deg_addr_reg_7636 <= sext_ln228_fu_5896_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter2 == 1'b1) & (icmp_ln242_reg_7665_pp7_iter1_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        deg_inv_sqrt_load_1_reg_7695 <= deg_inv_sqrt_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter6 == 1'b1) & (icmp_ln242_reg_7665_pp7_iter5_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        deg_inv_sqrt_load_reg_7710 <= deg_inv_sqrt_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        edge_index5_reg_6349 <= {{edge_index[63:6]}};
        tmp_18_reg_6344 <= {{result_data[63:6]}};
        tmp_19_reg_6363 <= {{x_data[63:6]}};
        weight_data3_reg_6358 <= {{weight_data[63:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage2_11001) & (1'b1 == ap_CS_fsm_pp8_stage2) & (icmp_ln252_reg_7715 == 1'd0))) begin
        gmem_addr_9_reg_7832[58 : 0] <= zext_ln32_10_fu_6030_p1[58 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        i_4_reg_7621 <= i_4_fu_5884_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        i_6_reg_7669 <= i_6_fu_5924_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        i_7_reg_7719 <= i_7_fu_5966_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        i_8_reg_6596 <= i_8_fu_3466_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1097_reg_6387 <= icmp_ln1097_fu_2899_p2;
        icmp_ln1097_reg_6387_pp0_iter1_reg <= icmp_ln1097_reg_6387;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln182_reg_7460 <= icmp_ln182_fu_5727_p2;
        icmp_ln182_reg_7460_pp2_iter1_reg <= icmp_ln182_reg_7460;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln223_reg_7617 <= icmp_ln223_fu_5878_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln232_reg_7641 <= icmp_ln232_fu_5901_p2;
        icmp_ln232_reg_7641_pp6_iter1_reg <= icmp_ln232_reg_7641;
        zext_ln237_reg_7650_pp6_iter1_reg[14 : 0] <= zext_ln237_reg_7650[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp6_stage0_11001)) begin
        icmp_ln232_reg_7641_pp6_iter10_reg <= icmp_ln232_reg_7641_pp6_iter9_reg;
        icmp_ln232_reg_7641_pp6_iter11_reg <= icmp_ln232_reg_7641_pp6_iter10_reg;
        icmp_ln232_reg_7641_pp6_iter12_reg <= icmp_ln232_reg_7641_pp6_iter11_reg;
        icmp_ln232_reg_7641_pp6_iter13_reg <= icmp_ln232_reg_7641_pp6_iter12_reg;
        icmp_ln232_reg_7641_pp6_iter14_reg <= icmp_ln232_reg_7641_pp6_iter13_reg;
        icmp_ln232_reg_7641_pp6_iter2_reg <= icmp_ln232_reg_7641_pp6_iter1_reg;
        icmp_ln232_reg_7641_pp6_iter3_reg <= icmp_ln232_reg_7641_pp6_iter2_reg;
        icmp_ln232_reg_7641_pp6_iter4_reg <= icmp_ln232_reg_7641_pp6_iter3_reg;
        icmp_ln232_reg_7641_pp6_iter5_reg <= icmp_ln232_reg_7641_pp6_iter4_reg;
        icmp_ln232_reg_7641_pp6_iter6_reg <= icmp_ln232_reg_7641_pp6_iter5_reg;
        icmp_ln232_reg_7641_pp6_iter7_reg <= icmp_ln232_reg_7641_pp6_iter6_reg;
        icmp_ln232_reg_7641_pp6_iter8_reg <= icmp_ln232_reg_7641_pp6_iter7_reg;
        icmp_ln232_reg_7641_pp6_iter9_reg <= icmp_ln232_reg_7641_pp6_iter8_reg;
        zext_ln237_reg_7650_pp6_iter10_reg[14 : 0] <= zext_ln237_reg_7650_pp6_iter9_reg[14 : 0];
        zext_ln237_reg_7650_pp6_iter11_reg[14 : 0] <= zext_ln237_reg_7650_pp6_iter10_reg[14 : 0];
        zext_ln237_reg_7650_pp6_iter12_reg[14 : 0] <= zext_ln237_reg_7650_pp6_iter11_reg[14 : 0];
        zext_ln237_reg_7650_pp6_iter13_reg[14 : 0] <= zext_ln237_reg_7650_pp6_iter12_reg[14 : 0];
        zext_ln237_reg_7650_pp6_iter14_reg[14 : 0] <= zext_ln237_reg_7650_pp6_iter13_reg[14 : 0];
        zext_ln237_reg_7650_pp6_iter2_reg[14 : 0] <= zext_ln237_reg_7650_pp6_iter1_reg[14 : 0];
        zext_ln237_reg_7650_pp6_iter3_reg[14 : 0] <= zext_ln237_reg_7650_pp6_iter2_reg[14 : 0];
        zext_ln237_reg_7650_pp6_iter4_reg[14 : 0] <= zext_ln237_reg_7650_pp6_iter3_reg[14 : 0];
        zext_ln237_reg_7650_pp6_iter5_reg[14 : 0] <= zext_ln237_reg_7650_pp6_iter4_reg[14 : 0];
        zext_ln237_reg_7650_pp6_iter6_reg[14 : 0] <= zext_ln237_reg_7650_pp6_iter5_reg[14 : 0];
        zext_ln237_reg_7650_pp6_iter7_reg[14 : 0] <= zext_ln237_reg_7650_pp6_iter6_reg[14 : 0];
        zext_ln237_reg_7650_pp6_iter8_reg[14 : 0] <= zext_ln237_reg_7650_pp6_iter7_reg[14 : 0];
        zext_ln237_reg_7650_pp6_iter9_reg[14 : 0] <= zext_ln237_reg_7650_pp6_iter8_reg[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        icmp_ln242_reg_7665 <= icmp_ln242_fu_5918_p2;
        icmp_ln242_reg_7665_pp7_iter1_reg <= icmp_ln242_reg_7665;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp7_stage0_11001)) begin
        icmp_ln242_reg_7665_pp7_iter10_reg <= icmp_ln242_reg_7665_pp7_iter9_reg;
        icmp_ln242_reg_7665_pp7_iter2_reg <= icmp_ln242_reg_7665_pp7_iter1_reg;
        icmp_ln242_reg_7665_pp7_iter3_reg <= icmp_ln242_reg_7665_pp7_iter2_reg;
        icmp_ln242_reg_7665_pp7_iter4_reg <= icmp_ln242_reg_7665_pp7_iter3_reg;
        icmp_ln242_reg_7665_pp7_iter5_reg <= icmp_ln242_reg_7665_pp7_iter4_reg;
        icmp_ln242_reg_7665_pp7_iter6_reg <= icmp_ln242_reg_7665_pp7_iter5_reg;
        icmp_ln242_reg_7665_pp7_iter7_reg <= icmp_ln242_reg_7665_pp7_iter6_reg;
        icmp_ln242_reg_7665_pp7_iter8_reg <= icmp_ln242_reg_7665_pp7_iter7_reg;
        icmp_ln242_reg_7665_pp7_iter9_reg <= icmp_ln242_reg_7665_pp7_iter8_reg;
        zext_ln247_reg_7679_pp7_iter10_reg[16 : 0] <= zext_ln247_reg_7679_pp7_iter9_reg[16 : 0];
        zext_ln247_reg_7679_pp7_iter2_reg[16 : 0] <= zext_ln247_reg_7679[16 : 0];
        zext_ln247_reg_7679_pp7_iter3_reg[16 : 0] <= zext_ln247_reg_7679_pp7_iter2_reg[16 : 0];
        zext_ln247_reg_7679_pp7_iter4_reg[16 : 0] <= zext_ln247_reg_7679_pp7_iter3_reg[16 : 0];
        zext_ln247_reg_7679_pp7_iter5_reg[16 : 0] <= zext_ln247_reg_7679_pp7_iter4_reg[16 : 0];
        zext_ln247_reg_7679_pp7_iter6_reg[16 : 0] <= zext_ln247_reg_7679_pp7_iter5_reg[16 : 0];
        zext_ln247_reg_7679_pp7_iter7_reg[16 : 0] <= zext_ln247_reg_7679_pp7_iter6_reg[16 : 0];
        zext_ln247_reg_7679_pp7_iter8_reg[16 : 0] <= zext_ln247_reg_7679_pp7_iter7_reg[16 : 0];
        zext_ln247_reg_7679_pp7_iter9_reg[16 : 0] <= zext_ln247_reg_7679_pp7_iter8_reg[16 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        icmp_ln252_reg_7715 <= icmp_ln252_fu_5960_p2;
        icmp_ln252_reg_7715_pp8_iter1_reg <= icmp_ln252_reg_7715;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3363_fu_3461_p2 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        icmp_ln3419_reg_6601 <= icmp_ln3419_fu_3481_p2;
        zext_ln3424_11_reg_6609[19 : 0] <= zext_ln3424_11_fu_3492_p1[19 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3363_fu_3461_p2 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        icmp_ln3421_reg_6605 <= grp_fu_2597_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        j_reg_7445 <= j_fu_5699_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        k_reg_7464 <= k_fu_5733_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_reg_7715 == 1'd0))) begin
        norm_load_reg_7739 <= norm_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_cast33_reg_6374[57 : 0] <= p_cast33_fu_2893_p1[57 : 0];
        p_cast_reg_6379[57 : 0] <= p_cast_fu_2896_p1[57 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1097_reg_6387 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        raw_bits_10_reg_6451 <= {{gmem_RDATA[383:352]}};
        raw_bits_11_reg_6456 <= {{gmem_RDATA[415:384]}};
        raw_bits_12_reg_6461 <= {{gmem_RDATA[447:416]}};
        raw_bits_13_reg_6466 <= {{gmem_RDATA[479:448]}};
        raw_bits_14_reg_6471 <= {{gmem_RDATA[511:480]}};
        raw_bits_1_reg_6401 <= {{gmem_RDATA[63:32]}};
        raw_bits_2_reg_6411 <= {{gmem_RDATA[127:96]}};
        raw_bits_3_reg_6416 <= {{gmem_RDATA[159:128]}};
        raw_bits_4_reg_6421 <= {{gmem_RDATA[191:160]}};
        raw_bits_5_reg_6426 <= {{gmem_RDATA[223:192]}};
        raw_bits_6_reg_6431 <= {{gmem_RDATA[255:224]}};
        raw_bits_7_reg_6446 <= {{gmem_RDATA[351:320]}};
        raw_bits_8_reg_6436 <= {{gmem_RDATA[287:256]}};
        raw_bits_9_reg_6441 <= {{gmem_RDATA[319:288]}};
        raw_bits_s_reg_6406 <= {{gmem_RDATA[95:64]}};
        trunc_ln1110_reg_6396 <= trunc_ln1110_fu_2911_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3363_reg_6592 == 1'd0) & (icmp_ln3373_reg_6779 == 1'd0) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_2_10_reg_7189 <= {{gmem_RDATA[383:352]}};
        raw_bits_2_11_reg_7194 <= {{gmem_RDATA[415:384]}};
        raw_bits_2_12_reg_7199 <= {{gmem_RDATA[447:416]}};
        raw_bits_2_13_reg_7204 <= {{gmem_RDATA[479:448]}};
        raw_bits_2_5_reg_7159 <= {{gmem_RDATA[191:160]}};
        raw_bits_2_6_reg_7164 <= {{gmem_RDATA[223:192]}};
        raw_bits_2_7_reg_7169 <= {{gmem_RDATA[255:224]}};
        raw_bits_2_8_reg_7174 <= {{gmem_RDATA[287:256]}};
        raw_bits_2_9_reg_7179 <= {{gmem_RDATA[319:288]}};
        raw_bits_2_s_reg_7184 <= {{gmem_RDATA[351:320]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3373_1_reg_6792) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_2_14_reg_7209 <= {{gmem_RDATA[511:480]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3363_reg_6592 == 1'd0) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_2_1_reg_7139 <= {{gmem_RDATA[63:32]}};
        raw_bits_2_2_reg_7144 <= {{gmem_RDATA[95:64]}};
        raw_bits_2_3_reg_7149 <= {{gmem_RDATA[127:96]}};
        trunc_ln3375_reg_7134 <= trunc_ln3375_fu_4133_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3373_reg_6788) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_2_4_reg_7154 <= {{gmem_RDATA[159:128]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3421_reg_6605_pp1_iter1_reg == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_3_10_reg_7316 <= {{gmem_RDATA[383:352]}};
        raw_bits_3_11_reg_7321 <= {{gmem_RDATA[415:384]}};
        raw_bits_3_12_reg_7326 <= {{gmem_RDATA[447:416]}};
        raw_bits_3_13_reg_7331 <= {{gmem_RDATA[479:448]}};
        raw_bits_3_8_reg_7301 <= {{gmem_RDATA[287:256]}};
        raw_bits_3_9_reg_7306 <= {{gmem_RDATA[319:288]}};
        raw_bits_3_s_reg_7311 <= {{gmem_RDATA[351:320]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_4_reg_6775_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_3_14_reg_7341 <= {{gmem_RDATA[511:480]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_3_1_reg_7119 <= {{gmem_RDATA[63:32]}};
        raw_bits_3_2_reg_7124 <= {{gmem_RDATA[95:64]}};
        raw_bits_3_3_reg_7129 <= {{gmem_RDATA[127:96]}};
        trunc_ln3423_reg_7114 <= trunc_ln3423_fu_4099_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_reg_6759) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_3_4_reg_7246 <= {{gmem_RDATA[159:128]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_1_reg_6763_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_3_5_reg_7261 <= {{gmem_RDATA[191:160]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_2_reg_6767_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_3_6_reg_7276 <= {{gmem_RDATA[223:192]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_3_reg_6771_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_3_7_reg_7291 <= {{gmem_RDATA[255:224]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_7_reg_6739_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_4_10_reg_7286 <= {{gmem_RDATA[383:352]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_8_reg_6743_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_4_11_reg_7296 <= {{gmem_RDATA[415:384]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_9_reg_6747_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_4_12_reg_7336 <= {{gmem_RDATA[447:416]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage6) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_10_reg_6751_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'b0 == ap_block_pp1_stage6_11001))) begin
        raw_bits_4_13_reg_7346 <= {{gmem_RDATA[479:448]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage7) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_11_reg_6755_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'b0 == ap_block_pp1_stage7_11001))) begin
        raw_bits_4_14_reg_7351 <= {{gmem_RDATA[511:480]}};
        shl_ln3472_7_reg_7356[6 : 1] <= shl_ln3472_7_fu_5657_p3[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_4_1_reg_7073 <= {{gmem_RDATA[63:32]}};
        raw_bits_4_2_reg_7078 <= {{gmem_RDATA[95:64]}};
        raw_bits_4_3_reg_7083 <= {{gmem_RDATA[127:96]}};
        trunc_ln3471_reg_7068 <= trunc_ln3471_fu_4014_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3469_reg_6711) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_4_4_reg_7088 <= {{gmem_RDATA[159:128]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3469_1_reg_6715) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_4_5_reg_7093 <= {{gmem_RDATA[191:160]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3469_2_reg_6719) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_4_6_reg_7098 <= {{gmem_RDATA[223:192]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3469_3_reg_6723) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_4_7_reg_7103 <= {{gmem_RDATA[255:224]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_4_reg_6727) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_4_8_reg_7235 <= {{gmem_RDATA[287:256]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_5_reg_6731_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_4_9_reg_7256 <= {{gmem_RDATA[319:288]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_6_reg_6735_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_4_s_reg_7271 <= {{gmem_RDATA[351:320]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3517_7_reg_6691) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_5_10_reg_7063 <= {{gmem_RDATA[383:352]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_8_reg_6695) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_5_11_reg_7230 <= {{gmem_RDATA[415:384]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_9_reg_6699_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_5_12_reg_7251 <= {{gmem_RDATA[447:416]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_10_reg_6703_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_5_13_reg_7266 <= {{gmem_RDATA[479:448]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_11_reg_6707_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_5_14_reg_7281 <= {{gmem_RDATA[511:480]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_5_1_reg_7013 <= {{gmem_RDATA[63:32]}};
        raw_bits_5_2_reg_7018 <= {{gmem_RDATA[95:64]}};
        raw_bits_5_3_reg_7023 <= {{gmem_RDATA[127:96]}};
        trunc_ln3519_reg_7008 <= trunc_ln3519_fu_3900_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3517_reg_6663) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_5_4_reg_7028 <= {{gmem_RDATA[159:128]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3517_1_reg_6667) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_5_5_reg_7033 <= {{gmem_RDATA[191:160]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3517_2_reg_6671) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_5_6_reg_7038 <= {{gmem_RDATA[223:192]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3517_3_reg_6675) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_5_7_reg_7043 <= {{gmem_RDATA[255:224]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3517_4_reg_6679) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_5_8_reg_7048 <= {{gmem_RDATA[287:256]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3517_5_reg_6683) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_5_9_reg_7053 <= {{gmem_RDATA[319:288]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3517_6_reg_6687) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_5_s_reg_7058 <= {{gmem_RDATA[351:320]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3553_7_reg_6643) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_6_10_reg_6988 <= {{gmem_RDATA[383:352]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3553_8_reg_6647) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_6_11_reg_6993 <= {{gmem_RDATA[415:384]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3553_9_reg_6651) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_6_12_reg_6998 <= {{gmem_RDATA[447:416]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3553_10_reg_6655) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_6_13_reg_7003 <= {{gmem_RDATA[479:448]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == and_ln3553_11_reg_6659) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        raw_bits_6_14_reg_7225 <= {{gmem_RDATA[511:480]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_6_1_reg_6938 <= {{gmem_RDATA[63:32]}};
        raw_bits_6_2_reg_6943 <= {{gmem_RDATA[95:64]}};
        raw_bits_6_3_reg_6948 <= {{gmem_RDATA[127:96]}};
        trunc_ln3555_reg_6933 <= trunc_ln3555_fu_3756_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3553_reg_6615) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_6_4_reg_6953 <= {{gmem_RDATA[159:128]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3553_1_reg_6619) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_6_5_reg_6958 <= {{gmem_RDATA[191:160]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3553_2_reg_6623) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_6_6_reg_6963 <= {{gmem_RDATA[223:192]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3553_3_reg_6627) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_6_7_reg_6968 <= {{gmem_RDATA[255:224]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3553_4_reg_6631) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_6_8_reg_6973 <= {{gmem_RDATA[287:256]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3553_5_reg_6635) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_6_9_reg_6978 <= {{gmem_RDATA[319:288]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'd0 == and_ln3553_6_reg_6639) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        raw_bits_6_s_reg_6983 <= {{gmem_RDATA[351:320]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage9_11001) & (1'b1 == ap_CS_fsm_pp8_stage9) & (icmp_ln252_reg_7715 == 1'd0))) begin
        raw_bits_7_10_reg_8024 <= {{gmem_RDATA[383:352]}};
        raw_bits_7_11_reg_8029 <= {{gmem_RDATA[415:384]}};
        raw_bits_7_12_reg_8039 <= {{gmem_RDATA[447:416]}};
        raw_bits_7_13_reg_8049 <= {{gmem_RDATA[479:448]}};
        raw_bits_7_14_reg_8059 <= {{gmem_RDATA[511:480]}};
        raw_bits_7_1_reg_7974 <= {{gmem_RDATA[63:32]}};
        raw_bits_7_2_reg_7979 <= {{gmem_RDATA[95:64]}};
        raw_bits_7_3_reg_7984 <= {{gmem_RDATA[127:96]}};
        raw_bits_7_4_reg_7989 <= {{gmem_RDATA[159:128]}};
        raw_bits_7_5_reg_7994 <= {{gmem_RDATA[191:160]}};
        raw_bits_7_6_reg_7999 <= {{gmem_RDATA[223:192]}};
        raw_bits_7_7_reg_8004 <= {{gmem_RDATA[255:224]}};
        raw_bits_7_8_reg_8009 <= {{gmem_RDATA[287:256]}};
        raw_bits_7_9_reg_8014 <= {{gmem_RDATA[319:288]}};
        raw_bits_7_s_reg_8019 <= {{gmem_RDATA[351:320]}};
        trunc_ln162_reg_7969 <= trunc_ln162_fu_6040_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_fu_3481_p2 == 1'd0) & (icmp_ln3363_fu_3461_p2 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_fu_3481_p2 == 1'd0) & (icmp_ln3363_fu_3461_p2 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_fu_3481_p2 == 1'd0) & (icmp_ln3363_fu_3461_p2 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3419_fu_3481_p2 == 1'd0) & (icmp_ln3363_fu_3461_p2 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)))) begin
        reg_2804 <= grp_fu_2601_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_4_reg_6775) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'b0 == ap_block_pp1_stage6_11001)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3421_reg_6605 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_3_reg_6771) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_2_reg_6767) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_1_reg_6763) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_10_reg_6751) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'b0 == ap_block_pp1_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_9_reg_6747) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0) & (1'b0 == ap_block_pp1_stage6_11001)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_8_reg_6743) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_7_reg_6739) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_6_reg_6735) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_5_reg_6731) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_11_reg_6707) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_10_reg_6703) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_9_reg_6699) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_reg_6759) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_4_reg_6727) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_8_reg_6695) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'd0 == and_ln3553_11_reg_6659) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)))) begin
        reg_2808 <= grp_fu_2665_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage6) & (icmp_ln252_reg_7715 == 1'd0) & (1'b0 == ap_block_pp8_stage6_11001)) | ((ap_enable_reg_pp7_iter6 == 1'b1) & (icmp_ln242_reg_7665_pp7_iter5_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln182_reg_7460 == 1'd0) & (1'b0 == ap_block_pp2_stage5_11001)))) begin
        reg_2812 <= grp_fu_2575_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp8_stage16) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_reg_7715 == 1'd0) & (1'b0 == ap_block_pp8_stage16_11001)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage9) & (icmp_ln223_reg_7617 == 1'd0) & (1'b0 == ap_block_pp5_stage9_11001)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (icmp_ln182_reg_7460_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage5_11001)))) begin
        reg_2819 <= grp_fu_2510_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln223_reg_7617 == 1'd0) & (1'b0 == ap_block_pp5_stage1_11001)) | ((ap_enable_reg_pp7_iter2 == 1'b1) & (icmp_ln242_reg_7665_pp7_iter1_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001)))) begin
        reg_2825 <= edge_weight_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln232_reg_7641 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage2) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln223_reg_7617 == 1'd0) & (1'b0 == ap_block_pp5_stage2_11001)))) begin
        reg_2831 <= deg_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage6) & (icmp_ln252_reg_7715 == 1'd0) & (1'b0 == ap_block_pp8_stage6_11001)) | ((ap_enable_reg_pp7_iter10 == 1'b1) & (icmp_ln242_reg_7665_pp7_iter9_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001)))) begin
        reg_2837 <= grp_fu_2580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        shl_ln2_reg_7214[9 : 4] <= shl_ln2_fu_4287_p3[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage16) & (icmp_ln252_reg_7715 == 1'd0) & (1'b0 == ap_block_pp8_stage16_11001))) begin
        tmp_0_10_reg_8199 <= grp_fu_2555_p2;
        tmp_0_11_reg_8204 <= grp_fu_2559_p2;
        tmp_0_12_reg_8209 <= grp_fu_2563_p2;
        tmp_0_13_reg_8214 <= grp_fu_2567_p2;
        tmp_0_14_reg_8219 <= grp_fu_2571_p2;
        tmp_0_1_reg_8149 <= grp_fu_2515_p2;
        tmp_0_2_reg_8154 <= grp_fu_2519_p2;
        tmp_0_3_reg_8159 <= grp_fu_2523_p2;
        tmp_0_4_reg_8164 <= grp_fu_2527_p2;
        tmp_0_5_reg_8169 <= grp_fu_2531_p2;
        tmp_0_6_reg_8174 <= grp_fu_2535_p2;
        tmp_0_7_reg_8179 <= grp_fu_2539_p2;
        tmp_0_8_reg_8184 <= grp_fu_2543_p2;
        tmp_0_9_reg_8189 <= grp_fu_2547_p2;
        tmp_0_s_reg_8194 <= grp_fu_2551_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln232_reg_7641_pp6_iter13_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        tmp_11_reg_7660 <= grp_fu_2592_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln182_reg_7460 == 1'd0))) begin
        tmp_12_reg_7593 <= tmp_12_fu_5794_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage8_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage8) & (icmp_ln252_reg_7715 == 1'd0))) begin
        tmp_7_10_reg_7964 <= grp_fu_2588_p2;
        tmp_7_8_reg_7949 <= grp_fu_2575_p2;
        tmp_7_9_reg_7954 <= grp_fu_2580_p2;
        tmp_7_s_reg_7959 <= grp_fu_2584_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage9_11001) & (1'b1 == ap_CS_fsm_pp8_stage9) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_reg_7715 == 1'd0))) begin
        tmp_7_11_reg_8034 <= grp_fu_2575_p2;
        tmp_7_12_reg_8044 <= grp_fu_2580_p2;
        tmp_7_13_reg_8054 <= grp_fu_2584_p2;
        tmp_7_14_reg_8064 <= grp_fu_2588_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage6) & (icmp_ln252_reg_7715 == 1'd0) & (1'b0 == ap_block_pp8_stage6_11001))) begin
        tmp_7_2_reg_7919 <= grp_fu_2584_p2;
        tmp_7_3_reg_7924 <= grp_fu_2588_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage7_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage7) & (icmp_ln252_reg_7715 == 1'd0))) begin
        tmp_7_4_reg_7929 <= grp_fu_2575_p2;
        tmp_7_5_reg_7934 <= grp_fu_2580_p2;
        tmp_7_6_reg_7939 <= grp_fu_2584_p2;
        tmp_7_7_reg_7944 <= grp_fu_2588_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln182_fu_5727_p2 == 1'd0))) begin
        trunc_ln187_1_reg_7509 <= trunc_ln187_1_fu_5768_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        x_mul_0_addr_reg_7361 <= zext_ln189_fu_5673_p1;
        x_mul_10_addr_reg_7411 <= zext_ln189_fu_5673_p1;
        x_mul_11_addr_reg_7416 <= zext_ln189_fu_5673_p1;
        x_mul_12_addr_reg_7421 <= zext_ln189_fu_5673_p1;
        x_mul_13_addr_reg_7426 <= zext_ln189_fu_5673_p1;
        x_mul_14_addr_reg_7431 <= zext_ln189_fu_5673_p1;
        x_mul_15_addr_reg_7436 <= zext_ln189_fu_5673_p1;
        x_mul_1_addr_reg_7366 <= zext_ln189_fu_5673_p1;
        x_mul_2_addr_reg_7371 <= zext_ln189_fu_5673_p1;
        x_mul_3_addr_reg_7376 <= zext_ln189_fu_5673_p1;
        x_mul_4_addr_reg_7381 <= zext_ln189_fu_5673_p1;
        x_mul_5_addr_reg_7386 <= zext_ln189_fu_5673_p1;
        x_mul_6_addr_reg_7391 <= zext_ln189_fu_5673_p1;
        x_mul_7_addr_reg_7396 <= zext_ln189_fu_5673_p1;
        x_mul_8_addr_reg_7401 <= zext_ln189_fu_5673_p1;
        x_mul_9_addr_reg_7406 <= zext_ln189_fu_5673_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp8_stage2_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage2) & (icmp_ln252_reg_7715 == 1'd0))) begin
        x_mul_0_load_reg_7839 <= x_mul_0_q0;
        x_mul_10_load_reg_7889 <= x_mul_10_q0;
        x_mul_11_load_reg_7894 <= x_mul_11_q0;
        x_mul_12_load_reg_7899 <= x_mul_12_q0;
        x_mul_13_load_reg_7904 <= x_mul_13_q0;
        x_mul_14_load_reg_7909 <= x_mul_14_q0;
        x_mul_15_load_reg_7914 <= x_mul_15_q0;
        x_mul_1_load_reg_7844 <= x_mul_1_q0;
        x_mul_2_load_reg_7849 <= x_mul_2_q0;
        x_mul_3_load_reg_7854 <= x_mul_3_q0;
        x_mul_4_load_reg_7859 <= x_mul_4_q0;
        x_mul_5_load_reg_7864 <= x_mul_5_q0;
        x_mul_6_load_reg_7869 <= x_mul_6_q0;
        x_mul_7_load_reg_7874 <= x_mul_7_q0;
        x_mul_8_load_reg_7879 <= x_mul_8_q0;
        x_mul_9_load_reg_7884 <= x_mul_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln178_fu_5693_p2 == 1'd0))) begin
        zext_ln182_reg_7455[1 : 0] <= zext_ln182_fu_5723_p1[1 : 0];
        zext_ln187_reg_7450[2 : 0] <= zext_ln187_fu_5709_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln232_fu_5901_p2 == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        zext_ln237_reg_7650[14 : 0] <= zext_ln237_fu_5913_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln242_reg_7665 == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        zext_ln247_reg_7679[16 : 0] <= zext_ln247_fu_5945_p1[16 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln1097_fu_2899_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln3363_fu_3461_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln182_fu_5727_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state34 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state34 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln223_fu_5878_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state56 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state56 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln232_fu_5901_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state68 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state68 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln242_fu_5918_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state86 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state86 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln252_fu_5960_p2 == 1'd1)) begin
        ap_condition_pp8_exit_iter0_state100 = 1'b1;
    end else begin
        ap_condition_pp8_exit_iter0_state100 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_4 & ap_sub_ext_blocking_4) == 1'b1) & ((ap_wait_3 & ap_sub_ext_blocking_3) == 1'b1) & ((ap_wait_2 & ap_sub_ext_blocking_2) == 1'b1) & ((ap_wait_1 & ap_sub_ext_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_ext_blocking_0) == 1'b1))) begin
        ap_ext_blocking_sub_n = 1'b0;
    end else begin
        ap_ext_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter15 == 1'b0) & (ap_enable_reg_pp6_iter14 == 1'b0) & (ap_enable_reg_pp6_iter13 == 1'b0) & (ap_enable_reg_pp6_iter12 == 1'b0) & (ap_enable_reg_pp6_iter11 == 1'b0) & (ap_enable_reg_pp6_iter10 == 1'b0) & (ap_enable_reg_pp6_iter9 == 1'b0) & (ap_enable_reg_pp6_iter8 == 1'b0) & (ap_enable_reg_pp6_iter7 == 1'b0) & (ap_enable_reg_pp6_iter6 == 1'b0) & (ap_enable_reg_pp6_iter5 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b0) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter11 == 1'b0) & (ap_enable_reg_pp7_iter9 == 1'b0) & (ap_enable_reg_pp7_iter8 == 1'b0) & (ap_enable_reg_pp7_iter7 == 1'b0) & (ap_enable_reg_pp7_iter5 == 1'b0) & (ap_enable_reg_pp7_iter4 == 1'b0) & (ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0) & (ap_enable_reg_pp7_iter10 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter6 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_4 & ap_sub_int_blocking_4) == 1'b1) & ((ap_wait_3 & ap_sub_int_blocking_3) == 1'b1) & ((ap_wait_2 & ap_sub_int_blocking_2) == 1'b1) & ((ap_wait_1 & ap_sub_int_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_int_blocking_0) == 1'b1))) begin
        ap_int_blocking_sub_n = 1'b0;
    end else begin
        ap_int_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln223_reg_7617 == 1'd0))) begin
        ap_phi_mux_i4_0_phi_fu_2429_p4 = i_4_reg_7621;
    end else begin
        ap_phi_mux_i4_0_phi_fu_2429_p4 = i4_0_reg_2425;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln242_reg_7665 == 1'd0))) begin
        ap_phi_mux_i6_0_phi_fu_2451_p4 = i_6_reg_7669;
    end else begin
        ap_phi_mux_i6_0_phi_fu_2451_p4 = i6_0_reg_2447;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (icmp_ln252_reg_7715 == 1'd0))) begin
        ap_phi_mux_i7_0_phi_fu_2463_p4 = i_7_reg_7719;
    end else begin
        ap_phi_mux_i7_0_phi_fu_2463_p4 = i7_0_reg_2459;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3363_reg_6592 == 1'd0))) begin
        ap_phi_mux_i_0_i28_phi_fu_2322_p4 = i_8_reg_6596;
    end else begin
        ap_phi_mux_i_0_i28_phi_fu_2322_p4 = i_0_i28_reg_2318;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln182_reg_7460 == 1'd0))) begin
        ap_phi_mux_k_0_phi_fu_2346_p4 = k_reg_7464;
    end else begin
        ap_phi_mux_k_0_phi_fu_2346_p4 = k_0_reg_2342;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_4 & ap_sub_str_blocking_4) == 1'b1) & ((ap_wait_3 & ap_sub_str_blocking_3) == 1'b1) & ((ap_wait_2 & ap_sub_str_blocking_2) == 1'b1) & ((ap_wait_1 & ap_sub_str_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_str_blocking_0) == 1'b1))) begin
        ap_str_blocking_sub_n = 1'b0;
    end else begin
        ap_str_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((grp_merlin_memcpy_1_0_0_fu_2470_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_0 = 1'b1;
    end else begin
        ap_sub_ext_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_merlin_memcpy_0_0_fu_2478_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_1 = 1'b1;
    end else begin
        ap_sub_ext_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_merlin_memcpy_3_0_fu_2486_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_2 = 1'b1;
    end else begin
        ap_sub_ext_blocking_2 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_merlin_memcpy_4_0_fu_2494_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_3 = 1'b1;
    end else begin
        ap_sub_ext_blocking_3 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_merlin_memcpy_2_0_fu_2502_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_4 = 1'b1;
    end else begin
        ap_sub_ext_blocking_4 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_merlin_memcpy_1_0_0_fu_2470_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_0 = 1'b1;
    end else begin
        ap_sub_int_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_merlin_memcpy_0_0_fu_2478_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_1 = 1'b1;
    end else begin
        ap_sub_int_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_merlin_memcpy_3_0_fu_2486_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_2 = 1'b1;
    end else begin
        ap_sub_int_blocking_2 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_merlin_memcpy_4_0_fu_2494_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_3 = 1'b1;
    end else begin
        ap_sub_int_blocking_3 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_merlin_memcpy_2_0_fu_2502_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_4 = 1'b1;
    end else begin
        ap_sub_int_blocking_4 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_merlin_memcpy_1_0_0_fu_2470_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_0 = 1'b1;
    end else begin
        ap_sub_str_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_merlin_memcpy_0_0_fu_2478_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_1 = 1'b1;
    end else begin
        ap_sub_str_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_merlin_memcpy_3_0_fu_2486_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_2 = 1'b1;
    end else begin
        ap_sub_str_blocking_2 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_merlin_memcpy_4_0_fu_2494_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_3 = 1'b1;
    end else begin
        ap_sub_str_blocking_3 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_merlin_memcpy_2_0_fu_2502_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_4 = 1'b1;
    end else begin
        ap_sub_str_blocking_4 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state52 == ap_CS_fsm)) begin
        ap_wait_0 = 1'b1;
    end else begin
        ap_wait_0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state49 == ap_CS_fsm)) begin
        ap_wait_1 = 1'b1;
    end else begin
        ap_wait_1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state85 == ap_CS_fsm)) begin
        ap_wait_2 = 1'b1;
    end else begin
        ap_wait_2 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state99 == ap_CS_fsm)) begin
        ap_wait_3 = 1'b1;
    end else begin
        ap_wait_3 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state55 == ap_CS_fsm)) begin
        ap_wait_4 = 1'b1;
    end else begin
        ap_wait_4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        deg_address0 = zext_ln237_fu_5913_p1;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        deg_address0 = deg_addr_reg_7636;
    end else if (((1'b0 == ap_block_pp5_stage1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        deg_address0 = sext_ln228_fu_5896_p1;
    end else begin
        deg_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage1_11001)))) begin
        deg_ce0 = 1'b1;
    end else begin
        deg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        deg_inv_sqrt_address0 = sext_ln247_1_fu_5950_p1;
    end else if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter15 == 1'b1))) begin
        deg_inv_sqrt_address0 = zext_ln237_reg_7650_pp6_iter14_reg;
    end else begin
        deg_inv_sqrt_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter15 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001)))) begin
        deg_inv_sqrt_ce0 = 1'b1;
    end else begin
        deg_inv_sqrt_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter5 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        deg_inv_sqrt_ce1 = 1'b1;
    end else begin
        deg_inv_sqrt_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter15 == 1'b1) & (icmp_ln232_reg_7641_pp6_iter14_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        deg_inv_sqrt_we0 = 1'b1;
    end else begin
        deg_inv_sqrt_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln223_reg_7617 == 1'd0))) begin
        deg_we0 = 1'b1;
    end else begin
        deg_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        edge_index_buf_0_address0 = zext_ln228_fu_5890_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        edge_index_buf_0_address0 = grp_merlin_memcpy_2_0_fu_2502_dst_address0;
    end else begin
        edge_index_buf_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        edge_index_buf_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        edge_index_buf_0_ce0 = grp_merlin_memcpy_2_0_fu_2502_dst_ce0;
    end else begin
        edge_index_buf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        edge_index_buf_0_we0 = grp_merlin_memcpy_2_0_fu_2502_dst_we0;
    end else begin
        edge_index_buf_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        edge_index_buf_1_address0 = zext_ln247_1_fu_5940_p1;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        edge_index_buf_1_address0 = grp_merlin_memcpy_3_0_fu_2486_dst_address0;
    end else begin
        edge_index_buf_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        edge_index_buf_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        edge_index_buf_1_ce0 = grp_merlin_memcpy_3_0_fu_2486_dst_ce0;
    end else begin
        edge_index_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        edge_index_buf_1_ce1 = 1'b1;
    end else begin
        edge_index_buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        edge_index_buf_1_we0 = grp_merlin_memcpy_3_0_fu_2486_dst_we0;
    end else begin
        edge_index_buf_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        edge_index_buf_2_address0 = zext_ln207_fu_5837_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        edge_index_buf_2_address0 = grp_merlin_memcpy_0_0_fu_2478_dst_address0;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        edge_index_buf_2_address0 = grp_merlin_memcpy_1_0_0_fu_2470_src_address0;
    end else begin
        edge_index_buf_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        edge_index_buf_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        edge_index_buf_2_ce0 = grp_merlin_memcpy_0_0_fu_2478_dst_ce0;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        edge_index_buf_2_ce0 = grp_merlin_memcpy_1_0_0_fu_2470_src_ce0;
    end else begin
        edge_index_buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        edge_index_buf_2_ce1 = 1'b1;
    end else begin
        edge_index_buf_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        edge_index_buf_2_d0 = zext_ln195_fu_5831_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        edge_index_buf_2_d0 = grp_merlin_memcpy_0_0_fu_2478_dst_d0;
    end else begin
        edge_index_buf_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) & (icmp_ln195_fu_5819_p2 == 1'd0))) begin
        edge_index_buf_2_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        edge_index_buf_2_we0 = grp_merlin_memcpy_0_0_fu_2478_dst_we0;
    end else begin
        edge_index_buf_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) & (icmp_ln195_fu_5819_p2 == 1'd0))) begin
        edge_index_buf_2_we1 = 1'b1;
    end else begin
        edge_index_buf_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        edge_index_buf_3_address0 = zext_ln265_fu_5982_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        edge_index_buf_3_address0 = grp_merlin_memcpy_4_0_fu_2494_dst_address0;
    end else begin
        edge_index_buf_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        edge_index_buf_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        edge_index_buf_3_ce0 = grp_merlin_memcpy_4_0_fu_2494_dst_ce0;
    end else begin
        edge_index_buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        edge_index_buf_3_ce1 = 1'b1;
    end else begin
        edge_index_buf_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        edge_index_buf_3_we0 = grp_merlin_memcpy_4_0_fu_2494_dst_we0;
    end else begin
        edge_index_buf_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        edge_weight_address0 = zext_ln247_fu_5945_p1;
    end else if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        edge_weight_address0 = zext_ln228_fu_5890_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        edge_weight_address0 = zext_ln218_fu_5873_p1;
    end else begin
        edge_weight_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001)))) begin
        edge_weight_ce0 = 1'b1;
    end else begin
        edge_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) & (icmp_ln213_fu_5861_p2 == 1'd0))) begin
        edge_weight_we0 = 1'b1;
    end else begin
        edge_weight_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage2_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage2) & (icmp_ln252_reg_7715 == 1'd0))) begin
        gmem_ARADDR = zext_ln32_10_fu_6030_p1;
    end else if (((ap_predicate_op873_readreq_state23 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        gmem_ARADDR = zext_ln32_24_fu_4758_p1;
    end else if (((ap_predicate_op670_readreq_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage8_11001))) begin
        gmem_ARADDR = zext_ln32_22_fu_4088_p1;
    end else if (((ap_predicate_op617_readreq_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage7_11001))) begin
        gmem_ARADDR = zext_ln32_14_fu_3745_p1;
    end else if (((ap_predicate_op606_readreq_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage7_11001))) begin
        gmem_ARADDR = zext_ln32_20_fu_3730_p1;
    end else if (((ap_predicate_op588_readreq_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage6_11001))) begin
        gmem_ARADDR = zext_ln32_12_fu_3719_p1;
    end else if (((ap_predicate_op579_readreq_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage6_11001))) begin
        gmem_ARADDR = zext_ln32_18_fu_3708_p1;
    end else if (((ap_predicate_op562_readreq_state19 == 1'b1) & (1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        gmem_ARADDR = zext_ln32_11_fu_3697_p1;
    end else if (((ap_predicate_op554_readreq_state19 == 1'b1) & (1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        gmem_ARADDR = zext_ln32_17_fu_3686_p1;
    end else if (((ap_predicate_op547_readreq_state19 == 1'b1) & (1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        gmem_ARADDR = zext_ln32_25_fu_3675_p1;
    end else if (((ap_predicate_op536_readreq_state18 == 1'b1) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        gmem_ARADDR = zext_ln32_8_fu_3664_p1;
    end else if (((ap_predicate_op529_readreq_state18 == 1'b1) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        gmem_ARADDR = zext_ln32_16_fu_3653_p1;
    end else if (((ap_predicate_op522_readreq_state18 == 1'b1) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        gmem_ARADDR = zext_ln32_23_fu_3642_p1;
    end else if (((ap_predicate_op512_readreq_state17 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        gmem_ARADDR = zext_ln32_7_fu_3631_p1;
    end else if (((ap_predicate_op506_readreq_state17 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        gmem_ARADDR = zext_ln32_15_fu_3620_p1;
    end else if (((ap_predicate_op500_readreq_state17 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        gmem_ARADDR = zext_ln32_21_fu_3609_p1;
    end else if (((ap_predicate_op491_readreq_state16 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        gmem_ARADDR = zext_ln32_4_fu_3598_p1;
    end else if (((ap_predicate_op486_readreq_state16 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        gmem_ARADDR = zext_ln32_13_fu_3587_p1;
    end else if (((ap_predicate_op481_readreq_state16 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        gmem_ARADDR = zext_ln32_19_fu_3576_p1;
    end else if (((ap_predicate_op477_readreq_state16 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        gmem_ARADDR = zext_ln32_26_fu_3565_p1;
    end else if (((ap_predicate_op473_readreq_state15 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        gmem_ARADDR = zext_ln32_1_fu_3555_p1;
    end else if (((ap_predicate_op469_readreq_state15 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        gmem_ARADDR = zext_ln32_2_fu_3544_p1;
    end else if (((ap_predicate_op465_readreq_state15 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        gmem_ARADDR = zext_ln32_3_fu_3533_p1;
    end else if (((ap_predicate_op461_readreq_state15 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        gmem_ARADDR = zext_ln32_5_fu_3522_p1;
    end else if (((ap_predicate_op457_readreq_state15 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        gmem_ARADDR = zext_ln32_6_fu_3511_p1;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARADDR = empty_fu_2883_p1;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55))) begin
        gmem_ARADDR = grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state99))) begin
        gmem_ARADDR = grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85))) begin
        gmem_ARADDR = grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd1)))) begin
        gmem_ARADDR = grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_ARADDR = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARADDR;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55))) begin
        gmem_ARBURST = grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state99))) begin
        gmem_ARBURST = grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85))) begin
        gmem_ARBURST = grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd1)))) begin
        gmem_ARBURST = grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_ARBURST = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARBURST;
    end else begin
        gmem_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55))) begin
        gmem_ARCACHE = grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state99))) begin
        gmem_ARCACHE = grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85))) begin
        gmem_ARCACHE = grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd1)))) begin
        gmem_ARCACHE = grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_ARCACHE = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARCACHE;
    end else begin
        gmem_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55))) begin
        gmem_ARID = grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARID;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state99))) begin
        gmem_ARID = grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARID;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85))) begin
        gmem_ARID = grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARID;
    end else if (((1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd1)))) begin
        gmem_ARID = grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARID;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_ARID = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARID;
    end else begin
        gmem_ARID = 1'd0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage2_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage2) & (icmp_ln252_reg_7715 == 1'd0)) | ((ap_predicate_op873_readreq_state23 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_predicate_op617_readreq_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage7_11001)) | ((ap_predicate_op606_readreq_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage7_11001)) | ((ap_predicate_op588_readreq_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage6_11001)) | ((ap_predicate_op579_readreq_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage6_11001)) | ((ap_predicate_op562_readreq_state19 == 1'b1) & (1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op554_readreq_state19 == 1'b1) & (1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op547_readreq_state19 == 1'b1) & (1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op536_readreq_state18 == 1'b1) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op529_readreq_state18 == 1'b1) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op522_readreq_state18 == 1'b1) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op512_readreq_state17 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op506_readreq_state17 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op500_readreq_state17 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op491_readreq_state16 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op486_readreq_state16 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op481_readreq_state16 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op477_readreq_state16 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op670_readreq_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage8_11001)) | ((ap_predicate_op473_readreq_state15 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((ap_predicate_op469_readreq_state15 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((ap_predicate_op465_readreq_state15 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((ap_predicate_op461_readreq_state15 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((ap_predicate_op457_readreq_state15 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        gmem_ARLEN = 32'd1;
    end else if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARLEN = 32'd500;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55))) begin
        gmem_ARLEN = grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state99))) begin
        gmem_ARLEN = grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85))) begin
        gmem_ARLEN = grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd1)))) begin
        gmem_ARLEN = grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_ARLEN = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARLEN;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55))) begin
        gmem_ARLOCK = grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state99))) begin
        gmem_ARLOCK = grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85))) begin
        gmem_ARLOCK = grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd1)))) begin
        gmem_ARLOCK = grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_ARLOCK = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARLOCK;
    end else begin
        gmem_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55))) begin
        gmem_ARPROT = grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state99))) begin
        gmem_ARPROT = grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85))) begin
        gmem_ARPROT = grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd1)))) begin
        gmem_ARPROT = grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_ARPROT = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARPROT;
    end else begin
        gmem_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55))) begin
        gmem_ARQOS = grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state99))) begin
        gmem_ARQOS = grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85))) begin
        gmem_ARQOS = grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd1)))) begin
        gmem_ARQOS = grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_ARQOS = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARQOS;
    end else begin
        gmem_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55))) begin
        gmem_ARREGION = grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state99))) begin
        gmem_ARREGION = grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85))) begin
        gmem_ARREGION = grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd1)))) begin
        gmem_ARREGION = grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_ARREGION = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARREGION;
    end else begin
        gmem_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55))) begin
        gmem_ARSIZE = grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state99))) begin
        gmem_ARSIZE = grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85))) begin
        gmem_ARSIZE = grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd1)))) begin
        gmem_ARSIZE = grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_ARSIZE = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARSIZE;
    end else begin
        gmem_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55))) begin
        gmem_ARUSER = grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state99))) begin
        gmem_ARUSER = grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85))) begin
        gmem_ARUSER = grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd1)))) begin
        gmem_ARUSER = grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_ARUSER = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARUSER;
    end else begin
        gmem_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage2_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage2) & (icmp_ln252_reg_7715 == 1'd0)) | ((ap_predicate_op873_readreq_state23 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_predicate_op617_readreq_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage7_11001)) | ((ap_predicate_op606_readreq_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage7_11001)) | ((ap_predicate_op588_readreq_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage6_11001)) | ((ap_predicate_op579_readreq_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage6_11001)) | ((ap_predicate_op562_readreq_state19 == 1'b1) & (1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op554_readreq_state19 == 1'b1) & (1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op547_readreq_state19 == 1'b1) & (1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op536_readreq_state18 == 1'b1) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op529_readreq_state18 == 1'b1) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op522_readreq_state18 == 1'b1) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op512_readreq_state17 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op506_readreq_state17 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op500_readreq_state17 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op491_readreq_state16 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op486_readreq_state16 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op481_readreq_state16 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op477_readreq_state16 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op670_readreq_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage8_11001)) | ((ap_predicate_op473_readreq_state15 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((ap_predicate_op469_readreq_state15 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((ap_predicate_op465_readreq_state15 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((ap_predicate_op461_readreq_state15 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((ap_predicate_op457_readreq_state15 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        gmem_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55))) begin
        gmem_ARVALID = grp_merlin_memcpy_2_0_fu_2502_m_axi_src_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state99))) begin
        gmem_ARVALID = grp_merlin_memcpy_4_0_fu_2494_m_axi_src_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85))) begin
        gmem_ARVALID = grp_merlin_memcpy_3_0_fu_2486_m_axi_src_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd1)))) begin
        gmem_ARVALID = grp_merlin_memcpy_0_0_fu_2478_m_axi_src_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_ARVALID = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage16) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_reg_7715 == 1'd0) & (1'b0 == ap_block_pp8_stage16_11001))) begin
        gmem_AWADDR = gmem_addr_9_reg_7832;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_AWADDR = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWADDR;
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_AWBURST = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWBURST;
    end else begin
        gmem_AWBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_AWCACHE = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWCACHE;
    end else begin
        gmem_AWCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_AWID = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWID;
    end else begin
        gmem_AWID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage16) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_reg_7715 == 1'd0) & (1'b0 == ap_block_pp8_stage16_11001))) begin
        gmem_AWLEN = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_AWLEN = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWLEN;
    end else begin
        gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_AWLOCK = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWLOCK;
    end else begin
        gmem_AWLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_AWPROT = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWPROT;
    end else begin
        gmem_AWPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_AWQOS = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWQOS;
    end else begin
        gmem_AWQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_AWREGION = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWREGION;
    end else begin
        gmem_AWREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_AWSIZE = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWSIZE;
    end else begin
        gmem_AWSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_AWUSER = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWUSER;
    end else begin
        gmem_AWUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage16) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_reg_7715 == 1'd0) & (1'b0 == ap_block_pp8_stage16_11001))) begin
        gmem_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_AWVALID = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_AWVALID;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1_11001) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (icmp_ln252_reg_7715_pp8_iter1_reg == 1'd0))) begin
        gmem_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_BREADY = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_BREADY;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage9_11001) & (1'b1 == ap_CS_fsm_pp8_stage9) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_reg_7715 == 1'd0)) | ((ap_predicate_op1238_read_state30 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage7_11001)) | ((ap_predicate_op1222_read_state29 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage6_11001)) | ((ap_predicate_op1214_read_state28 == 1'b1) & (1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((ap_predicate_op1184_read_state28 == 1'b1) & (1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((ap_predicate_op1169_read_state27 == 1'b1) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((ap_predicate_op1158_read_state27 == 1'b1) & (1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((ap_predicate_op1142_read_state26 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((ap_predicate_op1130_read_state26 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((ap_predicate_op1122_read_state26 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((ap_predicate_op899_read_state23 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_predicate_op863_read_state23 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_predicate_op806_read_state23 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_predicate_op752_read_state23 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_predicate_op1111_read_state25 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((ap_predicate_op1098_read_state25 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((ap_predicate_op1089_read_state25 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((ap_predicate_op682_read_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage8_11001)) | ((ap_predicate_op671_read_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage8_11001)) | ((ap_predicate_op653_read_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage8_11001)) | ((ap_predicate_op636_read_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage8_11001)) | ((ap_predicate_op619_read_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage8_11001)) | ((ap_predicate_op1077_read_state24 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((ap_predicate_op1063_read_state24 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((ap_predicate_op1053_read_state24 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1097_reg_6387 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        gmem_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55))) begin
        gmem_RREADY = grp_merlin_memcpy_2_0_fu_2502_m_axi_src_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state99))) begin
        gmem_RREADY = grp_merlin_memcpy_4_0_fu_2494_m_axi_src_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85))) begin
        gmem_RREADY = grp_merlin_memcpy_3_0_fu_2486_m_axi_src_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd1)))) begin
        gmem_RREADY = grp_merlin_memcpy_0_0_fu_2478_m_axi_src_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_RREADY = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage17_01001) & (1'b1 == ap_CS_fsm_pp8_stage17) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_reg_7715 == 1'd0))) begin
        gmem_WDATA = tmp_16_fu_6307_p17;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_WDATA = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WDATA;
    end else begin
        gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_WID = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WID;
    end else begin
        gmem_WID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_WLAST = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WLAST;
    end else begin
        gmem_WLAST = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage17_01001) & (1'b1 == ap_CS_fsm_pp8_stage17) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_reg_7715 == 1'd0))) begin
        gmem_WSTRB = 64'd18446744073709551615;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_WSTRB = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WSTRB;
    end else begin
        gmem_WSTRB = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_WUSER = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WUSER;
    end else begin
        gmem_WUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage17_11001) & (1'b1 == ap_CS_fsm_pp8_stage17) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_reg_7715 == 1'd0))) begin
        gmem_WVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52))) begin
        gmem_WVALID = grp_merlin_memcpy_1_0_0_fu_2470_m_axi_dst_WVALID;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp8_stage2) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage2) & (icmp_ln252_reg_7715 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_11_reg_6755) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage7) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_4_reg_6775) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3421_reg_6605 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_3_reg_6771) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_2_reg_6767) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_1_reg_6763) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_reg_6759) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage7) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_9_reg_6747) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_8_reg_6743) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_7_reg_6739) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_6_reg_6735) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_5_reg_6731) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_4_reg_6727) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_11_reg_6707) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_10_reg_6703) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_9_reg_6699) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_8_reg_6695) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'd0 == and_ln3553_11_reg_6659) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage8) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_10_reg_6751) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3346_reg_6506 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3363_reg_6592 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage16) & (1'b1 == ap_CS_fsm_pp8_stage16) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_reg_7715 == 1'd0))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (icmp_ln252_reg_7715_pp8_iter1_reg == 1'd0))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage9) & (1'b1 == ap_CS_fsm_pp8_stage9) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_reg_7715 == 1'd0)) | ((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_4_reg_6775_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3421_reg_6605_pp1_iter1_reg == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_3_reg_6771_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_reg_6759) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_2_reg_6767_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage7) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_11_reg_6755_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_10_reg_6751_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_9_reg_6747_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_8_reg_6743_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_7_reg_6739_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_4_reg_6727) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_6_reg_6735_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_11_reg_6707_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_8_reg_6695) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_10_reg_6703_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == and_ln3553_11_reg_6659) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage8) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage8) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage8) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage8) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0)) | ((1'b0 == ap_block_pp1_stage8) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3363_reg_6592 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (1'd0 == and_ln3421_1_reg_6763_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (1'd0 == and_ln3469_5_reg_6731_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (1'd0 == and_ln3517_9_reg_6699_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1097_reg_6387 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage17) & (1'b1 == ap_CS_fsm_pp8_stage17) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_reg_7715 == 1'd0))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b0 == ap_block_pp5_stage8_11001) & (1'b1 == ap_CS_fsm_pp5_stage8)) | ((1'b0 == ap_block_pp5_stage7_11001) & (1'b1 == ap_CS_fsm_pp5_stage7)) | ((1'b0 == ap_block_pp5_stage6_11001) & (1'b1 == ap_CS_fsm_pp5_stage6)) | ((1'b0 == ap_block_pp5_stage5_11001) & (1'b1 == ap_CS_fsm_pp5_stage5)) | ((1'b0 == ap_block_pp5_stage4_11001) & (1'b1 == ap_CS_fsm_pp5_stage4)) | ((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp5_stage3_11001) & (1'b1 == ap_CS_fsm_pp5_stage3)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage6_11001) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp5_stage9) & (1'b0 == ap_block_pp5_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5_11001)))) begin
        grp_fu_2510_ce = 1'b1;
    end else begin
        grp_fu_2510_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage10) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage10))) begin
        grp_fu_2510_p0 = bitcast_ln163_fu_6194_p1;
    end else if (((1'b0 == ap_block_pp5_stage3) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        grp_fu_2510_p0 = reg_2831;
    end else if (((1'b0 == ap_block_pp2_stage6) & (1'b1 == ap_CS_fsm_pp2_stage6) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        grp_fu_2510_p0 = reg_2812;
    end else begin
        grp_fu_2510_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage10) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage10))) begin
        grp_fu_2510_p1 = reg_2812;
    end else if (((1'b0 == ap_block_pp5_stage3) & (1'b1 == ap_CS_fsm_pp5_stage3) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        grp_fu_2510_p1 = reg_2825;
    end else if (((1'b0 == ap_block_pp2_stage6) & (1'b1 == ap_CS_fsm_pp2_stage6) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        grp_fu_2510_p1 = mul_0_reg_2353;
    end else begin
        grp_fu_2510_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)))) begin
        grp_fu_2515_ce = 1'b1;
    end else begin
        grp_fu_2515_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)))) begin
        grp_fu_2519_ce = 1'b1;
    end else begin
        grp_fu_2519_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)))) begin
        grp_fu_2523_ce = 1'b1;
    end else begin
        grp_fu_2523_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)))) begin
        grp_fu_2527_ce = 1'b1;
    end else begin
        grp_fu_2527_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)))) begin
        grp_fu_2531_ce = 1'b1;
    end else begin
        grp_fu_2531_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)))) begin
        grp_fu_2535_ce = 1'b1;
    end else begin
        grp_fu_2535_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)))) begin
        grp_fu_2539_ce = 1'b1;
    end else begin
        grp_fu_2539_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)))) begin
        grp_fu_2543_ce = 1'b1;
    end else begin
        grp_fu_2543_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)))) begin
        grp_fu_2547_ce = 1'b1;
    end else begin
        grp_fu_2547_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)))) begin
        grp_fu_2551_ce = 1'b1;
    end else begin
        grp_fu_2551_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)))) begin
        grp_fu_2555_ce = 1'b1;
    end else begin
        grp_fu_2555_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)))) begin
        grp_fu_2559_ce = 1'b1;
    end else begin
        grp_fu_2559_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)))) begin
        grp_fu_2563_ce = 1'b1;
    end else begin
        grp_fu_2563_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)))) begin
        grp_fu_2567_ce = 1'b1;
    end else begin
        grp_fu_2567_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage15_11001) & (1'b1 == ap_CS_fsm_pp8_stage15)) | ((1'b0 == ap_block_pp8_stage14_11001) & (1'b1 == ap_CS_fsm_pp8_stage14)) | ((1'b0 == ap_block_pp8_stage13_11001) & (1'b1 == ap_CS_fsm_pp8_stage13)) | ((1'b0 == ap_block_pp8_stage12_11001) & (1'b1 == ap_CS_fsm_pp8_stage12)) | ((1'b0 == ap_block_pp8_stage11_11001) & (1'b1 == ap_CS_fsm_pp8_stage11)) | ((1'b1 == ap_CS_fsm_pp8_stage16) & (1'b0 == ap_block_pp8_stage16_11001)) | ((1'b0 == ap_block_pp8_stage10_11001) & (1'b1 == ap_CS_fsm_pp8_stage10)))) begin
        grp_fu_2571_ce = 1'b1;
    end else begin
        grp_fu_2571_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp8_stage9_11001) & (1'b1 == ap_CS_fsm_pp8_stage9)) | ((1'b0 == ap_block_pp8_stage5_11001) & (1'b1 == ap_CS_fsm_pp8_stage5)) | ((1'b0 == ap_block_pp8_stage4_11001) & (1'b1 == ap_CS_fsm_pp8_stage4)) | ((1'b0 == ap_block_pp8_stage3_11001) & (1'b1 == ap_CS_fsm_pp8_stage3)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp8_stage8_11001) & (1'b1 == ap_CS_fsm_pp8_stage8)) | ((1'b0 == ap_block_pp8_stage7_11001) & (1'b1 == ap_CS_fsm_pp8_stage7)) | ((1'b1 == ap_CS_fsm_pp8_stage6) & (1'b0 == ap_block_pp8_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage5) & (1'b0 == ap_block_pp2_stage5_11001)))) begin
        grp_fu_2575_ce = 1'b1;
    end else begin
        grp_fu_2575_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage5) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage5)) | ((1'b0 == ap_block_pp8_stage4) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage4)) | ((1'b0 == ap_block_pp8_stage3) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage3)) | ((1'b0 == ap_block_pp8_stage6) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage6)))) begin
        grp_fu_2575_p0 = norm_load_reg_7739;
    end else if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter3 == 1'b1))) begin
        grp_fu_2575_p0 = reg_2825;
    end else if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        grp_fu_2575_p0 = ap_phi_reg_pp2_iter0_phi_ln187_reg_2381;
    end else begin
        grp_fu_2575_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage6) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage6))) begin
        grp_fu_2575_p1 = x_mul_12_load_reg_7899;
    end else if (((1'b0 == ap_block_pp8_stage5) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage5))) begin
        grp_fu_2575_p1 = x_mul_8_load_reg_7879;
    end else if (((1'b0 == ap_block_pp8_stage4) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage4))) begin
        grp_fu_2575_p1 = x_mul_4_load_reg_7859;
    end else if (((1'b0 == ap_block_pp8_stage3) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage3))) begin
        grp_fu_2575_p1 = x_mul_0_load_reg_7839;
    end else if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter3 == 1'b1))) begin
        grp_fu_2575_p1 = deg_inv_sqrt_load_1_reg_7695;
    end else if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        grp_fu_2575_p1 = tmp_12_reg_7593;
    end else begin
        grp_fu_2575_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage9_11001) & (1'b1 == ap_CS_fsm_pp8_stage9)) | ((1'b0 == ap_block_pp8_stage5_11001) & (1'b1 == ap_CS_fsm_pp8_stage5)) | ((1'b0 == ap_block_pp8_stage4_11001) & (1'b1 == ap_CS_fsm_pp8_stage4)) | ((1'b0 == ap_block_pp8_stage3_11001) & (1'b1 == ap_CS_fsm_pp8_stage3)) | ((1'b0 == ap_block_pp8_stage8_11001) & (1'b1 == ap_CS_fsm_pp8_stage8)) | ((1'b0 == ap_block_pp8_stage7_11001) & (1'b1 == ap_CS_fsm_pp8_stage7)) | ((1'b1 == ap_CS_fsm_pp8_stage6) & (1'b0 == ap_block_pp8_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001)))) begin
        grp_fu_2580_ce = 1'b1;
    end else begin
        grp_fu_2580_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage5) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage5)) | ((1'b0 == ap_block_pp8_stage4) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage4)) | ((1'b0 == ap_block_pp8_stage3) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage3)) | ((1'b0 == ap_block_pp8_stage6) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage6)))) begin
        grp_fu_2580_p0 = norm_load_reg_7739;
    end else if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter7 == 1'b1))) begin
        grp_fu_2580_p0 = reg_2812;
    end else begin
        grp_fu_2580_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage6) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage6))) begin
        grp_fu_2580_p1 = x_mul_13_load_reg_7904;
    end else if (((1'b0 == ap_block_pp8_stage5) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage5))) begin
        grp_fu_2580_p1 = x_mul_9_load_reg_7884;
    end else if (((1'b0 == ap_block_pp8_stage4) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage4))) begin
        grp_fu_2580_p1 = x_mul_5_load_reg_7864;
    end else if (((1'b0 == ap_block_pp8_stage3) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage3))) begin
        grp_fu_2580_p1 = x_mul_1_load_reg_7844;
    end else if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter7 == 1'b1))) begin
        grp_fu_2580_p1 = deg_inv_sqrt_load_reg_7710;
    end else begin
        grp_fu_2580_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage9_11001) & (1'b1 == ap_CS_fsm_pp8_stage9)) | ((1'b0 == ap_block_pp8_stage5_11001) & (1'b1 == ap_CS_fsm_pp8_stage5)) | ((1'b0 == ap_block_pp8_stage4_11001) & (1'b1 == ap_CS_fsm_pp8_stage4)) | ((1'b0 == ap_block_pp8_stage3_11001) & (1'b1 == ap_CS_fsm_pp8_stage3)) | ((1'b0 == ap_block_pp8_stage8_11001) & (1'b1 == ap_CS_fsm_pp8_stage8)) | ((1'b0 == ap_block_pp8_stage7_11001) & (1'b1 == ap_CS_fsm_pp8_stage7)) | ((1'b1 == ap_CS_fsm_pp8_stage6) & (1'b0 == ap_block_pp8_stage6_11001)))) begin
        grp_fu_2584_ce = 1'b1;
    end else begin
        grp_fu_2584_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp8_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp8_stage6) & (1'b1 == ap_CS_fsm_pp8_stage6))) begin
            grp_fu_2584_p1 = x_mul_14_load_reg_7909;
        end else if (((1'b0 == ap_block_pp8_stage5) & (1'b1 == ap_CS_fsm_pp8_stage5))) begin
            grp_fu_2584_p1 = x_mul_10_load_reg_7889;
        end else if (((1'b0 == ap_block_pp8_stage4) & (1'b1 == ap_CS_fsm_pp8_stage4))) begin
            grp_fu_2584_p1 = x_mul_6_load_reg_7869;
        end else if (((1'b0 == ap_block_pp8_stage3) & (1'b1 == ap_CS_fsm_pp8_stage3))) begin
            grp_fu_2584_p1 = x_mul_2_load_reg_7849;
        end else begin
            grp_fu_2584_p1 = 'bx;
        end
    end else begin
        grp_fu_2584_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage9_11001) & (1'b1 == ap_CS_fsm_pp8_stage9)) | ((1'b0 == ap_block_pp8_stage5_11001) & (1'b1 == ap_CS_fsm_pp8_stage5)) | ((1'b0 == ap_block_pp8_stage4_11001) & (1'b1 == ap_CS_fsm_pp8_stage4)) | ((1'b0 == ap_block_pp8_stage3_11001) & (1'b1 == ap_CS_fsm_pp8_stage3)) | ((1'b0 == ap_block_pp8_stage8_11001) & (1'b1 == ap_CS_fsm_pp8_stage8)) | ((1'b0 == ap_block_pp8_stage7_11001) & (1'b1 == ap_CS_fsm_pp8_stage7)) | ((1'b1 == ap_CS_fsm_pp8_stage6) & (1'b0 == ap_block_pp8_stage6_11001)))) begin
        grp_fu_2588_ce = 1'b1;
    end else begin
        grp_fu_2588_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp8_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp8_stage6) & (1'b1 == ap_CS_fsm_pp8_stage6))) begin
            grp_fu_2588_p1 = x_mul_15_load_reg_7914;
        end else if (((1'b0 == ap_block_pp8_stage5) & (1'b1 == ap_CS_fsm_pp8_stage5))) begin
            grp_fu_2588_p1 = x_mul_11_load_reg_7894;
        end else if (((1'b0 == ap_block_pp8_stage4) & (1'b1 == ap_CS_fsm_pp8_stage4))) begin
            grp_fu_2588_p1 = x_mul_7_load_reg_7874;
        end else if (((1'b0 == ap_block_pp8_stage3) & (1'b1 == ap_CS_fsm_pp8_stage3))) begin
            grp_fu_2588_p1 = x_mul_3_load_reg_7854;
        end else begin
            grp_fu_2588_p1 = 'bx;
        end
    end else begin
        grp_fu_2588_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
            grp_fu_2699_p0 = shl_ln2_reg_7214;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            grp_fu_2699_p0 = shl_ln2_fu_4287_p3;
        end else begin
            grp_fu_2699_p0 = 'bx;
        end
    end else begin
        grp_fu_2699_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
            grp_fu_2714_p0 = shl_ln2_reg_7214;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            grp_fu_2714_p0 = shl_ln2_fu_4287_p3;
        end else begin
            grp_fu_2714_p0 = 'bx;
        end
    end else begin
        grp_fu_2714_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
            grp_fu_2729_p0 = shl_ln2_reg_7214;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            grp_fu_2729_p0 = shl_ln2_fu_4287_p3;
        end else begin
            grp_fu_2729_p0 = 'bx;
        end
    end else begin
        grp_fu_2729_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_4_reg_6679_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_7_reg_6643_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)))) begin
        grp_fu_2744_p0 = shl_ln2_reg_7214;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2744_p0 = shl_ln2_fu_4287_p3;
    end else begin
        grp_fu_2744_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_5_reg_6683_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_8_reg_6647_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)))) begin
        grp_fu_2759_p0 = shl_ln2_reg_7214;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2759_p0 = shl_ln2_fu_4287_p3;
    end else begin
        grp_fu_2759_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_6_reg_6687_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_9_reg_6651_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)))) begin
        grp_fu_2774_p0 = shl_ln2_reg_7214;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2774_p0 = shl_ln2_fu_4287_p3;
    end else begin
        grp_fu_2774_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_7_reg_6691_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_10_reg_6655_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)))) begin
        grp_fu_2789_p0 = shl_ln2_reg_7214;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2789_p0 = shl_ln2_fu_4287_p3;
    end else begin
        grp_fu_2789_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        norm_address0 = zext_ln266_fu_5987_p1;
    end else if (((1'b0 == ap_block_pp7_stage0) & (ap_enable_reg_pp7_iter11 == 1'b1))) begin
        norm_address0 = zext_ln247_reg_7679_pp7_iter10_reg;
    end else begin
        norm_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage0_11001) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0)) | ((ap_enable_reg_pp7_iter11 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001)))) begin
        norm_ce0 = 1'b1;
    end else begin
        norm_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter11 == 1'b1) & (icmp_ln242_reg_7665_pp7_iter10_reg == 1'd0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        norm_we0 = 1'b1;
    end else begin
        norm_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ext_blocking_n_reg == 1'b0) & (ap_ext_blocking_n == 1'b1))) begin
        stall_done_ext = 1'b1;
    end else begin
        stall_done_ext = 1'b0;
    end
end

always @ (*) begin
    if (((ap_int_blocking_n_reg == 1'b0) & (ap_int_blocking_n == 1'b1))) begin
        stall_done_int = 1'b1;
    end else begin
        stall_done_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_str_blocking_n_reg == 1'b0) & (ap_str_blocking_n == 1'b1))) begin
        stall_done_str = 1'b1;
    end else begin
        stall_done_str = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ext_blocking_n == 1'b0) & (ap_ext_blocking_n_reg == 1'b1))) begin
        stall_start_ext = 1'b1;
    end else begin
        stall_start_ext = 1'b0;
    end
end

always @ (*) begin
    if (((ap_int_blocking_n == 1'b0) & (ap_int_blocking_n_reg == 1'b1))) begin
        stall_start_int = 1'b1;
    end else begin
        stall_start_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_str_blocking_n == 1'b0) & (ap_str_blocking_n_reg == 1'b1))) begin
        stall_start_str = 1'b1;
    end else begin
        stall_start_str = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        weight_buf_0_0_address0 = zext_ln187_3_fu_5756_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        weight_buf_0_0_address0 = zext_ln1111_1_fu_3099_p1;
    end else begin
        weight_buf_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        weight_buf_0_0_ce0 = 1'b1;
    end else begin
        weight_buf_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_0_ce1 = 1'b1;
    end else begin
        weight_buf_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_0_we0 = 1'b1;
    end else begin
        weight_buf_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_0_we1 = 1'b1;
    end else begin
        weight_buf_0_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        weight_buf_0_1_address0 = zext_ln187_3_fu_5756_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        weight_buf_0_1_address0 = zext_ln1111_1_fu_3099_p1;
    end else begin
        weight_buf_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        weight_buf_0_1_ce0 = 1'b1;
    end else begin
        weight_buf_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_1_ce1 = 1'b1;
    end else begin
        weight_buf_0_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_1_we0 = 1'b1;
    end else begin
        weight_buf_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_1_we1 = 1'b1;
    end else begin
        weight_buf_0_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        weight_buf_0_2_address0 = zext_ln187_3_fu_5756_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        weight_buf_0_2_address0 = zext_ln1111_1_fu_3099_p1;
    end else begin
        weight_buf_0_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        weight_buf_0_2_ce0 = 1'b1;
    end else begin
        weight_buf_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_2_ce1 = 1'b1;
    end else begin
        weight_buf_0_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_2_we0 = 1'b1;
    end else begin
        weight_buf_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_2_we1 = 1'b1;
    end else begin
        weight_buf_0_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        weight_buf_0_3_address0 = zext_ln187_3_fu_5756_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        weight_buf_0_3_address0 = zext_ln1111_1_fu_3099_p1;
    end else begin
        weight_buf_0_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        weight_buf_0_3_ce0 = 1'b1;
    end else begin
        weight_buf_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_3_ce1 = 1'b1;
    end else begin
        weight_buf_0_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_3_we0 = 1'b1;
    end else begin
        weight_buf_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_3_we1 = 1'b1;
    end else begin
        weight_buf_0_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        weight_buf_0_4_address0 = zext_ln187_3_fu_5756_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        weight_buf_0_4_address0 = zext_ln1111_1_fu_3099_p1;
    end else begin
        weight_buf_0_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        weight_buf_0_4_ce0 = 1'b1;
    end else begin
        weight_buf_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_4_ce1 = 1'b1;
    end else begin
        weight_buf_0_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_4_we0 = 1'b1;
    end else begin
        weight_buf_0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_4_we1 = 1'b1;
    end else begin
        weight_buf_0_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        weight_buf_0_5_address0 = zext_ln187_3_fu_5756_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        weight_buf_0_5_address0 = zext_ln1111_1_fu_3099_p1;
    end else begin
        weight_buf_0_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        weight_buf_0_5_ce0 = 1'b1;
    end else begin
        weight_buf_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_5_ce1 = 1'b1;
    end else begin
        weight_buf_0_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_5_we0 = 1'b1;
    end else begin
        weight_buf_0_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_5_we1 = 1'b1;
    end else begin
        weight_buf_0_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        weight_buf_0_6_address0 = zext_ln187_3_fu_5756_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        weight_buf_0_6_address0 = zext_ln1111_1_fu_3099_p1;
    end else begin
        weight_buf_0_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        weight_buf_0_6_ce0 = 1'b1;
    end else begin
        weight_buf_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_6_ce1 = 1'b1;
    end else begin
        weight_buf_0_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_6_we0 = 1'b1;
    end else begin
        weight_buf_0_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_6_we1 = 1'b1;
    end else begin
        weight_buf_0_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        weight_buf_0_7_address0 = zext_ln187_3_fu_5756_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        weight_buf_0_7_address0 = zext_ln1111_1_fu_3099_p1;
    end else begin
        weight_buf_0_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        weight_buf_0_7_ce0 = 1'b1;
    end else begin
        weight_buf_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_7_ce1 = 1'b1;
    end else begin
        weight_buf_0_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_7_we0 = 1'b1;
    end else begin
        weight_buf_0_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1097_reg_6387_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_buf_0_7_we1 = 1'b1;
    end else begin
        weight_buf_0_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        x_buf_0_0_address0 = zext_ln187_2_fu_5782_p1;
    end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        x_buf_0_0_address0 = zext_ln3424_9_fu_5555_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1))) begin
        x_buf_0_0_address0 = zext_ln3376_fu_4896_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_0_address0 = zext_ln3472_fu_4632_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_reg_6663))) begin
        x_buf_0_0_address0 = zext_ln3520_4_fu_4570_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_3_reg_6627))) begin
        x_buf_0_0_address0 = zext_ln3556_7_fu_4467_p1;
    end else begin
        x_buf_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_7174)) begin
            x_buf_0_0_address1 = zext_ln3424_4_fu_5178_p1;
        end else if ((1'b1 == ap_condition_7170)) begin
            x_buf_0_0_address1 = zext_ln3472_8_fu_5151_p1;
        end else if ((1'b1 == ap_condition_7166)) begin
            x_buf_0_0_address1 = zext_ln3520_12_fu_5124_p1;
        end else if ((1'b1 == ap_condition_7162)) begin
            x_buf_0_0_address1 = zext_ln3556_15_fu_5071_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_0_address1 = zext_ln3376_1_fu_4946_p1;
        end else begin
            x_buf_0_0_address1 = 'bx;
        end
    end else begin
        x_buf_0_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_reg_6663)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_3_reg_6627)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        x_buf_0_0_ce0 = 1'b1;
    end else begin
        x_buf_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3421_reg_6759_pp1_iter1_reg)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_4_reg_6727_pp1_iter1_reg)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_8_reg_6695_pp1_iter1_reg)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_11_reg_6659_pp1_iter1_reg)))) begin
        x_buf_0_0_ce1 = 1'b1;
    end else begin
        x_buf_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5))) begin
            x_buf_0_0_d0 = bitcast_ln3424_12_fu_5545_p1;
        end else if ((1'b1 == ap_condition_7196)) begin
            x_buf_0_0_d0 = bitcast_ln3376_fu_4878_p1;
        end else if ((1'b1 == ap_condition_7192)) begin
            x_buf_0_0_d0 = bitcast_ln3472_fu_4612_p1;
        end else if ((1'b1 == ap_condition_7186)) begin
            x_buf_0_0_d0 = bitcast_ln3520_4_fu_4566_p1;
        end else if ((1'b1 == ap_condition_7179)) begin
            x_buf_0_0_d0 = bitcast_ln3556_7_fu_4463_p1;
        end else begin
            x_buf_0_0_d0 = 'bx;
        end
    end else begin
        x_buf_0_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_7174)) begin
            x_buf_0_0_d1 = bitcast_ln3424_4_fu_5166_p1;
        end else if ((1'b1 == ap_condition_7170)) begin
            x_buf_0_0_d1 = bitcast_ln3472_8_fu_5139_p1;
        end else if ((1'b1 == ap_condition_7166)) begin
            x_buf_0_0_d1 = bitcast_ln3520_12_fu_5112_p1;
        end else if ((1'b1 == ap_condition_7162)) begin
            x_buf_0_0_d1 = bitcast_ln3556_15_fu_5059_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_0_d1 = bitcast_ln3376_8_fu_4936_p1;
        end else begin
            x_buf_0_0_d1 = 'bx;
        end
    end else begin
        x_buf_0_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3421_reg_6605_pp1_iter1_reg == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_reg_6663)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_3_reg_6627)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1)))) begin
        x_buf_0_0_we0 = 1'b1;
    end else begin
        x_buf_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3421_reg_6759_pp1_iter1_reg)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_4_reg_6727_pp1_iter1_reg)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_8_reg_6695_pp1_iter1_reg)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_11_reg_6659_pp1_iter1_reg)))) begin
        x_buf_0_0_we1 = 1'b1;
    end else begin
        x_buf_0_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        x_buf_0_1_address0 = zext_ln187_2_fu_5782_p1;
    end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        x_buf_0_1_address0 = zext_ln3424_9_fu_5555_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1))) begin
        x_buf_0_1_address0 = zext_ln3376_fu_4896_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_1_address0 = zext_ln3472_1_fu_4657_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_1_reg_6667))) begin
        x_buf_0_1_address0 = zext_ln3520_5_fu_4579_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_1_address0 = zext_ln3556_fu_4324_p1;
    end else begin
        x_buf_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_7215)) begin
            x_buf_0_1_address1 = zext_ln3424_5_fu_5259_p1;
        end else if ((1'b1 == ap_condition_7209)) begin
            x_buf_0_1_address1 = zext_ln3472_9_fu_5232_p1;
        end else if ((1'b1 == ap_condition_7203)) begin
            x_buf_0_1_address1 = zext_ln3520_13_fu_5205_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
            x_buf_0_1_address1 = zext_ln3556_8_fu_5000_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_1_address1 = zext_ln3376_1_fu_4946_p1;
        end else begin
            x_buf_0_1_address1 = 'bx;
        end
    end else begin
        x_buf_0_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_1_reg_6667)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        x_buf_0_1_ce0 = 1'b1;
    end else begin
        x_buf_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_1_reg_6763_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_5_reg_6731_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_9_reg_6699_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        x_buf_0_1_ce1 = 1'b1;
    end else begin
        x_buf_0_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5))) begin
            x_buf_0_1_d0 = bitcast_ln3424_13_fu_5562_p1;
        end else if ((1'b1 == ap_condition_7196)) begin
            x_buf_0_1_d0 = bitcast_ln3376_1_fu_4908_p1;
        end else if ((1'b1 == ap_condition_7192)) begin
            x_buf_0_1_d0 = bitcast_ln3472_1_fu_4637_p1;
        end else if ((1'b1 == ap_condition_7220)) begin
            x_buf_0_1_d0 = bitcast_ln3520_5_fu_4575_p1;
        end else if ((1'b1 == ap_condition_7178)) begin
            x_buf_0_1_d0 = bitcast_ln3556_fu_4304_p1;
        end else begin
            x_buf_0_1_d0 = 'bx;
        end
    end else begin
        x_buf_0_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_7215)) begin
            x_buf_0_1_d1 = bitcast_ln3424_5_fu_5247_p1;
        end else if ((1'b1 == ap_condition_7209)) begin
            x_buf_0_1_d1 = bitcast_ln3472_9_fu_5220_p1;
        end else if ((1'b1 == ap_condition_7203)) begin
            x_buf_0_1_d1 = bitcast_ln3520_13_fu_5193_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
            x_buf_0_1_d1 = bitcast_ln3556_8_fu_4996_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_1_d1 = bitcast_ln3376_9_fu_4957_p1;
        end else begin
            x_buf_0_1_d1 = 'bx;
        end
    end else begin
        x_buf_0_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3421_reg_6605_pp1_iter1_reg == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_1_reg_6667)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1)))) begin
        x_buf_0_1_we0 = 1'b1;
    end else begin
        x_buf_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_1_reg_6763_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_5_reg_6731_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_9_reg_6699_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_4_reg_6631_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)))) begin
        x_buf_0_1_we1 = 1'b1;
    end else begin
        x_buf_0_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        x_buf_0_2_address0 = zext_ln187_2_fu_5782_p1;
    end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        x_buf_0_2_address0 = zext_ln3424_9_fu_5555_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1))) begin
        x_buf_0_2_address0 = zext_ln3376_fu_4896_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_2_address0 = zext_ln3472_2_fu_4682_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_2_reg_6671))) begin
        x_buf_0_2_address0 = zext_ln3520_6_fu_4588_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_2_address0 = zext_ln3556_1_fu_4349_p1;
    end else begin
        x_buf_0_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_7237)) begin
            x_buf_0_2_address1 = zext_ln3424_6_fu_5340_p1;
        end else if ((1'b1 == ap_condition_7231)) begin
            x_buf_0_2_address1 = zext_ln3472_10_fu_5313_p1;
        end else if ((1'b1 == ap_condition_7225)) begin
            x_buf_0_2_address1 = zext_ln3520_14_fu_5286_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
            x_buf_0_2_address1 = zext_ln3556_9_fu_5009_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_2_address1 = zext_ln3376_1_fu_4946_p1;
        end else begin
            x_buf_0_2_address1 = 'bx;
        end
    end else begin
        x_buf_0_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_2_reg_6671)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        x_buf_0_2_ce0 = 1'b1;
    end else begin
        x_buf_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_2_reg_6767_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_6_reg_6735_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_10_reg_6703_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        x_buf_0_2_ce1 = 1'b1;
    end else begin
        x_buf_0_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5))) begin
            x_buf_0_2_d0 = bitcast_ln3424_14_fu_5566_p1;
        end else if ((1'b1 == ap_condition_7196)) begin
            x_buf_0_2_d0 = bitcast_ln3376_2_fu_4912_p1;
        end else if ((1'b1 == ap_condition_7192)) begin
            x_buf_0_2_d0 = bitcast_ln3472_2_fu_4662_p1;
        end else if ((1'b1 == ap_condition_7240)) begin
            x_buf_0_2_d0 = bitcast_ln3520_6_fu_4584_p1;
        end else if ((1'b1 == ap_condition_7178)) begin
            x_buf_0_2_d0 = bitcast_ln3556_1_fu_4329_p1;
        end else begin
            x_buf_0_2_d0 = 'bx;
        end
    end else begin
        x_buf_0_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_7237)) begin
            x_buf_0_2_d1 = bitcast_ln3424_6_fu_5328_p1;
        end else if ((1'b1 == ap_condition_7231)) begin
            x_buf_0_2_d1 = bitcast_ln3472_10_fu_5301_p1;
        end else if ((1'b1 == ap_condition_7225)) begin
            x_buf_0_2_d1 = bitcast_ln3520_14_fu_5274_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
            x_buf_0_2_d1 = bitcast_ln3556_9_fu_5005_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_2_d1 = bitcast_ln3376_10_fu_4961_p1;
        end else begin
            x_buf_0_2_d1 = 'bx;
        end
    end else begin
        x_buf_0_2_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3421_reg_6605_pp1_iter1_reg == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_2_reg_6671)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1)))) begin
        x_buf_0_2_we0 = 1'b1;
    end else begin
        x_buf_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_2_reg_6767_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_6_reg_6735_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_10_reg_6703_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_5_reg_6635_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)))) begin
        x_buf_0_2_we1 = 1'b1;
    end else begin
        x_buf_0_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        x_buf_0_3_address0 = zext_ln187_2_fu_5782_p1;
    end else if (((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        x_buf_0_3_address0 = zext_ln3424_10_fu_5625_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1))) begin
        x_buf_0_3_address0 = zext_ln3376_fu_4896_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_3_address0 = zext_ln3472_3_fu_4707_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_3_reg_6675))) begin
        x_buf_0_3_address0 = zext_ln3520_7_fu_4597_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_3_address0 = zext_ln3556_2_fu_4374_p1;
    end else begin
        x_buf_0_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_7257)) begin
            x_buf_0_3_address1 = zext_ln3424_7_fu_5411_p1;
        end else if ((1'b1 == ap_condition_7251)) begin
            x_buf_0_3_address1 = zext_ln3472_11_fu_5384_p1;
        end else if ((1'b1 == ap_condition_7245)) begin
            x_buf_0_3_address1 = zext_ln3520_15_fu_5367_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
            x_buf_0_3_address1 = zext_ln3556_10_fu_5018_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_3_address1 = zext_ln3376_1_fu_4946_p1;
        end else begin
            x_buf_0_3_address1 = 'bx;
        end
    end else begin
        x_buf_0_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage6_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_3_reg_6675)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        x_buf_0_3_ce0 = 1'b1;
    end else begin
        x_buf_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_3_reg_6771_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_7_reg_6739_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_11_reg_6707_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        x_buf_0_3_ce1 = 1'b1;
    end else begin
        x_buf_0_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6))) begin
            x_buf_0_3_d0 = bitcast_ln3424_15_fu_5607_p1;
        end else if ((1'b1 == ap_condition_7196)) begin
            x_buf_0_3_d0 = bitcast_ln3376_3_fu_4916_p1;
        end else if ((1'b1 == ap_condition_7192)) begin
            x_buf_0_3_d0 = bitcast_ln3472_3_fu_4687_p1;
        end else if ((1'b1 == ap_condition_7260)) begin
            x_buf_0_3_d0 = bitcast_ln3520_7_fu_4593_p1;
        end else if ((1'b1 == ap_condition_7178)) begin
            x_buf_0_3_d0 = bitcast_ln3556_2_fu_4354_p1;
        end else begin
            x_buf_0_3_d0 = 'bx;
        end
    end else begin
        x_buf_0_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_7257)) begin
            x_buf_0_3_d1 = bitcast_ln3424_7_fu_5399_p1;
        end else if ((1'b1 == ap_condition_7251)) begin
            x_buf_0_3_d1 = bitcast_ln3472_11_fu_5372_p1;
        end else if ((1'b1 == ap_condition_7245)) begin
            x_buf_0_3_d1 = bitcast_ln3520_15_fu_5355_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
            x_buf_0_3_d1 = bitcast_ln3556_10_fu_5014_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_3_d1 = bitcast_ln3376_11_fu_4965_p1;
        end else begin
            x_buf_0_3_d1 = 'bx;
        end
    end else begin
        x_buf_0_3_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_4_reg_6775_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0) & (1'b0 == ap_block_pp1_stage6_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_3_reg_6675)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1)))) begin
        x_buf_0_3_we0 = 1'b1;
    end else begin
        x_buf_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_3_reg_6771_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_7_reg_6739_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_11_reg_6707_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_6_reg_6639_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)))) begin
        x_buf_0_3_we1 = 1'b1;
    end else begin
        x_buf_0_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        x_buf_0_4_address0 = zext_ln187_2_fu_5782_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (1'd0 == and_ln3373_reg_6788))) begin
        x_buf_0_4_address0 = zext_ln3376_fu_4896_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_4_address0 = zext_ln3424_fu_4788_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_reg_6711))) begin
        x_buf_0_4_address0 = zext_ln3472_4_fu_4716_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_4_address0 = zext_ln3520_fu_4486_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_4_address0 = zext_ln3556_3_fu_4383_p1;
    end else begin
        x_buf_0_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_7281)) begin
            x_buf_0_4_address1 = zext_ln3424_8_fu_5525_p1;
        end else if ((1'b1 == ap_condition_7275)) begin
            x_buf_0_4_address1 = zext_ln3472_12_fu_5498_p1;
        end else if ((1'b1 == ap_condition_7269)) begin
            x_buf_0_4_address1 = zext_ln3520_8_fu_5080_p1;
        end else if ((1'b1 == ap_condition_7265)) begin
            x_buf_0_4_address1 = zext_ln3556_11_fu_5027_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_4_address1 = zext_ln3376_1_fu_4946_p1;
        end else begin
            x_buf_0_4_address1 = 'bx;
        end
    end else begin
        x_buf_0_4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_reg_6711)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (1'd0 == and_ln3373_reg_6788)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        x_buf_0_4_ce0 = 1'b1;
    end else begin
        x_buf_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3421_reg_6605_pp1_iter1_reg == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_8_reg_6743_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_4_reg_6679_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_7_reg_6643_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)))) begin
        x_buf_0_4_ce1 = 1'b1;
    end else begin
        x_buf_0_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_257)) begin
        if (((icmp_ln3346_reg_6506 == 1'd1) & (1'd0 == and_ln3373_reg_6788))) begin
            x_buf_0_4_d0 = bitcast_ln3376_4_fu_4920_p1;
        end else if ((1'b1 == ap_condition_3559)) begin
            x_buf_0_4_d0 = bitcast_ln3424_fu_4768_p1;
        end else if ((1'b1 == ap_condition_3543)) begin
            x_buf_0_4_d0 = bitcast_ln3472_4_fu_4712_p1;
        end else if ((1'b1 == ap_condition_3507)) begin
            x_buf_0_4_d0 = bitcast_ln3520_fu_4482_p1;
        end else if ((1'b1 == ap_condition_3481)) begin
            x_buf_0_4_d0 = bitcast_ln3556_3_fu_4379_p1;
        end else begin
            x_buf_0_4_d0 = 'bx;
        end
    end else begin
        x_buf_0_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_7281)) begin
            x_buf_0_4_d1 = bitcast_ln3424_8_fu_5513_p1;
        end else if ((1'b1 == ap_condition_7275)) begin
            x_buf_0_4_d1 = bitcast_ln3472_12_fu_5486_p1;
        end else if ((1'b1 == ap_condition_7269)) begin
            x_buf_0_4_d1 = bitcast_ln3520_8_fu_5076_p1;
        end else if ((1'b1 == ap_condition_7265)) begin
            x_buf_0_4_d1 = bitcast_ln3556_11_fu_5023_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_4_d1 = bitcast_ln3376_12_fu_4969_p1;
        end else begin
            x_buf_0_4_d1 = 'bx;
        end
    end else begin
        x_buf_0_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_reg_6711)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (1'd0 == and_ln3373_reg_6788)))) begin
        x_buf_0_4_we0 = 1'b1;
    end else begin
        x_buf_0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3421_reg_6605_pp1_iter1_reg == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_8_reg_6743_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_4_reg_6679_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_7_reg_6643_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)))) begin
        x_buf_0_4_we1 = 1'b1;
    end else begin
        x_buf_0_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        x_buf_0_5_address0 = zext_ln187_2_fu_5782_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0))) begin
        x_buf_0_5_address0 = zext_ln3376_fu_4896_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_5_address0 = zext_ln3424_1_fu_4813_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_1_reg_6715))) begin
        x_buf_0_5_address0 = zext_ln3472_5_fu_4725_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_5_address0 = zext_ln3520_1_fu_4511_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_reg_6615))) begin
        x_buf_0_5_address0 = zext_ln3556_4_fu_4408_p1;
    end else begin
        x_buf_0_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6))) begin
            x_buf_0_5_address1 = zext_ln3472_13_fu_5592_p1;
        end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5))) begin
            x_buf_0_5_address1 = zext_ln3424_8_fu_5525_p1;
        end else if ((1'b1 == ap_condition_7298)) begin
            x_buf_0_5_address1 = zext_ln3520_9_fu_5089_p1;
        end else if ((1'b1 == ap_condition_7295)) begin
            x_buf_0_5_address1 = zext_ln3556_12_fu_5036_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_5_address1 = zext_ln3376_1_fu_4946_p1;
        end else begin
            x_buf_0_5_address1 = 'bx;
        end
    end else begin
        x_buf_0_5_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_1_reg_6715)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_reg_6615)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        x_buf_0_5_ce0 = 1'b1;
    end else begin
        x_buf_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage6_11001)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_5_reg_6683_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_8_reg_6647_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)))) begin
        x_buf_0_5_ce1 = 1'b1;
    end else begin
        x_buf_0_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_257)) begin
        if (((icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0))) begin
            x_buf_0_5_d0 = bitcast_ln3376_5_fu_4924_p1;
        end else if ((1'b1 == ap_condition_3559)) begin
            x_buf_0_5_d0 = bitcast_ln3424_1_fu_4793_p1;
        end else if ((1'b1 == ap_condition_3547)) begin
            x_buf_0_5_d0 = bitcast_ln3472_5_fu_4721_p1;
        end else if ((1'b1 == ap_condition_3507)) begin
            x_buf_0_5_d0 = bitcast_ln3520_1_fu_4491_p1;
        end else if ((1'b1 == ap_condition_3491)) begin
            x_buf_0_5_d0 = bitcast_ln3556_4_fu_4388_p1;
        end else begin
            x_buf_0_5_d0 = 'bx;
        end
    end else begin
        x_buf_0_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6))) begin
            x_buf_0_5_d1 = bitcast_ln3472_13_fu_5580_p1;
        end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5))) begin
            x_buf_0_5_d1 = bitcast_ln3424_9_fu_5533_p1;
        end else if ((1'b1 == ap_condition_7298)) begin
            x_buf_0_5_d1 = bitcast_ln3520_9_fu_5085_p1;
        end else if ((1'b1 == ap_condition_7295)) begin
            x_buf_0_5_d1 = bitcast_ln3556_12_fu_5032_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_5_d1 = bitcast_ln3376_13_fu_4973_p1;
        end else begin
            x_buf_0_5_d1 = 'bx;
        end
    end else begin
        x_buf_0_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_1_reg_6715)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_reg_6615)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0)))) begin
        x_buf_0_5_we0 = 1'b1;
    end else begin
        x_buf_0_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3421_reg_6605_pp1_iter1_reg == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_9_reg_6747_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'b0 == ap_block_pp1_stage6_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_5_reg_6683_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_8_reg_6647_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)))) begin
        x_buf_0_5_we1 = 1'b1;
    end else begin
        x_buf_0_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        x_buf_0_6_address0 = zext_ln187_2_fu_5782_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0))) begin
        x_buf_0_6_address0 = zext_ln3376_fu_4896_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_6_address0 = zext_ln3424_2_fu_4838_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_2_reg_6719))) begin
        x_buf_0_6_address0 = zext_ln3472_6_fu_4734_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_6_address0 = zext_ln3520_2_fu_4536_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_1_reg_6619))) begin
        x_buf_0_6_address0 = zext_ln3556_5_fu_4433_p1;
    end else begin
        x_buf_0_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage7) & (1'b1 == ap_CS_fsm_pp1_stage7))) begin
            x_buf_0_6_address1 = zext_ln3472_14_fu_5642_p1;
        end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5))) begin
            x_buf_0_6_address1 = zext_ln3424_8_fu_5525_p1;
        end else if ((1'b1 == ap_condition_7308)) begin
            x_buf_0_6_address1 = zext_ln3520_10_fu_5098_p1;
        end else if ((1'b1 == ap_condition_7305)) begin
            x_buf_0_6_address1 = zext_ln3556_13_fu_5045_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_6_address1 = zext_ln3376_1_fu_4946_p1;
        end else begin
            x_buf_0_6_address1 = 'bx;
        end
    end else begin
        x_buf_0_6_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_2_reg_6719)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_1_reg_6619)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        x_buf_0_6_ce0 = 1'b1;
    end else begin
        x_buf_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage7_11001)) | ((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_6_reg_6687_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_9_reg_6651_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)))) begin
        x_buf_0_6_ce1 = 1'b1;
    end else begin
        x_buf_0_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_257)) begin
        if (((icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0))) begin
            x_buf_0_6_d0 = bitcast_ln3376_6_fu_4928_p1;
        end else if ((1'b1 == ap_condition_3559)) begin
            x_buf_0_6_d0 = bitcast_ln3424_2_fu_4818_p1;
        end else if ((1'b1 == ap_condition_3551)) begin
            x_buf_0_6_d0 = bitcast_ln3472_6_fu_4730_p1;
        end else if ((1'b1 == ap_condition_3507)) begin
            x_buf_0_6_d0 = bitcast_ln3520_2_fu_4516_p1;
        end else if ((1'b1 == ap_condition_3495)) begin
            x_buf_0_6_d0 = bitcast_ln3556_5_fu_4413_p1;
        end else begin
            x_buf_0_6_d0 = 'bx;
        end
    end else begin
        x_buf_0_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage7) & (1'b1 == ap_CS_fsm_pp1_stage7))) begin
            x_buf_0_6_d1 = bitcast_ln3472_14_fu_5630_p1;
        end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5))) begin
            x_buf_0_6_d1 = bitcast_ln3424_10_fu_5537_p1;
        end else if ((1'b1 == ap_condition_7308)) begin
            x_buf_0_6_d1 = bitcast_ln3520_10_fu_5094_p1;
        end else if ((1'b1 == ap_condition_7305)) begin
            x_buf_0_6_d1 = bitcast_ln3556_13_fu_5041_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_6_d1 = bitcast_ln3376_14_fu_4977_p1;
        end else begin
            x_buf_0_6_d1 = 'bx;
        end
    end else begin
        x_buf_0_6_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_2_reg_6719)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_1_reg_6619)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0)))) begin
        x_buf_0_6_we0 = 1'b1;
    end else begin
        x_buf_0_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3421_reg_6605_pp1_iter1_reg == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_10_reg_6751_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'b0 == ap_block_pp1_stage7_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_6_reg_6687_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_9_reg_6651_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)))) begin
        x_buf_0_6_we1 = 1'b1;
    end else begin
        x_buf_0_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        x_buf_0_7_address0 = zext_ln187_2_fu_5782_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0))) begin
        x_buf_0_7_address0 = zext_ln3376_fu_4896_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_7_address0 = zext_ln3424_3_fu_4863_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_3_reg_6723))) begin
        x_buf_0_7_address0 = zext_ln3472_7_fu_4743_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0))) begin
        x_buf_0_7_address0 = zext_ln3520_3_fu_4561_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_2_reg_6623))) begin
        x_buf_0_7_address0 = zext_ln3556_6_fu_4458_p1;
    end else begin
        x_buf_0_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage8) & (1'b1 == ap_CS_fsm_pp1_stage8))) begin
            x_buf_0_7_address1 = zext_ln3472_15_fu_5669_p1;
        end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5))) begin
            x_buf_0_7_address1 = zext_ln3424_8_fu_5525_p1;
        end else if ((1'b1 == ap_condition_7319)) begin
            x_buf_0_7_address1 = zext_ln3520_11_fu_5107_p1;
        end else if ((1'b1 == ap_condition_7316)) begin
            x_buf_0_7_address1 = zext_ln3556_14_fu_5054_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_7_address1 = zext_ln3376_2_fu_4991_p1;
        end else begin
            x_buf_0_7_address1 = 'bx;
        end
    end else begin
        x_buf_0_7_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_3_reg_6723)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_2_reg_6623)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        x_buf_0_7_ce0 = 1'b1;
    end else begin
        x_buf_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (1'b0 == ap_block_pp1_stage8_11001)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_7_reg_6691_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_10_reg_6655_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)))) begin
        x_buf_0_7_ce1 = 1'b1;
    end else begin
        x_buf_0_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_257)) begin
        if (((icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0))) begin
            x_buf_0_7_d0 = bitcast_ln3376_7_fu_4932_p1;
        end else if ((1'b1 == ap_condition_3559)) begin
            x_buf_0_7_d0 = bitcast_ln3424_3_fu_4843_p1;
        end else if ((1'b1 == ap_condition_3555)) begin
            x_buf_0_7_d0 = bitcast_ln3472_7_fu_4739_p1;
        end else if ((1'b1 == ap_condition_3507)) begin
            x_buf_0_7_d0 = bitcast_ln3520_3_fu_4541_p1;
        end else if ((1'b1 == ap_condition_3499)) begin
            x_buf_0_7_d0 = bitcast_ln3556_6_fu_4438_p1;
        end else begin
            x_buf_0_7_d0 = 'bx;
        end
    end else begin
        x_buf_0_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage8) & (1'b1 == ap_CS_fsm_pp1_stage8))) begin
            x_buf_0_7_d1 = bitcast_ln3472_15_fu_5665_p1;
        end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5))) begin
            x_buf_0_7_d1 = bitcast_ln3424_11_fu_5541_p1;
        end else if ((1'b1 == ap_condition_7319)) begin
            x_buf_0_7_d1 = bitcast_ln3520_11_fu_5103_p1;
        end else if ((1'b1 == ap_condition_7316)) begin
            x_buf_0_7_d1 = bitcast_ln3556_14_fu_5050_p1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            x_buf_0_7_d1 = bitcast_ln3376_15_fu_4981_p1;
        end else begin
            x_buf_0_7_d1 = 'bx;
        end
    end else begin
        x_buf_0_7_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_3_reg_6723)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_2_reg_6623)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3373_reg_6779 == 1'd0)))) begin
        x_buf_0_7_we0 = 1'b1;
    end else begin
        x_buf_0_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage5_11001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3421_reg_6605_pp1_iter1_reg == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_11_reg_6755_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'b0 == ap_block_pp1_stage8_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1) & (1'd0 == and_ln3373_1_reg_6792)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_7_reg_6691_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_10_reg_6655_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0)))) begin
        x_buf_0_7_we1 = 1'b1;
    end else begin
        x_buf_0_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_0_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_0_address0 = x_mul_0_addr_reg_7361;
    end else begin
        x_mul_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_0_ce0 = 1'b1;
    end else begin
        x_mul_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_0_we0 = 1'b1;
    end else begin
        x_mul_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_10_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_10_address0 = x_mul_10_addr_reg_7411;
    end else begin
        x_mul_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_10_ce0 = 1'b1;
    end else begin
        x_mul_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd10) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_10_we0 = 1'b1;
    end else begin
        x_mul_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_11_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_11_address0 = x_mul_11_addr_reg_7416;
    end else begin
        x_mul_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_11_ce0 = 1'b1;
    end else begin
        x_mul_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd11) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_11_we0 = 1'b1;
    end else begin
        x_mul_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_12_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_12_address0 = x_mul_12_addr_reg_7421;
    end else begin
        x_mul_12_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_12_ce0 = 1'b1;
    end else begin
        x_mul_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd12) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_12_we0 = 1'b1;
    end else begin
        x_mul_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_13_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_13_address0 = x_mul_13_addr_reg_7426;
    end else begin
        x_mul_13_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_13_ce0 = 1'b1;
    end else begin
        x_mul_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd13) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_13_we0 = 1'b1;
    end else begin
        x_mul_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_14_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_14_address0 = x_mul_14_addr_reg_7431;
    end else begin
        x_mul_14_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_14_ce0 = 1'b1;
    end else begin
        x_mul_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd14) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_14_we0 = 1'b1;
    end else begin
        x_mul_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_15_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_15_address0 = x_mul_15_addr_reg_7436;
    end else begin
        x_mul_15_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_15_ce0 = 1'b1;
    end else begin
        x_mul_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd15) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_15_we0 = 1'b1;
    end else begin
        x_mul_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_1_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_1_address0 = x_mul_1_addr_reg_7366;
    end else begin
        x_mul_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_1_ce0 = 1'b1;
    end else begin
        x_mul_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_1_we0 = 1'b1;
    end else begin
        x_mul_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_2_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_2_address0 = x_mul_2_addr_reg_7371;
    end else begin
        x_mul_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_2_ce0 = 1'b1;
    end else begin
        x_mul_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd2) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_2_we0 = 1'b1;
    end else begin
        x_mul_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_3_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_3_address0 = x_mul_3_addr_reg_7376;
    end else begin
        x_mul_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_3_ce0 = 1'b1;
    end else begin
        x_mul_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd3) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_3_we0 = 1'b1;
    end else begin
        x_mul_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_4_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_4_address0 = x_mul_4_addr_reg_7381;
    end else begin
        x_mul_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_4_ce0 = 1'b1;
    end else begin
        x_mul_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd4) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_4_we0 = 1'b1;
    end else begin
        x_mul_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_5_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_5_address0 = x_mul_5_addr_reg_7386;
    end else begin
        x_mul_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_5_ce0 = 1'b1;
    end else begin
        x_mul_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd5) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_5_we0 = 1'b1;
    end else begin
        x_mul_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_6_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_6_address0 = x_mul_6_addr_reg_7391;
    end else begin
        x_mul_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_6_ce0 = 1'b1;
    end else begin
        x_mul_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd6) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_6_we0 = 1'b1;
    end else begin
        x_mul_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_7_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_7_address0 = x_mul_7_addr_reg_7396;
    end else begin
        x_mul_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_7_ce0 = 1'b1;
    end else begin
        x_mul_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd7) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_7_we0 = 1'b1;
    end else begin
        x_mul_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_8_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_8_address0 = x_mul_8_addr_reg_7401;
    end else begin
        x_mul_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_8_ce0 = 1'b1;
    end else begin
        x_mul_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd8) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_8_we0 = 1'b1;
    end else begin
        x_mul_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage1) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1))) begin
        x_mul_9_address0 = sext_ln266_fu_6010_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_mul_9_address0 = x_mul_9_addr_reg_7406;
    end else begin
        x_mul_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((1'b0 == ap_block_pp8_stage1_11001) & (1'b1 == ap_CS_fsm_pp8_stage1) & (ap_enable_reg_pp8_iter0 == 1'b1)))) begin
        x_mul_9_ce0 = 1'b1;
    end else begin
        x_mul_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_fu_5815_p1 == 4'd9) & (1'b1 == ap_CS_fsm_state47))) begin
        x_mul_9_we0 = 1'b1;
    end else begin
        x_mul_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1097_fu_2899_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1097_fu_2899_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln169_fu_3239_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3363_fu_3461_p2 == 1'd1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln3363_fu_3461_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((1'b0 == ap_block_pp1_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_pp1_stage5 : begin
            if ((1'b0 == ap_block_pp1_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end
        end
        ap_ST_fsm_pp1_stage6 : begin
            if ((1'b0 == ap_block_pp1_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end
        end
        ap_ST_fsm_pp1_stage7 : begin
            if ((1'b0 == ap_block_pp1_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end
        end
        ap_ST_fsm_pp1_stage8 : begin
            if ((~((1'b0 == ap_block_pp1_stage8_subdone) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b0)) & (1'b0 == ap_block_pp1_stage8_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage8_subdone) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln178_fu_5693_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln182_fu_5727_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln182_fu_5727_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((1'b0 == ap_block_pp2_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((1'b0 == ap_block_pp2_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_pp2_stage4 : begin
            if ((1'b0 == ap_block_pp2_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end
        end
        ap_ST_fsm_pp2_stage5 : begin
            if ((~((1'b0 == ap_block_pp2_stage5_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (ap_enable_reg_pp2_iter0 == 1'b0)) & (1'b0 == ap_block_pp2_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end else if (((1'b0 == ap_block_pp2_stage5_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage5) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end
        end
        ap_ST_fsm_pp2_stage6 : begin
            if ((1'b0 == ap_block_pp2_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state49 : begin
            if (((grp_merlin_memcpy_0_0_fu_2478_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            if (((1'b1 == ap_CS_fsm_state50) & (icmp_ln195_fu_5819_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            if (((grp_merlin_memcpy_1_0_0_fu_2470_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (icmp_ln213_fu_5861_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            if (((grp_merlin_memcpy_2_0_fu_2502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln223_fu_5878_p2 == 1'd1)) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end else if (((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln223_fu_5878_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp5_stage1 : begin
            if ((1'b0 == ap_block_pp5_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end
        end
        ap_ST_fsm_pp5_stage2 : begin
            if ((1'b0 == ap_block_pp5_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end
        end
        ap_ST_fsm_pp5_stage3 : begin
            if ((1'b0 == ap_block_pp5_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage3;
            end
        end
        ap_ST_fsm_pp5_stage4 : begin
            if ((1'b0 == ap_block_pp5_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage4;
            end
        end
        ap_ST_fsm_pp5_stage5 : begin
            if ((1'b0 == ap_block_pp5_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage5;
            end
        end
        ap_ST_fsm_pp5_stage6 : begin
            if ((1'b0 == ap_block_pp5_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage6;
            end
        end
        ap_ST_fsm_pp5_stage7 : begin
            if ((1'b0 == ap_block_pp5_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage7;
            end
        end
        ap_ST_fsm_pp5_stage8 : begin
            if ((1'b0 == ap_block_pp5_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage8;
            end
        end
        ap_ST_fsm_pp5_stage9 : begin
            if ((1'b0 == ap_block_pp5_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage9;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln232_fu_5901_p2 == 1'd1) & (ap_enable_reg_pp6_iter1 == 1'b0)) & ~((ap_enable_reg_pp6_iter14 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter15 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter14 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter15 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln232_fu_5901_p2 == 1'd1) & (ap_enable_reg_pp6_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            if (((grp_merlin_memcpy_3_0_fu_2486_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state85))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((ap_enable_reg_pp7_iter1 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln242_fu_5918_p2 == 1'd1)) & ~((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter11 == 1'b1) & (ap_enable_reg_pp7_iter10 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter11 == 1'b1) & (ap_enable_reg_pp7_iter10 == 1'b0)) | ((ap_enable_reg_pp7_iter1 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone) & (ap_enable_reg_pp7_iter0 == 1'b1) & (icmp_ln242_fu_5918_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            if (((grp_merlin_memcpy_4_0_fu_2494_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state99))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end
        end
        ap_ST_fsm_pp8_stage0 : begin
            if ((~((ap_enable_reg_pp8_iter1 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_fu_5960_p2 == 1'd1)) & (1'b0 == ap_block_pp8_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage1;
            end else if (((ap_enable_reg_pp8_iter1 == 1'b0) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_fu_5960_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_pp8_stage1 : begin
            if ((~((ap_enable_reg_pp8_iter0 == 1'b0) & (1'b0 == ap_block_pp8_stage1_subdone) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage1)) & (1'b0 == ap_block_pp8_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage2;
            end else if (((ap_enable_reg_pp8_iter0 == 1'b0) & (1'b0 == ap_block_pp8_stage1_subdone) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage1;
            end
        end
        ap_ST_fsm_pp8_stage2 : begin
            if ((1'b0 == ap_block_pp8_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage2;
            end
        end
        ap_ST_fsm_pp8_stage3 : begin
            if ((1'b0 == ap_block_pp8_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage3;
            end
        end
        ap_ST_fsm_pp8_stage4 : begin
            if ((1'b0 == ap_block_pp8_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage4;
            end
        end
        ap_ST_fsm_pp8_stage5 : begin
            if ((1'b0 == ap_block_pp8_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage5;
            end
        end
        ap_ST_fsm_pp8_stage6 : begin
            if ((1'b0 == ap_block_pp8_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage6;
            end
        end
        ap_ST_fsm_pp8_stage7 : begin
            if ((1'b0 == ap_block_pp8_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage7;
            end
        end
        ap_ST_fsm_pp8_stage8 : begin
            if ((1'b0 == ap_block_pp8_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage8;
            end
        end
        ap_ST_fsm_pp8_stage9 : begin
            if ((1'b0 == ap_block_pp8_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage9;
            end
        end
        ap_ST_fsm_pp8_stage10 : begin
            if ((1'b0 == ap_block_pp8_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage10;
            end
        end
        ap_ST_fsm_pp8_stage11 : begin
            if ((1'b0 == ap_block_pp8_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage11;
            end
        end
        ap_ST_fsm_pp8_stage12 : begin
            if ((1'b0 == ap_block_pp8_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage12;
            end
        end
        ap_ST_fsm_pp8_stage13 : begin
            if ((1'b0 == ap_block_pp8_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage13;
            end
        end
        ap_ST_fsm_pp8_stage14 : begin
            if ((1'b0 == ap_block_pp8_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage14;
            end
        end
        ap_ST_fsm_pp8_stage15 : begin
            if ((1'b0 == ap_block_pp8_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage15;
            end
        end
        ap_ST_fsm_pp8_stage16 : begin
            if ((1'b0 == ap_block_pp8_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage16;
            end
        end
        ap_ST_fsm_pp8_stage17 : begin
            if ((1'b0 == ap_block_pp8_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage17;
            end
        end
        ap_ST_fsm_pp8_stage18 : begin
            if ((1'b0 == ap_block_pp8_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage18;
            end
        end
        ap_ST_fsm_pp8_stage19 : begin
            if ((1'b0 == ap_block_pp8_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage19;
            end
        end
        ap_ST_fsm_pp8_stage20 : begin
            if ((1'b0 == ap_block_pp8_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage20;
            end
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1111_1_fu_3153_p2 = (tmp_17_fu_3065_p3 + zext_ln1111_2_fu_3149_p1);

assign add_ln1111_fu_3093_p2 = (tmp_17_fu_3065_p3 + zext_ln1111_fu_3089_p1);

assign add_ln169_fu_3233_p2 = (phi_mul_reg_2307 + 26'd2000);

assign add_ln187_fu_5751_p2 = (zext_ln187_1_fu_5747_p1 + zext_ln182_reg_7455);

assign add_ln207_fu_5846_p2 = ($signed(zext_ln207_1_fu_5842_p1) + $signed(16'd42829));

assign add_ln247_fu_5934_p2 = (zext_ln242_fu_5930_p1 + 18'd108365);

assign add_ln265_fu_5976_p2 = (18'd108365 + zext_ln252_fu_5972_p1);

assign add_ln32_22_fu_3741_p2 = (p_cast_reg_6379 + zext_ln3424_11_reg_6609);

assign add_ln32_8_fu_6005_p2 = (p_cast33_reg_6374 + zext_ln32_9_fu_6001_p1);

assign add_ln32_fu_3506_p2 = (p_cast_reg_6379 + zext_ln32_fu_3502_p1);

assign add_ln3342_fu_3291_p2 = (trunc_ln_fu_3251_p4 + 24'd515);

assign add_ln3375_fu_3497_p2 = (lshr_ln_reg_6500 + zext_ln3363_fu_3472_p1);

assign add_ln3423_fu_3487_p2 = (zext_ln3363_fu_3472_p1 + lshr_ln_reg_6500);

assign add_ln3424_1_fu_4797_p2 = ($signed(10'd1021) + $signed(shl_ln2_fu_4287_p3));

assign add_ln3424_2_fu_4822_p2 = ($signed(10'd1022) + $signed(shl_ln2_fu_4287_p3));

assign add_ln3424_3_fu_4847_p2 = ($signed(10'd1023) + $signed(shl_ln2_fu_4287_p3));

assign add_ln3424_fu_4772_p2 = ($signed(10'd1020) + $signed(shl_ln2_fu_4287_p3));

assign add_ln3472_1_fu_4641_p2 = ($signed(10'd1017) + $signed(shl_ln2_fu_4287_p3));

assign add_ln3472_2_fu_4666_p2 = ($signed(10'd1018) + $signed(shl_ln2_fu_4287_p3));

assign add_ln3472_3_fu_4691_p2 = ($signed(10'd1019) + $signed(shl_ln2_fu_4287_p3));

assign add_ln3472_fu_4616_p2 = ($signed(10'd1016) + $signed(shl_ln2_fu_4287_p3));

assign add_ln3520_1_fu_4495_p2 = ($signed(10'd1013) + $signed(shl_ln2_fu_4287_p3));

assign add_ln3520_2_fu_4520_p2 = ($signed(10'd1014) + $signed(shl_ln2_fu_4287_p3));

assign add_ln3520_3_fu_4545_p2 = ($signed(10'd1015) + $signed(shl_ln2_fu_4287_p3));

assign add_ln3553_fu_3375_p2 = (zext_ln3342_fu_3307_p1 + xor_ln3553_fu_3369_p2);

assign add_ln3556_1_fu_4333_p2 = ($signed(10'd1010) + $signed(shl_ln2_fu_4287_p3));

assign add_ln3556_2_fu_4358_p2 = ($signed(10'd1011) + $signed(shl_ln2_fu_4287_p3));

assign add_ln3556_4_fu_4392_p2 = ($signed(shl_ln2_fu_4287_p3) + $signed(10'd1013));

assign add_ln3556_5_fu_4417_p2 = ($signed(shl_ln2_fu_4287_p3) + $signed(10'd1014));

assign add_ln3556_6_fu_4442_p2 = ($signed(shl_ln2_fu_4287_p3) + $signed(10'd1015));

assign add_ln3556_fu_4308_p2 = ($signed(10'd1009) + $signed(shl_ln2_fu_4287_p3));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp1_stage5 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage6 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp1_stage7 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp1_stage8 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp2_stage4 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp2_stage5 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp2_stage6 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp5_stage2 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp5_stage3 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp5_stage4 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_pp5_stage5 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp5_stage6 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_pp5_stage7 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp5_stage8 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_pp5_stage9 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_pp8_stage1 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_pp8_stage10 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_pp8_stage11 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_pp8_stage12 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_pp8_stage13 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_pp8_stage14 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_pp8_stage15 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_pp8_stage16 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_pp8_stage17 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_pp8_stage18 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_pp8_stage19 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_pp8_stage2 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_pp8_stage20 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_pp8_stage3 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_pp8_stage4 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_pp8_stage5 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_pp8_stage6 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_pp8_stage7 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_pp8_stage8 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_pp8_stage9 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd54];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1097_reg_6387 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1097_reg_6387 == 1'd0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state23_io) | ((ap_predicate_op899_read_state23 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op863_read_state23 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op806_read_state23 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op752_read_state23 == 1'b1) & (gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state23_io) | ((ap_predicate_op899_read_state23 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op863_read_state23 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op806_read_state23 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op752_read_state23 == 1'b1) & (gmem_RVALID == 1'b0))));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_11001 = (((ap_enable_reg_pp1_iter1 == 1'b1) & (((ap_predicate_op1077_read_state24 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1063_read_state24 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1053_read_state24 == 1'b1) & (gmem_RVALID == 1'b0)))) | ((1'b1 == ap_block_state15_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = (((ap_enable_reg_pp1_iter1 == 1'b1) & (((ap_predicate_op1077_read_state24 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1063_read_state24 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1053_read_state24 == 1'b1) & (gmem_RVALID == 1'b0)))) | ((1'b1 == ap_block_state15_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage2_11001 = (((ap_enable_reg_pp1_iter1 == 1'b1) & (((ap_predicate_op1111_read_state25 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1098_read_state25 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1089_read_state25 == 1'b1) & (gmem_RVALID == 1'b0)))) | ((1'b1 == ap_block_state16_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage2_subdone = (((ap_enable_reg_pp1_iter1 == 1'b1) & (((ap_predicate_op1111_read_state25 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1098_read_state25 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1089_read_state25 == 1'b1) & (gmem_RVALID == 1'b0)))) | ((1'b1 == ap_block_state16_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage3_11001 = (((ap_enable_reg_pp1_iter1 == 1'b1) & (((ap_predicate_op1142_read_state26 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1130_read_state26 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1122_read_state26 == 1'b1) & (gmem_RVALID == 1'b0)))) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage3_subdone = (((ap_enable_reg_pp1_iter1 == 1'b1) & (((ap_predicate_op1142_read_state26 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1130_read_state26 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1122_read_state26 == 1'b1) & (gmem_RVALID == 1'b0)))) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage4_11001 = (((ap_enable_reg_pp1_iter1 == 1'b1) & (((ap_predicate_op1169_read_state27 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1158_read_state27 == 1'b1) & (gmem_RVALID == 1'b0)))) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage4_subdone = (((ap_enable_reg_pp1_iter1 == 1'b1) & (((ap_predicate_op1169_read_state27 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1158_read_state27 == 1'b1) & (gmem_RVALID == 1'b0)))) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage5_11001 = (((ap_enable_reg_pp1_iter1 == 1'b1) & (((ap_predicate_op1214_read_state28 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1184_read_state28 == 1'b1) & (gmem_RVALID == 1'b0)))) | ((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage5_subdone = (((ap_enable_reg_pp1_iter1 == 1'b1) & (((ap_predicate_op1214_read_state28 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1184_read_state28 == 1'b1) & (gmem_RVALID == 1'b0)))) | ((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage6_11001 = (((ap_predicate_op1222_read_state29 == 1'b1) & (gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b1 == ap_block_state20_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage6_subdone = (((ap_predicate_op1222_read_state29 == 1'b1) & (gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b1 == ap_block_state20_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage7_11001 = (((ap_predicate_op1238_read_state30 == 1'b1) & (gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b1 == ap_block_state21_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage7_subdone = (((ap_predicate_op1238_read_state30 == 1'b1) & (gmem_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b1 == ap_block_state21_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage8_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state22_io) | ((ap_predicate_op682_read_state22 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op671_read_state22 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op653_read_state22 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op636_read_state22 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op619_read_state22 == 1'b1) & (gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp1_stage8_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state22_io) | ((ap_predicate_op682_read_state22 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op671_read_state22 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op653_read_state22 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op636_read_state22 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op619_read_state22 == 1'b1) & (gmem_RVALID == 1'b0))));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8_stage16_11001 = ((1'b1 == ap_block_state116_io) & (ap_enable_reg_pp8_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp8_stage16_subdone = ((1'b1 == ap_block_state116_io) & (ap_enable_reg_pp8_iter0 == 1'b1));
end

assign ap_block_pp8_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage17_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8_stage17_11001 = ((1'b1 == ap_block_state117_io) & (ap_enable_reg_pp8_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp8_stage17_subdone = ((1'b1 == ap_block_state117_io) & (ap_enable_reg_pp8_iter0 == 1'b1));
end

assign ap_block_pp8_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage19_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8_stage1_11001 = ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (icmp_ln252_reg_7715_pp8_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp8_stage1_subdone = ((gmem_BVALID == 1'b0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (icmp_ln252_reg_7715_pp8_iter1_reg == 1'd0));
end

assign ap_block_pp8_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage20_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8_stage2_11001 = ((1'b1 == ap_block_state102_io) & (ap_enable_reg_pp8_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp8_stage2_subdone = ((1'b1 == ap_block_state102_io) & (ap_enable_reg_pp8_iter0 == 1'b1));
end

assign ap_block_pp8_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8_stage9_11001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_reg_7715 == 1'd0));
end

always @ (*) begin
    ap_block_pp8_stage9_subdone = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b1) & (icmp_ln252_reg_7715 == 1'd0));
end

assign ap_block_state100_pp8_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp8_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state102_io = ((gmem_ARREADY == 1'b0) & (icmp_ln252_reg_7715 == 1'd0));
end

assign ap_block_state102_pp8_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp8_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp8_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp8_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp8_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp8_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp8_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state109_pp8_stage9_iter0 = ((gmem_RVALID == 1'b0) & (icmp_ln252_reg_7715 == 1'd0));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((gmem_RVALID == 1'b0) & (icmp_ln1097_reg_6387 == 1'd0));
end

assign ap_block_state110_pp8_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp8_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp8_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp8_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp8_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp8_stage15_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state116_io = ((gmem_AWREADY == 1'b0) & (icmp_ln252_reg_7715 == 1'd0));
end

assign ap_block_state116_pp8_stage16_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state117_io = ((gmem_WREADY == 1'b0) & (icmp_ln252_reg_7715 == 1'd0));
end

assign ap_block_state117_pp8_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp8_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp8_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp8_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state122_pp8_stage1_iter1 = ((gmem_BVALID == 1'b0) & (icmp_ln252_reg_7715_pp8_iter1_reg == 1'd0));
end

assign ap_block_state14_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_io = (((ap_predicate_op473_readreq_state15 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_predicate_op469_readreq_state15 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_predicate_op465_readreq_state15 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_predicate_op461_readreq_state15 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_predicate_op457_readreq_state15 == 1'b1) & (gmem_ARREADY == 1'b0)));
end

assign ap_block_state15_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_io = (((ap_predicate_op491_readreq_state16 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_predicate_op486_readreq_state16 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_predicate_op481_readreq_state16 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_predicate_op477_readreq_state16 == 1'b1) & (gmem_ARREADY == 1'b0)));
end

assign ap_block_state16_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_io = (((ap_predicate_op512_readreq_state17 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_predicate_op506_readreq_state17 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_predicate_op500_readreq_state17 == 1'b1) & (gmem_ARREADY == 1'b0)));
end

assign ap_block_state17_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_io = (((ap_predicate_op536_readreq_state18 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_predicate_op529_readreq_state18 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_predicate_op522_readreq_state18 == 1'b1) & (gmem_ARREADY == 1'b0)));
end

assign ap_block_state18_pp1_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_io = (((ap_predicate_op562_readreq_state19 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_predicate_op554_readreq_state19 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_predicate_op547_readreq_state19 == 1'b1) & (gmem_ARREADY == 1'b0)));
end

assign ap_block_state19_pp1_stage5_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_io = (((ap_predicate_op588_readreq_state20 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_predicate_op579_readreq_state20 == 1'b1) & (gmem_ARREADY == 1'b0)));
end

assign ap_block_state20_pp1_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_io = (((ap_predicate_op617_readreq_state21 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_predicate_op606_readreq_state21 == 1'b1) & (gmem_ARREADY == 1'b0)));
end

assign ap_block_state21_pp1_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_io = ((ap_predicate_op670_readreq_state22 == 1'b1) & (gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp1_stage8_iter0 = (((ap_predicate_op682_read_state22 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op671_read_state22 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op653_read_state22 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op636_read_state22 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op619_read_state22 == 1'b1) & (gmem_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state23_io = ((ap_predicate_op873_readreq_state23 == 1'b1) & (gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1 = (((ap_predicate_op899_read_state23 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op863_read_state23 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op806_read_state23 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op752_read_state23 == 1'b1) & (gmem_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state24_pp1_stage1_iter1 = (((ap_predicate_op1077_read_state24 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1063_read_state24 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1053_read_state24 == 1'b1) & (gmem_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state25_pp1_stage2_iter1 = (((ap_predicate_op1111_read_state25 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1098_read_state25 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1089_read_state25 == 1'b1) & (gmem_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state26_pp1_stage3_iter1 = (((ap_predicate_op1142_read_state26 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1130_read_state26 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1122_read_state26 == 1'b1) & (gmem_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state27_pp1_stage4_iter1 = (((ap_predicate_op1169_read_state27 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1158_read_state27 == 1'b1) & (gmem_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state28_pp1_stage5_iter1 = (((ap_predicate_op1214_read_state28 == 1'b1) & (gmem_RVALID == 1'b0)) | ((ap_predicate_op1184_read_state28 == 1'b1) & (gmem_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state29_pp1_stage6_iter1 = ((ap_predicate_op1222_read_state29 == 1'b1) & (gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state30_pp1_stage7_iter1 = ((ap_predicate_op1238_read_state30 == 1'b1) & (gmem_RVALID == 1'b0));
end

assign ap_block_state31_pp1_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp2_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp2_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp2_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp5_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp5_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp5_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp5_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp5_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp5_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp5_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp5_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp5_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp6_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp6_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp6_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp6_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp6_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp6_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp6_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp6_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp6_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp6_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp6_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp6_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp7_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp7_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp7_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp7_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp7_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp7_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp7_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp7_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp7_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_257 = ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_3481 = ((icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_3491 = ((icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_reg_6615));
end

always @ (*) begin
    ap_condition_3495 = ((icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_1_reg_6619));
end

always @ (*) begin
    ap_condition_3499 = ((icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_2_reg_6623));
end

always @ (*) begin
    ap_condition_3507 = ((icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_3543 = ((icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_reg_6711));
end

always @ (*) begin
    ap_condition_3547 = ((icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_1_reg_6715));
end

always @ (*) begin
    ap_condition_3551 = ((icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_2_reg_6719));
end

always @ (*) begin
    ap_condition_3555 = ((icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_3_reg_6723));
end

always @ (*) begin
    ap_condition_3559 = ((icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_7149 = ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln182_reg_7460 == 1'd0));
end

always @ (*) begin
    ap_condition_7162 = ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_11_reg_6659_pp1_iter1_reg));
end

always @ (*) begin
    ap_condition_7166 = ((1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_8_reg_6695_pp1_iter1_reg));
end

always @ (*) begin
    ap_condition_7170 = ((1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3469_4_reg_6727_pp1_iter1_reg));
end

always @ (*) begin
    ap_condition_7174 = ((1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3416_reg_6515 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3421_reg_6759_pp1_iter1_reg));
end

always @ (*) begin
    ap_condition_7178 = ((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_7179 = ((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_3_reg_6627));
end

always @ (*) begin
    ap_condition_7186 = ((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_reg_6663));
end

always @ (*) begin
    ap_condition_7192 = ((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_7196 = ((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3346_reg_6506 == 1'd1));
end

always @ (*) begin
    ap_condition_7203 = ((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_9_reg_6699_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_7209 = ((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_5_reg_6731_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_7215 = ((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_1_reg_6763_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_7220 = ((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_1_reg_6667));
end

always @ (*) begin
    ap_condition_7225 = ((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_10_reg_6703_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_7231 = ((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_6_reg_6735_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_7237 = ((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_2_reg_6767_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_7240 = ((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_2_reg_6671));
end

always @ (*) begin
    ap_condition_7245 = ((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_11_reg_6707_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_7251 = ((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_7_reg_6739_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_7257 = ((1'b0 == ap_block_pp1_stage4) & (1'b1 == ap_CS_fsm_pp1_stage4) & (icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_3_reg_6771_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_7260 = ((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_3_reg_6675));
end

always @ (*) begin
    ap_condition_7265 = ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_7_reg_6643_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_7269 = ((1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_4_reg_6679_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_7275 = ((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_8_reg_6743_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_7281 = ((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3421_reg_6605_pp1_iter1_reg == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_condition_7295 = ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_8_reg_6647_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_7298 = ((1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_5_reg_6683_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_7305 = ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_9_reg_6651_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_7308 = ((1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_6_reg_6687_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_7316 = ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3553_10_reg_6655_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_7319 = ((1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln3512_reg_6523 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (1'd0 == and_ln3517_7_reg_6691_pp1_iter1_reg) & (icmp_ln3419_reg_6601_pp1_iter1_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

assign ap_ext_blocking_cur_n = (gmem_blk_n_W & gmem_blk_n_R & gmem_blk_n_B & gmem_blk_n_AW & gmem_blk_n_AR);

assign ap_ext_blocking_n = (ap_ext_blocking_sub_n & ap_ext_blocking_cur_n);

assign ap_int_blocking_n = (ap_int_blocking_sub_n & 1'b1);

always @ (*) begin
    ap_predicate_op1053_read_state24 = ((icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_9_reg_6699_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op1063_read_state24 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_5_reg_6731_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op1077_read_state24 = ((icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_1_reg_6763_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op1089_read_state25 = ((icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_10_reg_6703_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op1098_read_state25 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_6_reg_6735_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op1111_read_state25 = ((icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_2_reg_6767_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op1122_read_state26 = ((icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_11_reg_6707_pp1_iter1_reg) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op1130_read_state26 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_7_reg_6739_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op1142_read_state26 = ((icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_3_reg_6771_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op1158_read_state27 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_8_reg_6743_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op1169_read_state27 = ((icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3421_reg_6605_pp1_iter1_reg == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op1184_read_state28 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_9_reg_6747_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op1214_read_state28 = ((icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_4_reg_6775_pp1_iter1_reg) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op1222_read_state29 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_10_reg_6751_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op1238_read_state30 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_11_reg_6755_pp1_iter1_reg) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op457_readreq_state15 = ((icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op461_readreq_state15 = ((icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op465_readreq_state15 = ((icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op469_readreq_state15 = ((icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op473_readreq_state15 = ((icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op477_readreq_state16 = ((1'd0 == and_ln3553_11_reg_6659) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op481_readreq_state16 = ((icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_8_reg_6695) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op486_readreq_state16 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_4_reg_6727) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op491_readreq_state16 = ((icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_reg_6759) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op500_readreq_state17 = ((icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_9_reg_6699) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op506_readreq_state17 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_5_reg_6731) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op512_readreq_state17 = ((icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_1_reg_6763) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op522_readreq_state18 = ((icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_10_reg_6703) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op529_readreq_state18 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_6_reg_6735) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op536_readreq_state18 = ((icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_2_reg_6767) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op547_readreq_state19 = ((icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_11_reg_6707) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op554_readreq_state19 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_7_reg_6739) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op562_readreq_state19 = ((icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_3_reg_6771) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op579_readreq_state20 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_8_reg_6743) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op588_readreq_state20 = ((icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3421_reg_6605 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op606_readreq_state21 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_9_reg_6747) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op617_readreq_state21 = ((icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_4_reg_6775) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op619_read_state22 = ((icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op636_read_state22 = ((icmp_ln3512_reg_6523 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op653_read_state22 = ((icmp_ln3464_reg_6519 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op670_readreq_state22 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_10_reg_6751) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op671_read_state22 = ((icmp_ln3416_reg_6515 == 1'd1) & (icmp_ln3419_reg_6601 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op682_read_state22 = ((icmp_ln3346_reg_6506 == 1'd1) & (icmp_ln3363_reg_6592 == 1'd0));
end

always @ (*) begin
    ap_predicate_op752_read_state23 = ((1'd0 == and_ln3553_11_reg_6659) & (icmp_ln3512_reg_6523 == 1'd0) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op806_read_state23 = ((icmp_ln3512_reg_6523 == 1'd1) & (1'd0 == and_ln3517_8_reg_6695) & (icmp_ln3464_reg_6519 == 1'd0) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op863_read_state23 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_4_reg_6727) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op873_readreq_state23 = ((icmp_ln3464_reg_6519 == 1'd1) & (1'd0 == and_ln3469_11_reg_6755) & (icmp_ln3416_reg_6515 == 1'd0) & (icmp_ln3346_reg_6506 == 1'd0));
end

always @ (*) begin
    ap_predicate_op899_read_state23 = ((icmp_ln3416_reg_6515 == 1'd1) & (1'd0 == and_ln3421_reg_6759) & (icmp_ln3346_reg_6506 == 1'd0));
end

assign ap_str_blocking_n = (ap_str_blocking_sub_n & 1'b1);

assign bitcast_ln163_fu_6194_p1 = trunc_ln162_reg_7969;

assign bitcast_ln177_10_fu_6289_p1 = tmp_0_s_reg_8194;

assign bitcast_ln177_11_fu_6292_p1 = tmp_0_10_reg_8199;

assign bitcast_ln177_12_fu_6295_p1 = tmp_0_11_reg_8204;

assign bitcast_ln177_13_fu_6298_p1 = tmp_0_12_reg_8209;

assign bitcast_ln177_14_fu_6301_p1 = tmp_0_13_reg_8214;

assign bitcast_ln177_15_fu_6304_p1 = tmp_0_14_reg_8219;

assign bitcast_ln177_1_fu_6262_p1 = tmp_0_1_reg_8149;

assign bitcast_ln177_2_fu_6265_p1 = tmp_0_2_reg_8154;

assign bitcast_ln177_3_fu_6268_p1 = tmp_0_3_reg_8159;

assign bitcast_ln177_4_fu_6271_p1 = tmp_0_4_reg_8164;

assign bitcast_ln177_5_fu_6274_p1 = tmp_0_5_reg_8169;

assign bitcast_ln177_6_fu_6277_p1 = tmp_0_6_reg_8174;

assign bitcast_ln177_7_fu_6280_p1 = tmp_0_7_reg_8179;

assign bitcast_ln177_8_fu_6283_p1 = tmp_0_8_reg_8184;

assign bitcast_ln177_9_fu_6286_p1 = tmp_0_9_reg_8189;

assign bitcast_ln177_fu_6258_p1 = reg_2819;

assign bitcast_ln3376_10_fu_4961_p1 = raw_bits_2_s_reg_7184;

assign bitcast_ln3376_11_fu_4965_p1 = raw_bits_2_10_reg_7189;

assign bitcast_ln3376_12_fu_4969_p1 = raw_bits_2_11_reg_7194;

assign bitcast_ln3376_13_fu_4973_p1 = raw_bits_2_12_reg_7199;

assign bitcast_ln3376_14_fu_4977_p1 = raw_bits_2_13_reg_7204;

assign bitcast_ln3376_15_fu_4981_p1 = raw_bits_2_14_reg_7209;

assign bitcast_ln3376_1_fu_4908_p1 = raw_bits_2_1_reg_7139;

assign bitcast_ln3376_2_fu_4912_p1 = raw_bits_2_2_reg_7144;

assign bitcast_ln3376_3_fu_4916_p1 = raw_bits_2_3_reg_7149;

assign bitcast_ln3376_4_fu_4920_p1 = raw_bits_2_4_reg_7154;

assign bitcast_ln3376_5_fu_4924_p1 = raw_bits_2_5_reg_7159;

assign bitcast_ln3376_6_fu_4928_p1 = raw_bits_2_6_reg_7164;

assign bitcast_ln3376_7_fu_4932_p1 = raw_bits_2_7_reg_7169;

assign bitcast_ln3376_8_fu_4936_p1 = raw_bits_2_8_reg_7174;

assign bitcast_ln3376_9_fu_4957_p1 = raw_bits_2_9_reg_7179;

assign bitcast_ln3376_fu_4878_p1 = trunc_ln3375_reg_7134;

assign bitcast_ln3424_10_fu_5537_p1 = raw_bits_3_s_reg_7311;

assign bitcast_ln3424_11_fu_5541_p1 = raw_bits_3_10_reg_7316;

assign bitcast_ln3424_12_fu_5545_p1 = raw_bits_3_11_reg_7321;

assign bitcast_ln3424_13_fu_5562_p1 = raw_bits_3_12_reg_7326;

assign bitcast_ln3424_14_fu_5566_p1 = raw_bits_3_13_reg_7331;

assign bitcast_ln3424_15_fu_5607_p1 = raw_bits_3_14_reg_7341;

assign bitcast_ln3424_1_fu_4793_p1 = raw_bits_3_1_reg_7119;

assign bitcast_ln3424_2_fu_4818_p1 = raw_bits_3_2_reg_7124;

assign bitcast_ln3424_3_fu_4843_p1 = raw_bits_3_3_reg_7129;

assign bitcast_ln3424_4_fu_5166_p1 = raw_bits_3_4_reg_7246;

assign bitcast_ln3424_5_fu_5247_p1 = raw_bits_3_5_reg_7261;

assign bitcast_ln3424_6_fu_5328_p1 = raw_bits_3_6_reg_7276;

assign bitcast_ln3424_7_fu_5399_p1 = raw_bits_3_7_reg_7291;

assign bitcast_ln3424_8_fu_5513_p1 = raw_bits_3_8_reg_7301;

assign bitcast_ln3424_9_fu_5533_p1 = raw_bits_3_9_reg_7306;

assign bitcast_ln3424_fu_4768_p1 = trunc_ln3423_reg_7114;

assign bitcast_ln3472_10_fu_5301_p1 = raw_bits_4_s_reg_7271;

assign bitcast_ln3472_11_fu_5372_p1 = raw_bits_4_10_reg_7286;

assign bitcast_ln3472_12_fu_5486_p1 = raw_bits_4_11_reg_7296;

assign bitcast_ln3472_13_fu_5580_p1 = raw_bits_4_12_reg_7336;

assign bitcast_ln3472_14_fu_5630_p1 = raw_bits_4_13_reg_7346;

assign bitcast_ln3472_15_fu_5665_p1 = raw_bits_4_14_reg_7351;

assign bitcast_ln3472_1_fu_4637_p1 = raw_bits_4_1_reg_7073;

assign bitcast_ln3472_2_fu_4662_p1 = raw_bits_4_2_reg_7078;

assign bitcast_ln3472_3_fu_4687_p1 = raw_bits_4_3_reg_7083;

assign bitcast_ln3472_4_fu_4712_p1 = raw_bits_4_4_reg_7088;

assign bitcast_ln3472_5_fu_4721_p1 = raw_bits_4_5_reg_7093;

assign bitcast_ln3472_6_fu_4730_p1 = raw_bits_4_6_reg_7098;

assign bitcast_ln3472_7_fu_4739_p1 = raw_bits_4_7_reg_7103;

assign bitcast_ln3472_8_fu_5139_p1 = raw_bits_4_8_reg_7235;

assign bitcast_ln3472_9_fu_5220_p1 = raw_bits_4_9_reg_7256;

assign bitcast_ln3472_fu_4612_p1 = trunc_ln3471_reg_7068;

assign bitcast_ln3520_10_fu_5094_p1 = raw_bits_5_s_reg_7058;

assign bitcast_ln3520_11_fu_5103_p1 = raw_bits_5_10_reg_7063;

assign bitcast_ln3520_12_fu_5112_p1 = raw_bits_5_11_reg_7230;

assign bitcast_ln3520_13_fu_5193_p1 = raw_bits_5_12_reg_7251;

assign bitcast_ln3520_14_fu_5274_p1 = raw_bits_5_13_reg_7266;

assign bitcast_ln3520_15_fu_5355_p1 = raw_bits_5_14_reg_7281;

assign bitcast_ln3520_1_fu_4491_p1 = raw_bits_5_1_reg_7013;

assign bitcast_ln3520_2_fu_4516_p1 = raw_bits_5_2_reg_7018;

assign bitcast_ln3520_3_fu_4541_p1 = raw_bits_5_3_reg_7023;

assign bitcast_ln3520_4_fu_4566_p1 = raw_bits_5_4_reg_7028;

assign bitcast_ln3520_5_fu_4575_p1 = raw_bits_5_5_reg_7033;

assign bitcast_ln3520_6_fu_4584_p1 = raw_bits_5_6_reg_7038;

assign bitcast_ln3520_7_fu_4593_p1 = raw_bits_5_7_reg_7043;

assign bitcast_ln3520_8_fu_5076_p1 = raw_bits_5_8_reg_7048;

assign bitcast_ln3520_9_fu_5085_p1 = raw_bits_5_9_reg_7053;

assign bitcast_ln3520_fu_4482_p1 = trunc_ln3519_reg_7008;

assign bitcast_ln3556_10_fu_5014_p1 = raw_bits_6_s_reg_6983;

assign bitcast_ln3556_11_fu_5023_p1 = raw_bits_6_10_reg_6988;

assign bitcast_ln3556_12_fu_5032_p1 = raw_bits_6_11_reg_6993;

assign bitcast_ln3556_13_fu_5041_p1 = raw_bits_6_12_reg_6998;

assign bitcast_ln3556_14_fu_5050_p1 = raw_bits_6_13_reg_7003;

assign bitcast_ln3556_15_fu_5059_p1 = raw_bits_6_14_reg_7225;

assign bitcast_ln3556_1_fu_4329_p1 = raw_bits_6_1_reg_6938;

assign bitcast_ln3556_2_fu_4354_p1 = raw_bits_6_2_reg_6943;

assign bitcast_ln3556_3_fu_4379_p1 = raw_bits_6_3_reg_6948;

assign bitcast_ln3556_4_fu_4388_p1 = raw_bits_6_4_reg_6953;

assign bitcast_ln3556_5_fu_4413_p1 = raw_bits_6_5_reg_6958;

assign bitcast_ln3556_6_fu_4438_p1 = raw_bits_6_6_reg_6963;

assign bitcast_ln3556_7_fu_4463_p1 = raw_bits_6_7_reg_6968;

assign bitcast_ln3556_8_fu_4996_p1 = raw_bits_6_8_reg_6973;

assign bitcast_ln3556_9_fu_5005_p1 = raw_bits_6_9_reg_6978;

assign bitcast_ln3556_fu_4304_p1 = trunc_ln3555_reg_6933;

assign deg_inv_sqrt_address1 = sext_ln247_fu_5955_p1;

assign edge_index_buf_1_address1 = zext_ln247_reg_7679_pp7_iter3_reg;

assign edge_index_buf_2_address1 = zext_ln207_2_fu_5856_p1;

assign edge_index_buf_2_d1 = i1_0_reg_2403;

assign edge_index_buf_3_address1 = zext_ln266_fu_5987_p1;

assign empty_fu_2883_p1 = weight_data3_reg_6358;

assign end_fu_3297_p4 = {{add_ln3342_fu_3291_p2[23:4]}};

assign event_done = ap_done;

assign grp_fu_2515_p0 = raw_bits_7_1_reg_7974;

assign grp_fu_2519_p0 = raw_bits_7_2_reg_7979;

assign grp_fu_2523_p0 = raw_bits_7_3_reg_7984;

assign grp_fu_2527_p0 = raw_bits_7_4_reg_7989;

assign grp_fu_2531_p0 = raw_bits_7_5_reg_7994;

assign grp_fu_2535_p0 = raw_bits_7_6_reg_7999;

assign grp_fu_2539_p0 = raw_bits_7_7_reg_8004;

assign grp_fu_2543_p0 = raw_bits_7_8_reg_8009;

assign grp_fu_2547_p0 = raw_bits_7_9_reg_8014;

assign grp_fu_2551_p0 = raw_bits_7_s_reg_8019;

assign grp_fu_2555_p0 = raw_bits_7_10_reg_8024;

assign grp_fu_2559_p0 = raw_bits_7_11_reg_8029;

assign grp_fu_2563_p0 = raw_bits_7_12_reg_8039;

assign grp_fu_2567_p0 = raw_bits_7_13_reg_8049;

assign grp_fu_2571_p0 = raw_bits_7_14_reg_8059;

assign grp_fu_2597_p2 = ((zext_ln3363_1_fu_3476_p1 == add_ln3553_reg_6527) ? 1'b1 : 1'b0);

assign grp_fu_2601_p2 = (zext_ln3424_11_fu_3492_p1 + p_cast_reg_6379);

assign grp_fu_2605_p2 = (icmp_ln3373_1_reg_6532 & grp_fu_2597_p2);

assign grp_fu_2610_p2 = (icmp_ln3421_1_reg_6542 & grp_fu_2597_p2);

assign grp_fu_2615_p2 = (icmp_ln3421_2_reg_6547 & grp_fu_2597_p2);

assign grp_fu_2620_p2 = (icmp_ln3421_3_reg_6552 & grp_fu_2597_p2);

assign grp_fu_2625_p2 = (xor_ln3469_reg_6557 & grp_fu_2597_p2);

assign grp_fu_2630_p2 = (icmp_ln3469_reg_6562 & grp_fu_2597_p2);

assign grp_fu_2635_p2 = (icmp_ln3469_1_reg_6567 & grp_fu_2597_p2);

assign grp_fu_2640_p2 = (icmp_ln3469_2_reg_6572 & grp_fu_2597_p2);

assign grp_fu_2645_p2 = (icmp_ln3469_3_reg_6577 & grp_fu_2597_p2);

assign grp_fu_2650_p2 = (icmp_ln3469_4_reg_6582 & grp_fu_2597_p2);

assign grp_fu_2655_p2 = (icmp_ln3469_5_reg_6587 & grp_fu_2597_p2);

assign grp_fu_2660_p2 = (icmp_ln3373_2_reg_6537 & grp_fu_2597_p2);

assign grp_fu_2665_p2 = (p_cast_reg_6379 + zext_ln3424_11_reg_6609);

assign grp_fu_2669_p2 = ($signed(10'd1012) + $signed(shl_ln2_fu_4287_p3));

assign grp_fu_2674_p4 = {{grp_fu_2669_p2[9:3]}};

assign grp_fu_2684_p2 = ($signed(shl_ln2_fu_4287_p3) + $signed(10'd1016));

assign grp_fu_2689_p4 = {{grp_fu_2684_p2[9:3]}};

assign grp_fu_2699_p2 = ($signed(grp_fu_2699_p0) + $signed(10'd1017));

assign grp_fu_2704_p4 = {{grp_fu_2699_p2[9:3]}};

assign grp_fu_2714_p2 = ($signed(grp_fu_2714_p0) + $signed(10'd1018));

assign grp_fu_2719_p4 = {{grp_fu_2714_p2[9:3]}};

assign grp_fu_2729_p2 = ($signed(grp_fu_2729_p0) + $signed(10'd1019));

assign grp_fu_2734_p4 = {{grp_fu_2729_p2[9:3]}};

assign grp_fu_2744_p2 = ($signed(grp_fu_2744_p0) + $signed(10'd1020));

assign grp_fu_2749_p4 = {{grp_fu_2744_p2[9:3]}};

assign grp_fu_2759_p2 = ($signed(grp_fu_2759_p0) + $signed(10'd1021));

assign grp_fu_2764_p4 = {{grp_fu_2759_p2[9:3]}};

assign grp_fu_2774_p2 = ($signed(grp_fu_2774_p0) + $signed(10'd1022));

assign grp_fu_2779_p4 = {{grp_fu_2774_p2[9:3]}};

assign grp_fu_2789_p2 = ($signed(grp_fu_2789_p0) + $signed(10'd1023));

assign grp_fu_2794_p4 = {{grp_fu_2789_p2[9:3]}};

assign grp_merlin_memcpy_0_0_fu_2478_ap_start = grp_merlin_memcpy_0_0_fu_2478_ap_start_reg;

assign grp_merlin_memcpy_1_0_0_fu_2470_ap_start = grp_merlin_memcpy_1_0_0_fu_2470_ap_start_reg;

assign grp_merlin_memcpy_2_0_fu_2502_ap_start = grp_merlin_memcpy_2_0_fu_2502_ap_start_reg;

assign grp_merlin_memcpy_3_0_fu_2486_ap_start = grp_merlin_memcpy_3_0_fu_2486_ap_start_reg;

assign grp_merlin_memcpy_4_0_fu_2494_ap_start = grp_merlin_memcpy_4_0_fu_2494_ap_start_reg;

assign head_align_fu_3261_p4 = {{phi_mul_reg_2307[5:2]}};

assign i_1_fu_5825_p2 = (i1_0_reg_2403 + 15'd1);

assign i_2_fu_5867_p2 = (i3_0_reg_2414 + 17'd1);

assign i_3_fu_3245_p2 = (i_0_reg_2295 + 15'd1);

assign i_4_fu_5884_p2 = (ap_phi_mux_i4_0_phi_fu_2429_p4 + 17'd1);

assign i_5_fu_5907_p2 = (i5_0_reg_2436 + 15'd1);

assign i_6_fu_5924_p2 = (ap_phi_mux_i6_0_phi_fu_2451_p4 + 17'd1);

assign i_7_fu_5966_p2 = (ap_phi_mux_i7_0_phi_fu_2463_p4 + 17'd1);

assign i_8_fu_3466_p2 = (ap_phi_mux_i_0_i28_phi_fu_2322_p4 + 6'd1);

assign i_fu_2905_p2 = (i_0_i_reg_2260 + 9'd1);

assign icmp_ln1097_fu_2899_p2 = ((i_0_i_reg_2260 == 9'd500) ? 1'b1 : 1'b0);

assign icmp_ln1113_fu_3199_p2 = ((index1_1_i_reg_2283 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln169_fu_3239_p2 = ((i_0_reg_2295 == 15'd19717) ? 1'b1 : 1'b0);

assign icmp_ln178_fu_5693_p2 = ((j_0_reg_2330 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln182_fu_5727_p2 = ((ap_phi_mux_k_0_phi_fu_2346_p4 == 9'd500) ? 1'b1 : 1'b0);

assign icmp_ln195_fu_5819_p2 = ((i1_0_reg_2403 == 15'd19717) ? 1'b1 : 1'b0);

assign icmp_ln213_fu_5861_p2 = ((i3_0_reg_2414 == 17'd108365) ? 1'b1 : 1'b0);

assign icmp_ln223_fu_5878_p2 = ((ap_phi_mux_i4_0_phi_fu_2429_p4 == 17'd108365) ? 1'b1 : 1'b0);

assign icmp_ln232_fu_5901_p2 = ((i5_0_reg_2436 == 15'd19717) ? 1'b1 : 1'b0);

assign icmp_ln242_fu_5918_p2 = ((ap_phi_mux_i6_0_phi_fu_2451_p4 == 17'd108365) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_5960_p2 = ((ap_phi_mux_i7_0_phi_fu_2463_p4 == 17'd108365) ? 1'b1 : 1'b0);

assign icmp_ln3346_fu_3331_p2 = ((head_align_fu_3261_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln3363_fu_3461_p2 = ((ap_phi_mux_i_0_i28_phi_fu_2322_p4 == len_reg_6510) ? 1'b1 : 1'b0);

assign icmp_ln3373_1_fu_3381_p2 = ((tail_align_fu_3271_p2 == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln3373_2_fu_3387_p2 = ((tail_align_fu_3271_p2 != 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln3416_fu_3351_p2 = ((head_align_fu_3261_p4 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln3419_fu_3481_p2 = ((ap_phi_mux_i_0_i28_phi_fu_2322_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln3421_1_fu_3393_p2 = ((tail_align_fu_3271_p2 < 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln3421_2_fu_3399_p2 = ((tail_align_fu_3271_p2 < 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln3421_3_fu_3405_p2 = ((tail_align_fu_3271_p2 < 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln3464_fu_3357_p2 = ((head_align_fu_3261_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln3469_1_fu_3431_p2 = ((tail_align_fu_3271_p2 < 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln3469_2_fu_3437_p2 = ((tail_align_fu_3271_p2 < 4'd11) ? 1'b1 : 1'b0);

assign icmp_ln3469_3_fu_3443_p2 = ((tail_align_fu_3271_p2 < 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln3469_4_fu_3449_p2 = ((tail_align_fu_3271_p2 < 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln3469_5_fu_3455_p2 = ((tail_align_fu_3271_p2 < 4'd14) ? 1'b1 : 1'b0);

assign icmp_ln3469_fu_3425_p2 = ((tail_align_fu_3271_p2 < 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln3512_fu_3363_p2 = ((head_align_fu_3261_p4 == 4'd12) ? 1'b1 : 1'b0);

assign index1_1_fu_3225_p3 = ((icmp_ln1113_fu_3199_p2[0:0] === 1'b1) ? 64'd0 : index1_fu_3211_p2);

assign index1_fu_3211_p2 = (64'd1 + index1_1_i_reg_2283);

assign index2_1_fu_3217_p3 = ((icmp_ln1113_fu_3199_p2[0:0] === 1'b1) ? index2_fu_3205_p2 : index2_2_i_reg_2271);

assign index2_fu_3205_p2 = (10'd1 + index2_2_i_reg_2271);

assign j_fu_5699_p2 = (j_0_reg_2330 + 5'd1);

assign k_fu_5733_p2 = (ap_phi_mux_k_0_phi_fu_2346_p4 + 9'd1);

assign len_fu_3343_p3 = ((icmp_ln3346_fu_3331_p2[0:0] === 1'b1) ? 6'd32 : sub_ln3347_fu_3337_p2);

assign lshr_ln1_fu_4778_p4 = {{add_ln3424_fu_4772_p2[9:3]}};

assign lshr_ln2_fu_5772_p4 = {{ap_phi_mux_k_0_phi_fu_2346_p4[8:3]}};

assign lshr_ln3424_1_fu_4803_p4 = {{add_ln3424_1_fu_4797_p2[9:3]}};

assign lshr_ln3424_2_fu_4828_p4 = {{add_ln3424_2_fu_4822_p2[9:3]}};

assign lshr_ln3424_3_fu_4853_p4 = {{add_ln3424_3_fu_4847_p2[9:3]}};

assign lshr_ln3472_1_fu_4647_p4 = {{add_ln3472_1_fu_4641_p2[9:3]}};

assign lshr_ln3472_2_fu_4672_p4 = {{add_ln3472_2_fu_4666_p2[9:3]}};

assign lshr_ln3472_3_fu_4697_p4 = {{add_ln3472_3_fu_4691_p2[9:3]}};

assign lshr_ln3520_1_fu_4501_p4 = {{add_ln3520_1_fu_4495_p2[9:3]}};

assign lshr_ln3520_2_fu_4526_p4 = {{add_ln3520_2_fu_4520_p2[9:3]}};

assign lshr_ln3520_3_fu_4551_p4 = {{add_ln3520_3_fu_4545_p2[9:3]}};

assign lshr_ln3556_1_fu_4339_p4 = {{add_ln3556_1_fu_4333_p2[9:3]}};

assign lshr_ln3556_2_fu_4364_p4 = {{add_ln3556_2_fu_4358_p2[9:3]}};

assign lshr_ln3556_4_fu_4398_p4 = {{add_ln3556_4_fu_4392_p2[9:3]}};

assign lshr_ln3556_5_fu_4423_p4 = {{add_ln3556_5_fu_4417_p2[9:3]}};

assign lshr_ln3556_6_fu_4448_p4 = {{add_ln3556_6_fu_4442_p2[9:3]}};

assign lshr_ln3_fu_4622_p4 = {{add_ln3472_fu_4616_p2[9:3]}};

assign lshr_ln5_fu_4314_p4 = {{add_ln3556_fu_4308_p2[9:3]}};

assign lshr_ln_fu_3277_p4 = {{phi_mul_reg_2307[25:6]}};

assign or_ln1111_fu_3143_p2 = (shl_ln_fu_3081_p3 | 3'd1);

assign or_ln3376_1_fu_4985_p2 = (shl_ln3376_fu_4890_p2 | 6'd1);

assign or_ln3376_fu_4940_p2 = (shl_ln3376_fu_4890_p2 | 6'd1);

assign or_ln3424_1_fu_5619_p2 = (shl_ln3424_6_fu_5611_p3 | 7'd1);

assign or_ln3424_fu_5549_p2 = (shl_ln3424_5_fu_5517_p3 | 7'd1);

assign p_cast33_fu_2893_p1 = tmp_18_reg_6344;

assign p_cast_fu_2896_p1 = tmp_19_reg_6363;

assign sext_ln160_fu_5997_p1 = $signed(trunc_ln160_fu_5993_p1);

assign sext_ln207_fu_5852_p1 = $signed(add_ln207_fu_5846_p2);

assign sext_ln228_fu_5896_p1 = $signed(edge_index_buf_0_q0);

assign sext_ln247_1_fu_5950_p1 = $signed(edge_index_buf_1_q0);

assign sext_ln247_fu_5955_p1 = $signed(edge_index_buf_1_q1);

assign sext_ln266_fu_6010_p1 = $signed(edge_index_buf_3_q1);

assign shl_ln1_fu_4882_p3 = {{i_0_i28_reg_2318}, {1'd0}};

assign shl_ln2_fu_4287_p3 = {{i_0_i28_reg_2318}, {4'd0}};

assign shl_ln3376_fu_4890_p2 = i_0_i28_reg_2318 << 6'd1;

assign shl_ln3424_1_fu_5170_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3424_2_fu_5251_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3424_3_fu_5332_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3424_4_fu_5403_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3424_5_fu_5517_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3424_6_fu_5611_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3472_1_fu_5224_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3472_2_fu_5305_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3472_3_fu_5376_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3472_4_fu_5490_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3472_5_fu_5584_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3472_6_fu_5634_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3472_7_fu_5657_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3520_1_fu_5197_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3520_2_fu_5278_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3520_3_fu_5359_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln3_fu_5143_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln4_fu_5116_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln5_fu_5063_p3 = {{i_0_i28_reg_2318_pp1_iter1_reg}, {1'd0}};

assign shl_ln_fu_3081_p3 = {{trunc_ln1111_fu_3077_p1}, {1'd0}};

assign start_fu_3287_p1 = lshr_ln_fu_3277_p4;

assign sub_ln3347_fu_3337_p2 = (trunc_ln2_fu_3311_p4 - trunc_ln3347_1_fu_3321_p4);

assign tail_align_fu_3271_p2 = (head_align_fu_3261_p4 | 4'd3);

assign tmp_16_fu_6307_p17 = {{{{{{{{{{{{{{{{bitcast_ln177_15_fu_6304_p1}, {bitcast_ln177_14_fu_6301_p1}}, {bitcast_ln177_13_fu_6298_p1}}, {bitcast_ln177_12_fu_6295_p1}}, {bitcast_ln177_11_fu_6292_p1}}, {bitcast_ln177_10_fu_6289_p1}}, {bitcast_ln177_9_fu_6286_p1}}, {bitcast_ln177_8_fu_6283_p1}}, {bitcast_ln177_7_fu_6280_p1}}, {bitcast_ln177_6_fu_6277_p1}}, {bitcast_ln177_5_fu_6274_p1}}, {bitcast_ln177_4_fu_6271_p1}}, {bitcast_ln177_3_fu_6268_p1}}, {bitcast_ln177_2_fu_6265_p1}}, {bitcast_ln177_1_fu_6262_p1}}, {bitcast_ln177_fu_6258_p1}};

assign tmp_17_fu_3065_p3 = {{index2_2_i_reg_2271}, {1'd0}};

assign tmp_20_fu_5739_p3 = {{ap_phi_mux_k_0_phi_fu_2346_p4}, {1'd0}};

assign tmp_21_fu_3411_p3 = tail_align_fu_3271_p2[32'd3];

assign tmp_22_fu_5713_p4 = {{j_0_reg_2330[4:3]}};

assign trunc_ln1110_fu_2911_p1 = gmem_RDATA[31:0];

assign trunc_ln1111_fu_3077_p1 = index1_1_i_reg_2283[1:0];

assign trunc_ln160_fu_5993_p1 = edge_index_buf_3_q0[25:0];

assign trunc_ln162_fu_6040_p1 = gmem_RDATA[31:0];

assign trunc_ln187_1_fu_5768_p1 = ap_phi_mux_k_0_phi_fu_2346_p4[2:0];

assign trunc_ln187_fu_5705_p1 = j_0_reg_2330[2:0];

assign trunc_ln189_fu_5815_p1 = j_0_reg_2330[3:0];

assign trunc_ln2_fu_3311_p4 = {{add_ln3342_fu_3291_p2[9:4]}};

assign trunc_ln3347_1_fu_3321_p4 = {{phi_mul_reg_2307[11:6]}};

assign trunc_ln3375_fu_4133_p1 = gmem_RDATA[31:0];

assign trunc_ln3423_fu_4099_p1 = gmem_RDATA[31:0];

assign trunc_ln3471_fu_4014_p1 = gmem_RDATA[31:0];

assign trunc_ln3519_fu_3900_p1 = gmem_RDATA[31:0];

assign trunc_ln3555_fu_3756_p1 = gmem_RDATA[31:0];

assign trunc_ln_fu_3251_p4 = {{phi_mul_reg_2307[25:2]}};

assign weight_buf_0_0_address1 = zext_ln1111_3_fu_3159_p1;

assign weight_buf_0_0_d0 = trunc_ln1110_reg_6396;

assign weight_buf_0_0_d1 = raw_bits_8_reg_6436;

assign weight_buf_0_1_address1 = zext_ln1111_3_fu_3159_p1;

assign weight_buf_0_1_d0 = raw_bits_1_reg_6401;

assign weight_buf_0_1_d1 = raw_bits_9_reg_6441;

assign weight_buf_0_2_address1 = zext_ln1111_3_fu_3159_p1;

assign weight_buf_0_2_d0 = raw_bits_s_reg_6406;

assign weight_buf_0_2_d1 = raw_bits_7_reg_6446;

assign weight_buf_0_3_address1 = zext_ln1111_3_fu_3159_p1;

assign weight_buf_0_3_d0 = raw_bits_2_reg_6411;

assign weight_buf_0_3_d1 = raw_bits_10_reg_6451;

assign weight_buf_0_4_address1 = zext_ln1111_3_fu_3159_p1;

assign weight_buf_0_4_d0 = raw_bits_3_reg_6416;

assign weight_buf_0_4_d1 = raw_bits_11_reg_6456;

assign weight_buf_0_5_address1 = zext_ln1111_3_fu_3159_p1;

assign weight_buf_0_5_d0 = raw_bits_4_reg_6421;

assign weight_buf_0_5_d1 = raw_bits_12_reg_6461;

assign weight_buf_0_6_address1 = zext_ln1111_3_fu_3159_p1;

assign weight_buf_0_6_d0 = raw_bits_5_reg_6426;

assign weight_buf_0_6_d1 = raw_bits_13_reg_6466;

assign weight_buf_0_7_address1 = zext_ln1111_3_fu_3159_p1;

assign weight_buf_0_7_d0 = raw_bits_6_reg_6431;

assign weight_buf_0_7_d1 = raw_bits_14_reg_6471;

assign xor_ln3469_fu_3419_p2 = (tmp_21_fu_3411_p3 ^ 1'd1);

assign xor_ln3553_fu_3369_p2 = (start_fu_3287_p1 ^ 64'd18446744073709551615);

assign zext_ln1111_1_fu_3099_p1 = add_ln1111_fu_3093_p2;

assign zext_ln1111_2_fu_3149_p1 = or_ln1111_fu_3143_p2;

assign zext_ln1111_3_fu_3159_p1 = add_ln1111_1_fu_3153_p2;

assign zext_ln1111_fu_3089_p1 = shl_ln_fu_3081_p3;

assign zext_ln182_fu_5723_p1 = tmp_22_fu_5713_p4;

assign zext_ln187_1_fu_5747_p1 = tmp_20_fu_5739_p3;

assign zext_ln187_2_fu_5782_p1 = lshr_ln2_fu_5772_p4;

assign zext_ln187_3_fu_5756_p1 = add_ln187_fu_5751_p2;

assign zext_ln187_fu_5709_p1 = trunc_ln187_fu_5705_p1;

assign zext_ln189_fu_5673_p1 = i_0_reg_2295;

assign zext_ln195_fu_5831_p1 = i1_0_reg_2403;

assign zext_ln207_1_fu_5842_p1 = i1_0_reg_2403;

assign zext_ln207_2_fu_5856_p1 = $unsigned(sext_ln207_fu_5852_p1);

assign zext_ln207_fu_5837_p1 = i1_0_reg_2403;

assign zext_ln218_fu_5873_p1 = i3_0_reg_2414;

assign zext_ln228_fu_5890_p1 = ap_phi_mux_i4_0_phi_fu_2429_p4;

assign zext_ln237_fu_5913_p1 = i5_0_reg_2436;

assign zext_ln242_fu_5930_p1 = ap_phi_mux_i6_0_phi_fu_2451_p4;

assign zext_ln247_1_fu_5940_p1 = add_ln247_fu_5934_p2;

assign zext_ln247_fu_5945_p1 = i6_0_reg_2447;

assign zext_ln252_fu_5972_p1 = ap_phi_mux_i7_0_phi_fu_2463_p4;

assign zext_ln265_fu_5982_p1 = add_ln265_fu_5976_p2;

assign zext_ln266_fu_5987_p1 = ap_phi_mux_i7_0_phi_fu_2463_p4;

assign zext_ln32_10_fu_6030_p1 = add_ln32_8_reg_7747;

assign zext_ln32_11_fu_3697_p1 = reg_2808;

assign zext_ln32_12_fu_3719_p1 = reg_2808;

assign zext_ln32_13_fu_3587_p1 = reg_2808;

assign zext_ln32_14_fu_3745_p1 = reg_2808;

assign zext_ln32_15_fu_3620_p1 = reg_2808;

assign zext_ln32_16_fu_3653_p1 = reg_2808;

assign zext_ln32_17_fu_3686_p1 = reg_2808;

assign zext_ln32_18_fu_3708_p1 = reg_2808;

assign zext_ln32_19_fu_3576_p1 = reg_2808;

assign zext_ln32_1_fu_3555_p1 = add_ln32_reg_6783;

assign zext_ln32_20_fu_3730_p1 = reg_2808;

assign zext_ln32_21_fu_3609_p1 = reg_2808;

assign zext_ln32_22_fu_4088_p1 = reg_2808;

assign zext_ln32_23_fu_3642_p1 = reg_2808;

assign zext_ln32_24_fu_4758_p1 = add_ln32_22_reg_6922;

assign zext_ln32_25_fu_3675_p1 = reg_2808;

assign zext_ln32_26_fu_3565_p1 = reg_2808;

assign zext_ln32_2_fu_3544_p1 = reg_2804;

assign zext_ln32_3_fu_3533_p1 = reg_2804;

assign zext_ln32_4_fu_3598_p1 = reg_2808;

assign zext_ln32_5_fu_3522_p1 = reg_2804;

assign zext_ln32_6_fu_3511_p1 = reg_2804;

assign zext_ln32_7_fu_3631_p1 = reg_2808;

assign zext_ln32_8_fu_3664_p1 = reg_2808;

assign zext_ln32_9_fu_6001_p1 = $unsigned(sext_ln160_fu_5997_p1);

assign zext_ln32_fu_3502_p1 = add_ln3375_fu_3497_p2;

assign zext_ln3342_fu_3307_p1 = end_fu_3297_p4;

assign zext_ln3363_1_fu_3476_p1 = ap_phi_mux_i_0_i28_phi_fu_2322_p4;

assign zext_ln3363_fu_3472_p1 = ap_phi_mux_i_0_i28_phi_fu_2322_p4;

assign zext_ln3376_1_fu_4946_p1 = or_ln3376_fu_4940_p2;

assign zext_ln3376_2_fu_4991_p1 = or_ln3376_1_fu_4985_p2;

assign zext_ln3376_fu_4896_p1 = shl_ln1_fu_4882_p3;

assign zext_ln3424_10_fu_5625_p1 = or_ln3424_1_fu_5619_p2;

assign zext_ln3424_11_fu_3492_p1 = add_ln3423_fu_3487_p2;

assign zext_ln3424_1_fu_4813_p1 = lshr_ln3424_1_fu_4803_p4;

assign zext_ln3424_2_fu_4838_p1 = lshr_ln3424_2_fu_4828_p4;

assign zext_ln3424_3_fu_4863_p1 = lshr_ln3424_3_fu_4853_p4;

assign zext_ln3424_4_fu_5178_p1 = shl_ln3424_1_fu_5170_p3;

assign zext_ln3424_5_fu_5259_p1 = shl_ln3424_2_fu_5251_p3;

assign zext_ln3424_6_fu_5340_p1 = shl_ln3424_3_fu_5332_p3;

assign zext_ln3424_7_fu_5411_p1 = shl_ln3424_4_fu_5403_p3;

assign zext_ln3424_8_fu_5525_p1 = shl_ln3424_5_fu_5517_p3;

assign zext_ln3424_9_fu_5555_p1 = or_ln3424_fu_5549_p2;

assign zext_ln3424_fu_4788_p1 = lshr_ln1_fu_4778_p4;

assign zext_ln3472_10_fu_5313_p1 = shl_ln3472_2_fu_5305_p3;

assign zext_ln3472_11_fu_5384_p1 = shl_ln3472_3_fu_5376_p3;

assign zext_ln3472_12_fu_5498_p1 = shl_ln3472_4_fu_5490_p3;

assign zext_ln3472_13_fu_5592_p1 = shl_ln3472_5_fu_5584_p3;

assign zext_ln3472_14_fu_5642_p1 = shl_ln3472_6_fu_5634_p3;

assign zext_ln3472_15_fu_5669_p1 = shl_ln3472_7_reg_7356;

assign zext_ln3472_1_fu_4657_p1 = lshr_ln3472_1_fu_4647_p4;

assign zext_ln3472_2_fu_4682_p1 = lshr_ln3472_2_fu_4672_p4;

assign zext_ln3472_3_fu_4707_p1 = lshr_ln3472_3_fu_4697_p4;

assign zext_ln3472_4_fu_4716_p1 = grp_fu_2749_p4;

assign zext_ln3472_5_fu_4725_p1 = grp_fu_2764_p4;

assign zext_ln3472_6_fu_4734_p1 = grp_fu_2779_p4;

assign zext_ln3472_7_fu_4743_p1 = grp_fu_2794_p4;

assign zext_ln3472_8_fu_5151_p1 = shl_ln3_fu_5143_p3;

assign zext_ln3472_9_fu_5232_p1 = shl_ln3472_1_fu_5224_p3;

assign zext_ln3472_fu_4632_p1 = lshr_ln3_fu_4622_p4;

assign zext_ln3520_10_fu_5098_p1 = grp_fu_2779_p4;

assign zext_ln3520_11_fu_5107_p1 = grp_fu_2794_p4;

assign zext_ln3520_12_fu_5124_p1 = shl_ln4_fu_5116_p3;

assign zext_ln3520_13_fu_5205_p1 = shl_ln3520_1_fu_5197_p3;

assign zext_ln3520_14_fu_5286_p1 = shl_ln3520_2_fu_5278_p3;

assign zext_ln3520_15_fu_5367_p1 = shl_ln3520_3_fu_5359_p3;

assign zext_ln3520_1_fu_4511_p1 = lshr_ln3520_1_fu_4501_p4;

assign zext_ln3520_2_fu_4536_p1 = lshr_ln3520_2_fu_4526_p4;

assign zext_ln3520_3_fu_4561_p1 = lshr_ln3520_3_fu_4551_p4;

assign zext_ln3520_4_fu_4570_p1 = grp_fu_2689_p4;

assign zext_ln3520_5_fu_4579_p1 = grp_fu_2704_p4;

assign zext_ln3520_6_fu_4588_p1 = grp_fu_2719_p4;

assign zext_ln3520_7_fu_4597_p1 = grp_fu_2734_p4;

assign zext_ln3520_8_fu_5080_p1 = grp_fu_2749_p4;

assign zext_ln3520_9_fu_5089_p1 = grp_fu_2764_p4;

assign zext_ln3520_fu_4486_p1 = grp_fu_2674_p4;

assign zext_ln3556_10_fu_5018_p1 = grp_fu_2734_p4;

assign zext_ln3556_11_fu_5027_p1 = grp_fu_2749_p4;

assign zext_ln3556_12_fu_5036_p1 = grp_fu_2764_p4;

assign zext_ln3556_13_fu_5045_p1 = grp_fu_2779_p4;

assign zext_ln3556_14_fu_5054_p1 = grp_fu_2794_p4;

assign zext_ln3556_15_fu_5071_p1 = shl_ln5_fu_5063_p3;

assign zext_ln3556_1_fu_4349_p1 = lshr_ln3556_1_fu_4339_p4;

assign zext_ln3556_2_fu_4374_p1 = lshr_ln3556_2_fu_4364_p4;

assign zext_ln3556_3_fu_4383_p1 = grp_fu_2674_p4;

assign zext_ln3556_4_fu_4408_p1 = lshr_ln3556_4_fu_4398_p4;

assign zext_ln3556_5_fu_4433_p1 = lshr_ln3556_5_fu_4423_p4;

assign zext_ln3556_6_fu_4458_p1 = lshr_ln3556_6_fu_4448_p4;

assign zext_ln3556_7_fu_4467_p1 = grp_fu_2689_p4;

assign zext_ln3556_8_fu_5000_p1 = grp_fu_2704_p4;

assign zext_ln3556_9_fu_5009_p1 = grp_fu_2719_p4;

assign zext_ln3556_fu_4324_p1 = lshr_ln5_fu_4314_p4;

always @ (posedge ap_clk) begin
    p_cast33_reg_6374[58] <= 1'b0;
    p_cast_reg_6379[58] <= 1'b0;
    zext_ln3424_11_reg_6609[58:20] <= 39'b000000000000000000000000000000000000000;
    shl_ln2_reg_7214[3:0] <= 4'b0000;
    shl_ln3472_7_reg_7356[0] <= 1'b0;
    zext_ln187_reg_7450[31:3] <= 29'b00000000000000000000000000000;
    zext_ln182_reg_7455[10:2] <= 9'b000000000;
    zext_ln237_reg_7650[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln237_reg_7650_pp6_iter1_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln237_reg_7650_pp6_iter2_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln237_reg_7650_pp6_iter3_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln237_reg_7650_pp6_iter4_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln237_reg_7650_pp6_iter5_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln237_reg_7650_pp6_iter6_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln237_reg_7650_pp6_iter7_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln237_reg_7650_pp6_iter8_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln237_reg_7650_pp6_iter9_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln237_reg_7650_pp6_iter10_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln237_reg_7650_pp6_iter11_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln237_reg_7650_pp6_iter12_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln237_reg_7650_pp6_iter13_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln237_reg_7650_pp6_iter14_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln247_reg_7679[63:17] <= 47'b00000000000000000000000000000000000000000000000;
    zext_ln247_reg_7679_pp7_iter2_reg[63:17] <= 47'b00000000000000000000000000000000000000000000000;
    zext_ln247_reg_7679_pp7_iter3_reg[63:17] <= 47'b00000000000000000000000000000000000000000000000;
    zext_ln247_reg_7679_pp7_iter4_reg[63:17] <= 47'b00000000000000000000000000000000000000000000000;
    zext_ln247_reg_7679_pp7_iter5_reg[63:17] <= 47'b00000000000000000000000000000000000000000000000;
    zext_ln247_reg_7679_pp7_iter6_reg[63:17] <= 47'b00000000000000000000000000000000000000000000000;
    zext_ln247_reg_7679_pp7_iter7_reg[63:17] <= 47'b00000000000000000000000000000000000000000000000;
    zext_ln247_reg_7679_pp7_iter8_reg[63:17] <= 47'b00000000000000000000000000000000000000000000000;
    zext_ln247_reg_7679_pp7_iter9_reg[63:17] <= 47'b00000000000000000000000000000000000000000000000;
    zext_ln247_reg_7679_pp7_iter10_reg[63:17] <= 47'b00000000000000000000000000000000000000000000000;
    gmem_addr_9_reg_7832[63:59] <= 5'b00000;
end

endmodule //gcnconv_kernel_gcnconv_kernel
