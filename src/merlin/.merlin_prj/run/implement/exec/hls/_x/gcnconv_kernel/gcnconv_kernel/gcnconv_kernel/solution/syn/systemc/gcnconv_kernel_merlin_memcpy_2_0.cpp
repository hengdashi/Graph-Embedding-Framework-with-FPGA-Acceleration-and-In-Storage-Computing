// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.op
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "gcnconv_kernel_merlin_memcpy_2_0.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic gcnconv_kernel_merlin_memcpy_2_0::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic gcnconv_kernel_merlin_memcpy_2_0::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> gcnconv_kernel_merlin_memcpy_2_0::ap_ST_fsm_state1 = "1";
const sc_lv<3> gcnconv_kernel_merlin_memcpy_2_0::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> gcnconv_kernel_merlin_memcpy_2_0::ap_ST_fsm_state12 = "100";
const bool gcnconv_kernel_merlin_memcpy_2_0::ap_const_boolean_1 = true;
const sc_lv<32> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<64> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<1> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv1_0 = "0";
const sc_lv<3> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv3_0 = "000";
const sc_lv<2> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv2_0 = "00";
const sc_lv<4> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv4_0 = "0000";
const sc_lv<512> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv512_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv32_1 = "1";
const bool gcnconv_kernel_merlin_memcpy_2_0::ap_const_boolean_0 = false;
const sc_lv<1> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv1_1 = "1";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv17_0 = "00000000000000000";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv17_1A74D = "11010011101001101";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv17_1 = "1";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv32_4 = "100";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv32_10 = "10000";
const sc_lv<5> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv5_0 = "00000";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_2_0::ap_const_lv32_2 = "10";

gcnconv_kernel_merlin_memcpy_2_0::gcnconv_kernel_merlin_memcpy_2_0(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln74_fu_132_p2);
    sensitive << ( zext_ln74_fu_125_p1 );
    sensitive << ( zext_ln74_1_fu_129_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( m_axi_src_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln69_reg_184_pp0_iter7_reg );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( m_axi_src_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln69_reg_184_pp0_iter7_reg );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);
    sensitive << ( m_axi_src_RVALID );
    sensitive << ( icmp_ln69_reg_184_pp0_iter7_reg );

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( m_axi_src_ARREADY );
    sensitive << ( icmp_ln69_reg_184 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln69_fu_103_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_ext_blocking_cur_n);
    sensitive << ( src_blk_n_AR );
    sensitive << ( src_blk_n_R );

    SC_METHOD(thread_ap_ext_blocking_n);
    sensitive << ( ap_ext_blocking_cur_n );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_ap_int_blocking_n);

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_95_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln69_reg_184 );
    sensitive << ( i_0_reg_91 );
    sensitive << ( i_reg_188 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_str_blocking_n);

    SC_METHOD(thread_dst_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( zext_ln69_fu_148_p1 );

    SC_METHOD(thread_dst_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_dst_d0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( lshr_ln74_fu_169_p2 );

    SC_METHOD(thread_dst_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln69_reg_184_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_empty_fu_165_p1);
    sensitive << ( tmp_6_fu_157_p3 );

    SC_METHOD(thread_i_fu_109_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_95_p4 );

    SC_METHOD(thread_icmp_ln69_fu_103_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_95_p4 );

    SC_METHOD(thread_lshr_ln74_fu_169_p2);
    sensitive << ( src_addr_read_reg_204 );
    sensitive << ( empty_fu_165_p1 );

    SC_METHOD(thread_m_axi_src_ARADDR);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln69_reg_184 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( zext_ln74_2_fu_138_p1 );

    SC_METHOD(thread_m_axi_src_ARBURST);

    SC_METHOD(thread_m_axi_src_ARCACHE);

    SC_METHOD(thread_m_axi_src_ARID);

    SC_METHOD(thread_m_axi_src_ARLEN);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln69_reg_184 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_src_ARLOCK);

    SC_METHOD(thread_m_axi_src_ARPROT);

    SC_METHOD(thread_m_axi_src_ARQOS);

    SC_METHOD(thread_m_axi_src_ARREGION);

    SC_METHOD(thread_m_axi_src_ARSIZE);

    SC_METHOD(thread_m_axi_src_ARUSER);

    SC_METHOD(thread_m_axi_src_ARVALID);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln69_reg_184 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_src_AWADDR);

    SC_METHOD(thread_m_axi_src_AWBURST);

    SC_METHOD(thread_m_axi_src_AWCACHE);

    SC_METHOD(thread_m_axi_src_AWID);

    SC_METHOD(thread_m_axi_src_AWLEN);

    SC_METHOD(thread_m_axi_src_AWLOCK);

    SC_METHOD(thread_m_axi_src_AWPROT);

    SC_METHOD(thread_m_axi_src_AWQOS);

    SC_METHOD(thread_m_axi_src_AWREGION);

    SC_METHOD(thread_m_axi_src_AWSIZE);

    SC_METHOD(thread_m_axi_src_AWUSER);

    SC_METHOD(thread_m_axi_src_AWVALID);

    SC_METHOD(thread_m_axi_src_BREADY);

    SC_METHOD(thread_m_axi_src_RREADY);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln69_reg_184_pp0_iter7_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_src_WDATA);

    SC_METHOD(thread_m_axi_src_WID);

    SC_METHOD(thread_m_axi_src_WLAST);

    SC_METHOD(thread_m_axi_src_WSTRB);

    SC_METHOD(thread_m_axi_src_WUSER);

    SC_METHOD(thread_m_axi_src_WVALID);

    SC_METHOD(thread_src_blk_n_AR);
    sensitive << ( m_axi_src_ARREADY );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln69_reg_184 );

    SC_METHOD(thread_src_blk_n_R);
    sensitive << ( m_axi_src_RVALID );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln69_reg_184_pp0_iter7_reg );

    SC_METHOD(thread_tmp_5_fu_115_p4);
    sensitive << ( ap_phi_mux_i_0_phi_fu_95_p4 );

    SC_METHOD(thread_tmp_6_fu_157_p3);
    sensitive << ( trunc_ln74_fu_153_p1 );

    SC_METHOD(thread_trunc_ln74_fu_153_p1);
    sensitive << ( i_0_reg_91_pp0_iter8_reg );

    SC_METHOD(thread_zext_ln69_fu_148_p1);
    sensitive << ( i_0_reg_91_pp0_iter8_reg );

    SC_METHOD(thread_zext_ln74_1_fu_129_p1);
    sensitive << ( src_offset );

    SC_METHOD(thread_zext_ln74_2_fu_138_p1);
    sensitive << ( add_ln74_reg_193 );

    SC_METHOD(thread_zext_ln74_fu_125_p1);
    sensitive << ( tmp_5_fu_115_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln69_fu_103_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "gcnconv_kernel_merlin_memcpy_2_0_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, dst_address0, "(port)dst_address0");
    sc_trace(mVcdFile, dst_ce0, "(port)dst_ce0");
    sc_trace(mVcdFile, dst_we0, "(port)dst_we0");
    sc_trace(mVcdFile, dst_d0, "(port)dst_d0");
    sc_trace(mVcdFile, m_axi_src_AWVALID, "(port)m_axi_src_AWVALID");
    sc_trace(mVcdFile, m_axi_src_AWREADY, "(port)m_axi_src_AWREADY");
    sc_trace(mVcdFile, m_axi_src_AWADDR, "(port)m_axi_src_AWADDR");
    sc_trace(mVcdFile, m_axi_src_AWID, "(port)m_axi_src_AWID");
    sc_trace(mVcdFile, m_axi_src_AWLEN, "(port)m_axi_src_AWLEN");
    sc_trace(mVcdFile, m_axi_src_AWSIZE, "(port)m_axi_src_AWSIZE");
    sc_trace(mVcdFile, m_axi_src_AWBURST, "(port)m_axi_src_AWBURST");
    sc_trace(mVcdFile, m_axi_src_AWLOCK, "(port)m_axi_src_AWLOCK");
    sc_trace(mVcdFile, m_axi_src_AWCACHE, "(port)m_axi_src_AWCACHE");
    sc_trace(mVcdFile, m_axi_src_AWPROT, "(port)m_axi_src_AWPROT");
    sc_trace(mVcdFile, m_axi_src_AWQOS, "(port)m_axi_src_AWQOS");
    sc_trace(mVcdFile, m_axi_src_AWREGION, "(port)m_axi_src_AWREGION");
    sc_trace(mVcdFile, m_axi_src_AWUSER, "(port)m_axi_src_AWUSER");
    sc_trace(mVcdFile, m_axi_src_WVALID, "(port)m_axi_src_WVALID");
    sc_trace(mVcdFile, m_axi_src_WREADY, "(port)m_axi_src_WREADY");
    sc_trace(mVcdFile, m_axi_src_WDATA, "(port)m_axi_src_WDATA");
    sc_trace(mVcdFile, m_axi_src_WSTRB, "(port)m_axi_src_WSTRB");
    sc_trace(mVcdFile, m_axi_src_WLAST, "(port)m_axi_src_WLAST");
    sc_trace(mVcdFile, m_axi_src_WID, "(port)m_axi_src_WID");
    sc_trace(mVcdFile, m_axi_src_WUSER, "(port)m_axi_src_WUSER");
    sc_trace(mVcdFile, m_axi_src_ARVALID, "(port)m_axi_src_ARVALID");
    sc_trace(mVcdFile, m_axi_src_ARREADY, "(port)m_axi_src_ARREADY");
    sc_trace(mVcdFile, m_axi_src_ARADDR, "(port)m_axi_src_ARADDR");
    sc_trace(mVcdFile, m_axi_src_ARID, "(port)m_axi_src_ARID");
    sc_trace(mVcdFile, m_axi_src_ARLEN, "(port)m_axi_src_ARLEN");
    sc_trace(mVcdFile, m_axi_src_ARSIZE, "(port)m_axi_src_ARSIZE");
    sc_trace(mVcdFile, m_axi_src_ARBURST, "(port)m_axi_src_ARBURST");
    sc_trace(mVcdFile, m_axi_src_ARLOCK, "(port)m_axi_src_ARLOCK");
    sc_trace(mVcdFile, m_axi_src_ARCACHE, "(port)m_axi_src_ARCACHE");
    sc_trace(mVcdFile, m_axi_src_ARPROT, "(port)m_axi_src_ARPROT");
    sc_trace(mVcdFile, m_axi_src_ARQOS, "(port)m_axi_src_ARQOS");
    sc_trace(mVcdFile, m_axi_src_ARREGION, "(port)m_axi_src_ARREGION");
    sc_trace(mVcdFile, m_axi_src_ARUSER, "(port)m_axi_src_ARUSER");
    sc_trace(mVcdFile, m_axi_src_RVALID, "(port)m_axi_src_RVALID");
    sc_trace(mVcdFile, m_axi_src_RREADY, "(port)m_axi_src_RREADY");
    sc_trace(mVcdFile, m_axi_src_RDATA, "(port)m_axi_src_RDATA");
    sc_trace(mVcdFile, m_axi_src_RLAST, "(port)m_axi_src_RLAST");
    sc_trace(mVcdFile, m_axi_src_RID, "(port)m_axi_src_RID");
    sc_trace(mVcdFile, m_axi_src_RUSER, "(port)m_axi_src_RUSER");
    sc_trace(mVcdFile, m_axi_src_RRESP, "(port)m_axi_src_RRESP");
    sc_trace(mVcdFile, m_axi_src_BVALID, "(port)m_axi_src_BVALID");
    sc_trace(mVcdFile, m_axi_src_BREADY, "(port)m_axi_src_BREADY");
    sc_trace(mVcdFile, m_axi_src_BRESP, "(port)m_axi_src_BRESP");
    sc_trace(mVcdFile, m_axi_src_BID, "(port)m_axi_src_BID");
    sc_trace(mVcdFile, m_axi_src_BUSER, "(port)m_axi_src_BUSER");
    sc_trace(mVcdFile, src_offset, "(port)src_offset");
    sc_trace(mVcdFile, ap_ext_blocking_n, "(port)ap_ext_blocking_n");
    sc_trace(mVcdFile, ap_str_blocking_n, "(port)ap_str_blocking_n");
    sc_trace(mVcdFile, ap_int_blocking_n, "(port)ap_int_blocking_n");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, src_blk_n_AR, "src_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln69_reg_184, "icmp_ln69_reg_184");
    sc_trace(mVcdFile, src_blk_n_R, "src_blk_n_R");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, icmp_ln69_reg_184_pp0_iter7_reg, "icmp_ln69_reg_184_pp0_iter7_reg");
    sc_trace(mVcdFile, i_0_reg_91, "i_0_reg_91");
    sc_trace(mVcdFile, i_0_reg_91_pp0_iter1_reg, "i_0_reg_91_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_0_reg_91_pp0_iter2_reg, "i_0_reg_91_pp0_iter2_reg");
    sc_trace(mVcdFile, i_0_reg_91_pp0_iter3_reg, "i_0_reg_91_pp0_iter3_reg");
    sc_trace(mVcdFile, i_0_reg_91_pp0_iter4_reg, "i_0_reg_91_pp0_iter4_reg");
    sc_trace(mVcdFile, i_0_reg_91_pp0_iter5_reg, "i_0_reg_91_pp0_iter5_reg");
    sc_trace(mVcdFile, i_0_reg_91_pp0_iter6_reg, "i_0_reg_91_pp0_iter6_reg");
    sc_trace(mVcdFile, i_0_reg_91_pp0_iter7_reg, "i_0_reg_91_pp0_iter7_reg");
    sc_trace(mVcdFile, i_0_reg_91_pp0_iter8_reg, "i_0_reg_91_pp0_iter8_reg");
    sc_trace(mVcdFile, icmp_ln69_fu_103_p2, "icmp_ln69_fu_103_p2");
    sc_trace(mVcdFile, icmp_ln69_reg_184_pp0_iter1_reg, "icmp_ln69_reg_184_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln69_reg_184_pp0_iter2_reg, "icmp_ln69_reg_184_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln69_reg_184_pp0_iter3_reg, "icmp_ln69_reg_184_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln69_reg_184_pp0_iter4_reg, "icmp_ln69_reg_184_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln69_reg_184_pp0_iter5_reg, "icmp_ln69_reg_184_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln69_reg_184_pp0_iter6_reg, "icmp_ln69_reg_184_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln69_reg_184_pp0_iter8_reg, "icmp_ln69_reg_184_pp0_iter8_reg");
    sc_trace(mVcdFile, i_fu_109_p2, "i_fu_109_p2");
    sc_trace(mVcdFile, i_reg_188, "i_reg_188");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, add_ln74_fu_132_p2, "add_ln74_fu_132_p2");
    sc_trace(mVcdFile, add_ln74_reg_193, "add_ln74_reg_193");
    sc_trace(mVcdFile, src_addr_read_reg_204, "src_addr_read_reg_204");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_95_p4, "ap_phi_mux_i_0_phi_fu_95_p4");
    sc_trace(mVcdFile, zext_ln69_fu_148_p1, "zext_ln69_fu_148_p1");
    sc_trace(mVcdFile, zext_ln74_2_fu_138_p1, "zext_ln74_2_fu_138_p1");
    sc_trace(mVcdFile, tmp_5_fu_115_p4, "tmp_5_fu_115_p4");
    sc_trace(mVcdFile, zext_ln74_fu_125_p1, "zext_ln74_fu_125_p1");
    sc_trace(mVcdFile, zext_ln74_1_fu_129_p1, "zext_ln74_1_fu_129_p1");
    sc_trace(mVcdFile, trunc_ln74_fu_153_p1, "trunc_ln74_fu_153_p1");
    sc_trace(mVcdFile, tmp_6_fu_157_p3, "tmp_6_fu_157_p3");
    sc_trace(mVcdFile, empty_fu_165_p1, "empty_fu_165_p1");
    sc_trace(mVcdFile, lshr_ln74_fu_169_p2, "lshr_ln74_fu_169_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_ext_blocking_cur_n, "ap_ext_blocking_cur_n");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

gcnconv_kernel_merlin_memcpy_2_0::~gcnconv_kernel_merlin_memcpy_2_0() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter9 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln69_reg_184.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_0_reg_91 = i_reg_188.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_91 = ap_const_lv17_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln69_fu_103_p2.read()))) {
        add_ln74_reg_193 = add_ln74_fu_132_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_0_reg_91_pp0_iter1_reg = i_0_reg_91.read();
        icmp_ln69_reg_184 = icmp_ln69_fu_103_p2.read();
        icmp_ln69_reg_184_pp0_iter1_reg = icmp_ln69_reg_184.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        i_0_reg_91_pp0_iter2_reg = i_0_reg_91_pp0_iter1_reg.read();
        i_0_reg_91_pp0_iter3_reg = i_0_reg_91_pp0_iter2_reg.read();
        i_0_reg_91_pp0_iter4_reg = i_0_reg_91_pp0_iter3_reg.read();
        i_0_reg_91_pp0_iter5_reg = i_0_reg_91_pp0_iter4_reg.read();
        i_0_reg_91_pp0_iter6_reg = i_0_reg_91_pp0_iter5_reg.read();
        i_0_reg_91_pp0_iter7_reg = i_0_reg_91_pp0_iter6_reg.read();
        i_0_reg_91_pp0_iter8_reg = i_0_reg_91_pp0_iter7_reg.read();
        icmp_ln69_reg_184_pp0_iter2_reg = icmp_ln69_reg_184_pp0_iter1_reg.read();
        icmp_ln69_reg_184_pp0_iter3_reg = icmp_ln69_reg_184_pp0_iter2_reg.read();
        icmp_ln69_reg_184_pp0_iter4_reg = icmp_ln69_reg_184_pp0_iter3_reg.read();
        icmp_ln69_reg_184_pp0_iter5_reg = icmp_ln69_reg_184_pp0_iter4_reg.read();
        icmp_ln69_reg_184_pp0_iter6_reg = icmp_ln69_reg_184_pp0_iter5_reg.read();
        icmp_ln69_reg_184_pp0_iter7_reg = icmp_ln69_reg_184_pp0_iter6_reg.read();
        icmp_ln69_reg_184_pp0_iter8_reg = icmp_ln69_reg_184_pp0_iter7_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_reg_188 = i_fu_109_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln69_reg_184_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_addr_read_reg_204 = m_axi_src_RDATA.read();
    }
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_add_ln74_fu_132_p2() {
    add_ln74_fu_132_p2 = (!zext_ln74_fu_125_p1.read().is_01() || !zext_ln74_1_fu_129_p1.read().is_01())? sc_lv<59>(): (sc_biguint<59>(zext_ln74_fu_125_p1.read()) + sc_biguint<59>(zext_ln74_1_fu_129_p1.read()));
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[2];
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln69_reg_184_pp0_iter7_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_src_RVALID.read())));
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln69_reg_184_pp0_iter7_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_src_RVALID.read())));
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln69_reg_184_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_src_RVALID.read()));
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_block_state3_io() {
    ap_block_state3_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln69_reg_184.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_src_ARREADY.read()));
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln69_fu_103_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_ext_blocking_cur_n() {
    ap_ext_blocking_cur_n = (src_blk_n_AR.read() & src_blk_n_R.read());
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_ext_blocking_n() {
    ap_ext_blocking_n = (ap_ext_blocking_cur_n.read() & ap_const_logic_1);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_int_blocking_n() {
    ap_int_blocking_n = (ap_const_logic_1 & ap_const_logic_1);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_phi_mux_i_0_phi_fu_95_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln69_reg_184.read()))) {
        ap_phi_mux_i_0_phi_fu_95_p4 = i_reg_188.read();
    } else {
        ap_phi_mux_i_0_phi_fu_95_p4 = i_0_reg_91.read();
    }
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_str_blocking_n() {
    ap_str_blocking_n = (ap_const_logic_1 & ap_const_logic_1);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_dst_address0() {
    dst_address0 =  (sc_lv<17>) (zext_ln69_fu_148_p1.read());
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_dst_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        dst_ce0 = ap_const_logic_1;
    } else {
        dst_ce0 = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_dst_d0() {
    dst_d0 = lshr_ln74_fu_169_p2.read().range(32-1, 0);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_dst_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln69_reg_184_pp0_iter8_reg.read()))) {
        dst_we0 = ap_const_logic_1;
    } else {
        dst_we0 = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_empty_fu_165_p1() {
    empty_fu_165_p1 = esl_zext<512,9>(tmp_6_fu_157_p3.read());
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_i_fu_109_p2() {
    i_fu_109_p2 = (!ap_phi_mux_i_0_phi_fu_95_p4.read().is_01() || !ap_const_lv17_1.is_01())? sc_lv<17>(): (sc_biguint<17>(ap_phi_mux_i_0_phi_fu_95_p4.read()) + sc_biguint<17>(ap_const_lv17_1));
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_icmp_ln69_fu_103_p2() {
    icmp_ln69_fu_103_p2 = (!ap_phi_mux_i_0_phi_fu_95_p4.read().is_01() || !ap_const_lv17_1A74D.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_95_p4.read() == ap_const_lv17_1A74D);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_lshr_ln74_fu_169_p2() {
    lshr_ln74_fu_169_p2 = (!empty_fu_165_p1.read().is_01())? sc_lv<512>(): src_addr_read_reg_204.read() >> (unsigned short)empty_fu_165_p1.read().to_uint();
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_ARADDR() {
    m_axi_src_ARADDR = zext_ln74_2_fu_138_p1.read();
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_ARBURST() {
    m_axi_src_ARBURST = ap_const_lv2_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_ARCACHE() {
    m_axi_src_ARCACHE = ap_const_lv4_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_ARID() {
    m_axi_src_ARID = ap_const_lv1_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_ARLEN() {
    m_axi_src_ARLEN = ap_const_lv32_1;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_ARLOCK() {
    m_axi_src_ARLOCK = ap_const_lv2_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_ARPROT() {
    m_axi_src_ARPROT = ap_const_lv3_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_ARQOS() {
    m_axi_src_ARQOS = ap_const_lv4_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_ARREGION() {
    m_axi_src_ARREGION = ap_const_lv4_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_ARSIZE() {
    m_axi_src_ARSIZE = ap_const_lv3_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_ARUSER() {
    m_axi_src_ARUSER = ap_const_lv1_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln69_reg_184.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_src_ARVALID = ap_const_logic_1;
    } else {
        m_axi_src_ARVALID = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_AWADDR() {
    m_axi_src_AWADDR = ap_const_lv64_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_AWBURST() {
    m_axi_src_AWBURST = ap_const_lv2_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_AWCACHE() {
    m_axi_src_AWCACHE = ap_const_lv4_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_AWID() {
    m_axi_src_AWID = ap_const_lv1_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_AWLEN() {
    m_axi_src_AWLEN = ap_const_lv32_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_AWLOCK() {
    m_axi_src_AWLOCK = ap_const_lv2_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_AWPROT() {
    m_axi_src_AWPROT = ap_const_lv3_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_AWQOS() {
    m_axi_src_AWQOS = ap_const_lv4_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_AWREGION() {
    m_axi_src_AWREGION = ap_const_lv4_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_AWSIZE() {
    m_axi_src_AWSIZE = ap_const_lv3_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_AWUSER() {
    m_axi_src_AWUSER = ap_const_lv1_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_AWVALID() {
    m_axi_src_AWVALID = ap_const_logic_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_BREADY() {
    m_axi_src_BREADY = ap_const_logic_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln69_reg_184_pp0_iter7_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_src_RREADY = ap_const_logic_1;
    } else {
        m_axi_src_RREADY = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_WDATA() {
    m_axi_src_WDATA = ap_const_lv512_lc_1;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_WID() {
    m_axi_src_WID = ap_const_lv1_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_WLAST() {
    m_axi_src_WLAST = ap_const_logic_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_WSTRB() {
    m_axi_src_WSTRB = ap_const_lv64_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_WUSER() {
    m_axi_src_WUSER = ap_const_lv1_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_m_axi_src_WVALID() {
    m_axi_src_WVALID = ap_const_logic_0;
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_src_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln69_reg_184.read()))) {
        src_blk_n_AR = m_axi_src_ARREADY.read();
    } else {
        src_blk_n_AR = ap_const_logic_1;
    }
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_src_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln69_reg_184_pp0_iter7_reg.read()))) {
        src_blk_n_R = m_axi_src_RVALID.read();
    } else {
        src_blk_n_R = ap_const_logic_1;
    }
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_tmp_5_fu_115_p4() {
    tmp_5_fu_115_p4 = ap_phi_mux_i_0_phi_fu_95_p4.read().range(16, 4);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_tmp_6_fu_157_p3() {
    tmp_6_fu_157_p3 = esl_concat<4,5>(trunc_ln74_fu_153_p1.read(), ap_const_lv5_0);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_trunc_ln74_fu_153_p1() {
    trunc_ln74_fu_153_p1 = i_0_reg_91_pp0_iter8_reg.read().range(4-1, 0);
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_zext_ln69_fu_148_p1() {
    zext_ln69_fu_148_p1 = esl_zext<64,17>(i_0_reg_91_pp0_iter8_reg.read());
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_zext_ln74_1_fu_129_p1() {
    zext_ln74_1_fu_129_p1 = esl_zext<59,58>(src_offset.read());
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_zext_ln74_2_fu_138_p1() {
    zext_ln74_2_fu_138_p1 = esl_zext<64,59>(add_ln74_reg_193.read());
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_zext_ln74_fu_125_p1() {
    zext_ln74_fu_125_p1 = esl_zext<59,13>(tmp_5_fu_115_p4.read());
}

void gcnconv_kernel_merlin_memcpy_2_0::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter8.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln69_fu_103_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter8.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln69_fu_103_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

