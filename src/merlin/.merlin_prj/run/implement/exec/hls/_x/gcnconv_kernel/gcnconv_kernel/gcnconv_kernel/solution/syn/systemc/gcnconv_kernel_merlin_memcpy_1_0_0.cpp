// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.op
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "gcnconv_kernel_merlin_memcpy_1_0_0.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_state1 = "1";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_pp0_stage6 = "10000000";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_pp0_stage7 = "100000000";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_pp0_stage8 = "1000000000";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_pp0_stage9 = "10000000000";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_pp0_stage10 = "100000000000";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_pp0_stage11 = "1000000000000";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_pp0_stage12 = "10000000000000";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_pp0_stage13 = "100000000000000";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_pp0_stage14 = "1000000000000000";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_ST_fsm_state18 = "10000000000000000";
const bool gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_boolean_1 = true;
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_2 = "10";
const bool gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_boolean_0 = false;
const sc_lv<1> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv1_0 = "0";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_9 = "1001";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_A = "1010";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_B = "1011";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_1 = "1";
const sc_lv<1> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv1_1 = "1";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_F = "1111";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv17_0 = "00000000000000000";
const sc_lv<3> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv3_0 = "000";
const sc_lv<2> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv2_0 = "00";
const sc_lv<4> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv4_0 = "0000";
const sc_lv<64> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv64_FFFFFFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv17_1F452 = "11111010001010010";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv17_1 = "1";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv17_1A74D = "11010011101001101";
const sc_lv<17> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv17_58B3 = "101100010110011";
const sc_lv<18> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv18_0 = "000000000000000000";
const sc_lv<18> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv18_1A74D = "11010011101001101";
const sc_lv<18> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv18_15A48 = "10101101001001000";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_4 = "100";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_11 = "10001";
const sc_lv<5> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv5_0 = "00000";
const sc_lv<512> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv512_lc_2 = "11111111111111111111111111111111";
const sc_lv<512> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv512_lc_3 = "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_10 = "10000";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_3 = "11";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_5 = "101";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_6 = "110";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_7 = "111";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_8 = "1000";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_C = "1100";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_D = "1101";
const sc_lv<32> gcnconv_kernel_merlin_memcpy_1_0_0::ap_const_lv32_E = "1110";

gcnconv_kernel_merlin_memcpy_1_0_0::gcnconv_kernel_merlin_memcpy_1_0_0(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln55_1_fu_158_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_129_p4 );

    SC_METHOD(thread_add_ln55_2_fu_184_p2);
    sensitive << ( select_ln55_1_fu_176_p3 );
    sensitive << ( zext_ln55_fu_172_p1 );

    SC_METHOD(thread_add_ln55_3_fu_218_p2);
    sensitive << ( zext_ln55_2_fu_211_p1 );
    sensitive << ( zext_ln55_3_fu_215_p1 );

    SC_METHOD(thread_add_ln55_fu_195_p2);
    sensitive << ( zext_ln50_fu_148_p1 );

    SC_METHOD(thread_and_ln55_fu_261_p2);
    sensitive << ( dst_addr_read_reg_322 );
    sensitive << ( xor_ln55_fu_255_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( m_axi_dst_BVALID );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( m_axi_dst_BVALID );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage10);

    SC_METHOD(thread_ap_block_pp0_stage10_01001);

    SC_METHOD(thread_ap_block_pp0_stage10_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_state12_io );

    SC_METHOD(thread_ap_block_pp0_stage10_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_state12_io );

    SC_METHOD(thread_ap_block_pp0_stage11_subdone);

    SC_METHOD(thread_ap_block_pp0_stage12_subdone);

    SC_METHOD(thread_ap_block_pp0_stage13_subdone);

    SC_METHOD(thread_ap_block_pp0_stage14_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_pp0_stage5_subdone);

    SC_METHOD(thread_ap_block_pp0_stage6_subdone);

    SC_METHOD(thread_ap_block_pp0_stage7_subdone);

    SC_METHOD(thread_ap_block_pp0_stage8);

    SC_METHOD(thread_ap_block_pp0_stage8_11001);
    sensitive << ( m_axi_dst_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_reg_286 );

    SC_METHOD(thread_ap_block_pp0_stage8_subdone);
    sensitive << ( m_axi_dst_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_reg_286 );

    SC_METHOD(thread_ap_block_pp0_stage9);

    SC_METHOD(thread_ap_block_pp0_stage9_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_state11_io );

    SC_METHOD(thread_ap_block_pp0_stage9_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_state11_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage8_iter0);
    sensitive << ( m_axi_dst_RVALID );
    sensitive << ( icmp_ln50_reg_286 );

    SC_METHOD(thread_ap_block_state11_io);
    sensitive << ( m_axi_dst_AWREADY );
    sensitive << ( icmp_ln50_reg_286 );

    SC_METHOD(thread_ap_block_state11_pp0_stage9_iter0);

    SC_METHOD(thread_ap_block_state12_io);
    sensitive << ( m_axi_dst_WREADY );
    sensitive << ( icmp_ln50_reg_286 );

    SC_METHOD(thread_ap_block_state12_pp0_stage10_iter0);

    SC_METHOD(thread_ap_block_state13_pp0_stage11_iter0);

    SC_METHOD(thread_ap_block_state14_pp0_stage12_iter0);

    SC_METHOD(thread_ap_block_state15_pp0_stage13_iter0);

    SC_METHOD(thread_ap_block_state16_pp0_stage14_iter0);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter1);
    sensitive << ( m_axi_dst_BVALID );
    sensitive << ( icmp_ln50_reg_286 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( m_axi_dst_ARREADY );
    sensitive << ( icmp_ln50_reg_286 );

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage5_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage7_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln50_fu_136_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_ext_blocking_cur_n);
    sensitive << ( dst_blk_n_AR );
    sensitive << ( dst_blk_n_R );
    sensitive << ( dst_blk_n_AW );
    sensitive << ( dst_blk_n_W );
    sensitive << ( dst_blk_n_B );

    SC_METHOD(thread_ap_ext_blocking_n);
    sensitive << ( ap_ext_blocking_cur_n );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_int_blocking_n);

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_129_p4);
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( i_0_reg_125 );
    sensitive << ( i_reg_290 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_ap_str_blocking_n);

    SC_METHOD(thread_dst_blk_n_AR);
    sensitive << ( m_axi_dst_ARREADY );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( icmp_ln50_reg_286 );

    SC_METHOD(thread_dst_blk_n_AW);
    sensitive << ( m_axi_dst_AWREADY );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9 );

    SC_METHOD(thread_dst_blk_n_B);
    sensitive << ( m_axi_dst_BVALID );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_dst_blk_n_R);
    sensitive << ( m_axi_dst_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8 );

    SC_METHOD(thread_dst_blk_n_W);
    sensitive << ( m_axi_dst_WREADY );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10 );

    SC_METHOD(thread_empty_fu_224_p1);
    sensitive << ( add_ln55_fu_195_p2 );

    SC_METHOD(thread_i_fu_142_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_129_p4 );

    SC_METHOD(thread_icmp_ln50_fu_136_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_129_p4 );

    SC_METHOD(thread_icmp_ln55_fu_152_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln50_fu_136_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_129_p4 );

    SC_METHOD(thread_m_axi_dst_ARADDR);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( zext_ln55_4_fu_228_p1 );

    SC_METHOD(thread_m_axi_dst_ARBURST);

    SC_METHOD(thread_m_axi_dst_ARCACHE);

    SC_METHOD(thread_m_axi_dst_ARID);

    SC_METHOD(thread_m_axi_dst_ARLEN);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_m_axi_dst_ARLOCK);

    SC_METHOD(thread_m_axi_dst_ARPROT);

    SC_METHOD(thread_m_axi_dst_ARQOS);

    SC_METHOD(thread_m_axi_dst_ARREGION);

    SC_METHOD(thread_m_axi_dst_ARSIZE);

    SC_METHOD(thread_m_axi_dst_ARUSER);

    SC_METHOD(thread_m_axi_dst_ARVALID);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_m_axi_dst_AWADDR);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( dst_addr_reg_315 );
    sensitive << ( ap_block_pp0_stage9_11001 );

    SC_METHOD(thread_m_axi_dst_AWBURST);

    SC_METHOD(thread_m_axi_dst_AWCACHE);

    SC_METHOD(thread_m_axi_dst_AWID);

    SC_METHOD(thread_m_axi_dst_AWLEN);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );

    SC_METHOD(thread_m_axi_dst_AWLOCK);

    SC_METHOD(thread_m_axi_dst_AWPROT);

    SC_METHOD(thread_m_axi_dst_AWQOS);

    SC_METHOD(thread_m_axi_dst_AWREGION);

    SC_METHOD(thread_m_axi_dst_AWSIZE);

    SC_METHOD(thread_m_axi_dst_AWUSER);

    SC_METHOD(thread_m_axi_dst_AWVALID);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );

    SC_METHOD(thread_m_axi_dst_BREADY);
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_dst_RREADY);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );

    SC_METHOD(thread_m_axi_dst_WDATA);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( or_ln55_reg_327 );
    sensitive << ( ap_block_pp0_stage10_01001 );

    SC_METHOD(thread_m_axi_dst_WID);

    SC_METHOD(thread_m_axi_dst_WLAST);

    SC_METHOD(thread_m_axi_dst_WSTRB);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10_01001 );

    SC_METHOD(thread_m_axi_dst_WUSER);

    SC_METHOD(thread_m_axi_dst_WVALID);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_reg_286 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10_11001 );

    SC_METHOD(thread_or_ln55_fu_275_p2);
    sensitive << ( and_ln55_fu_261_p2 );
    sensitive << ( shl_ln55_1_fu_269_p2 );

    SC_METHOD(thread_select_ln55_1_fu_176_p3);
    sensitive << ( icmp_ln55_fu_152_p2 );

    SC_METHOD(thread_select_ln55_fu_164_p3);
    sensitive << ( ap_phi_mux_i_0_phi_fu_129_p4 );
    sensitive << ( icmp_ln55_fu_152_p2 );
    sensitive << ( add_ln55_1_fu_158_p2 );

    SC_METHOD(thread_shl_ln55_1_fu_269_p2);
    sensitive << ( zext_ln55_5_fu_245_p1 );
    sensitive << ( zext_ln55_6_fu_266_p1 );

    SC_METHOD(thread_shl_ln55_fu_249_p2);
    sensitive << ( zext_ln55_5_fu_245_p1 );

    SC_METHOD(thread_src_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln55_1_fu_190_p1 );

    SC_METHOD(thread_src_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_7_fu_201_p4);
    sensitive << ( add_ln55_fu_195_p2 );

    SC_METHOD(thread_tmp_8_fu_238_p3);
    sensitive << ( empty_reg_305 );

    SC_METHOD(thread_xor_ln55_fu_255_p2);
    sensitive << ( shl_ln55_fu_249_p2 );

    SC_METHOD(thread_zext_ln50_fu_148_p1);
    sensitive << ( ap_phi_mux_i_0_phi_fu_129_p4 );

    SC_METHOD(thread_zext_ln55_1_fu_190_p1);
    sensitive << ( add_ln55_2_fu_184_p2 );

    SC_METHOD(thread_zext_ln55_2_fu_211_p1);
    sensitive << ( tmp_7_fu_201_p4 );

    SC_METHOD(thread_zext_ln55_3_fu_215_p1);
    sensitive << ( dst_offset );

    SC_METHOD(thread_zext_ln55_4_fu_228_p1);
    sensitive << ( add_ln55_3_reg_300 );

    SC_METHOD(thread_zext_ln55_5_fu_245_p1);
    sensitive << ( tmp_8_fu_238_p3 );

    SC_METHOD(thread_zext_ln55_6_fu_266_p1);
    sensitive << ( src_load_reg_310 );

    SC_METHOD(thread_zext_ln55_fu_172_p1);
    sensitive << ( select_ln55_fu_164_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln50_fu_136_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage14_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage5_subdone );
    sensitive << ( ap_block_pp0_stage6_subdone );
    sensitive << ( ap_block_pp0_stage7_subdone );
    sensitive << ( ap_block_pp0_stage8_subdone );
    sensitive << ( ap_block_pp0_stage9_subdone );
    sensitive << ( ap_block_pp0_stage10_subdone );
    sensitive << ( ap_block_pp0_stage11_subdone );
    sensitive << ( ap_block_pp0_stage12_subdone );
    sensitive << ( ap_block_pp0_stage13_subdone );

    ap_CS_fsm = "00000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "gcnconv_kernel_merlin_memcpy_1_0_0_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_dst_AWVALID, "(port)m_axi_dst_AWVALID");
    sc_trace(mVcdFile, m_axi_dst_AWREADY, "(port)m_axi_dst_AWREADY");
    sc_trace(mVcdFile, m_axi_dst_AWADDR, "(port)m_axi_dst_AWADDR");
    sc_trace(mVcdFile, m_axi_dst_AWID, "(port)m_axi_dst_AWID");
    sc_trace(mVcdFile, m_axi_dst_AWLEN, "(port)m_axi_dst_AWLEN");
    sc_trace(mVcdFile, m_axi_dst_AWSIZE, "(port)m_axi_dst_AWSIZE");
    sc_trace(mVcdFile, m_axi_dst_AWBURST, "(port)m_axi_dst_AWBURST");
    sc_trace(mVcdFile, m_axi_dst_AWLOCK, "(port)m_axi_dst_AWLOCK");
    sc_trace(mVcdFile, m_axi_dst_AWCACHE, "(port)m_axi_dst_AWCACHE");
    sc_trace(mVcdFile, m_axi_dst_AWPROT, "(port)m_axi_dst_AWPROT");
    sc_trace(mVcdFile, m_axi_dst_AWQOS, "(port)m_axi_dst_AWQOS");
    sc_trace(mVcdFile, m_axi_dst_AWREGION, "(port)m_axi_dst_AWREGION");
    sc_trace(mVcdFile, m_axi_dst_AWUSER, "(port)m_axi_dst_AWUSER");
    sc_trace(mVcdFile, m_axi_dst_WVALID, "(port)m_axi_dst_WVALID");
    sc_trace(mVcdFile, m_axi_dst_WREADY, "(port)m_axi_dst_WREADY");
    sc_trace(mVcdFile, m_axi_dst_WDATA, "(port)m_axi_dst_WDATA");
    sc_trace(mVcdFile, m_axi_dst_WSTRB, "(port)m_axi_dst_WSTRB");
    sc_trace(mVcdFile, m_axi_dst_WLAST, "(port)m_axi_dst_WLAST");
    sc_trace(mVcdFile, m_axi_dst_WID, "(port)m_axi_dst_WID");
    sc_trace(mVcdFile, m_axi_dst_WUSER, "(port)m_axi_dst_WUSER");
    sc_trace(mVcdFile, m_axi_dst_ARVALID, "(port)m_axi_dst_ARVALID");
    sc_trace(mVcdFile, m_axi_dst_ARREADY, "(port)m_axi_dst_ARREADY");
    sc_trace(mVcdFile, m_axi_dst_ARADDR, "(port)m_axi_dst_ARADDR");
    sc_trace(mVcdFile, m_axi_dst_ARID, "(port)m_axi_dst_ARID");
    sc_trace(mVcdFile, m_axi_dst_ARLEN, "(port)m_axi_dst_ARLEN");
    sc_trace(mVcdFile, m_axi_dst_ARSIZE, "(port)m_axi_dst_ARSIZE");
    sc_trace(mVcdFile, m_axi_dst_ARBURST, "(port)m_axi_dst_ARBURST");
    sc_trace(mVcdFile, m_axi_dst_ARLOCK, "(port)m_axi_dst_ARLOCK");
    sc_trace(mVcdFile, m_axi_dst_ARCACHE, "(port)m_axi_dst_ARCACHE");
    sc_trace(mVcdFile, m_axi_dst_ARPROT, "(port)m_axi_dst_ARPROT");
    sc_trace(mVcdFile, m_axi_dst_ARQOS, "(port)m_axi_dst_ARQOS");
    sc_trace(mVcdFile, m_axi_dst_ARREGION, "(port)m_axi_dst_ARREGION");
    sc_trace(mVcdFile, m_axi_dst_ARUSER, "(port)m_axi_dst_ARUSER");
    sc_trace(mVcdFile, m_axi_dst_RVALID, "(port)m_axi_dst_RVALID");
    sc_trace(mVcdFile, m_axi_dst_RREADY, "(port)m_axi_dst_RREADY");
    sc_trace(mVcdFile, m_axi_dst_RDATA, "(port)m_axi_dst_RDATA");
    sc_trace(mVcdFile, m_axi_dst_RLAST, "(port)m_axi_dst_RLAST");
    sc_trace(mVcdFile, m_axi_dst_RID, "(port)m_axi_dst_RID");
    sc_trace(mVcdFile, m_axi_dst_RUSER, "(port)m_axi_dst_RUSER");
    sc_trace(mVcdFile, m_axi_dst_RRESP, "(port)m_axi_dst_RRESP");
    sc_trace(mVcdFile, m_axi_dst_BVALID, "(port)m_axi_dst_BVALID");
    sc_trace(mVcdFile, m_axi_dst_BREADY, "(port)m_axi_dst_BREADY");
    sc_trace(mVcdFile, m_axi_dst_BRESP, "(port)m_axi_dst_BRESP");
    sc_trace(mVcdFile, m_axi_dst_BID, "(port)m_axi_dst_BID");
    sc_trace(mVcdFile, m_axi_dst_BUSER, "(port)m_axi_dst_BUSER");
    sc_trace(mVcdFile, dst_offset, "(port)dst_offset");
    sc_trace(mVcdFile, src_address0, "(port)src_address0");
    sc_trace(mVcdFile, src_ce0, "(port)src_ce0");
    sc_trace(mVcdFile, src_q0, "(port)src_q0");
    sc_trace(mVcdFile, ap_ext_blocking_n, "(port)ap_ext_blocking_n");
    sc_trace(mVcdFile, ap_str_blocking_n, "(port)ap_str_blocking_n");
    sc_trace(mVcdFile, ap_int_blocking_n, "(port)ap_int_blocking_n");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, dst_blk_n_AR, "dst_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, icmp_ln50_reg_286, "icmp_ln50_reg_286");
    sc_trace(mVcdFile, dst_blk_n_R, "dst_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage8, "ap_CS_fsm_pp0_stage8");
    sc_trace(mVcdFile, ap_block_pp0_stage8, "ap_block_pp0_stage8");
    sc_trace(mVcdFile, dst_blk_n_AW, "dst_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage9, "ap_CS_fsm_pp0_stage9");
    sc_trace(mVcdFile, ap_block_pp0_stage9, "ap_block_pp0_stage9");
    sc_trace(mVcdFile, dst_blk_n_W, "dst_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage10, "ap_CS_fsm_pp0_stage10");
    sc_trace(mVcdFile, ap_block_pp0_stage10, "ap_block_pp0_stage10");
    sc_trace(mVcdFile, dst_blk_n_B, "dst_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, i_0_reg_125, "i_0_reg_125");
    sc_trace(mVcdFile, icmp_ln50_fu_136_p2, "icmp_ln50_fu_136_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter1, "ap_block_state17_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_142_p2, "i_fu_142_p2");
    sc_trace(mVcdFile, i_reg_290, "i_reg_290");
    sc_trace(mVcdFile, add_ln55_3_fu_218_p2, "add_ln55_3_fu_218_p2");
    sc_trace(mVcdFile, add_ln55_3_reg_300, "add_ln55_3_reg_300");
    sc_trace(mVcdFile, empty_fu_224_p1, "empty_fu_224_p1");
    sc_trace(mVcdFile, empty_reg_305, "empty_reg_305");
    sc_trace(mVcdFile, src_load_reg_310, "src_load_reg_310");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, dst_addr_reg_315, "dst_addr_reg_315");
    sc_trace(mVcdFile, dst_addr_read_reg_322, "dst_addr_read_reg_322");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage8_iter0, "ap_block_state10_pp0_stage8_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage8_11001, "ap_block_pp0_stage8_11001");
    sc_trace(mVcdFile, or_ln55_fu_275_p2, "or_ln55_fu_275_p2");
    sc_trace(mVcdFile, or_ln55_reg_327, "or_ln55_reg_327");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage9_iter0, "ap_block_state11_pp0_stage9_iter0");
    sc_trace(mVcdFile, ap_block_state11_io, "ap_block_state11_io");
    sc_trace(mVcdFile, ap_block_pp0_stage9_11001, "ap_block_pp0_stage9_11001");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage14_iter0, "ap_block_state16_pp0_stage14_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage14_subdone, "ap_block_pp0_stage14_subdone");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage14, "ap_CS_fsm_pp0_stage14");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_129_p4, "ap_phi_mux_i_0_phi_fu_129_p4");
    sc_trace(mVcdFile, zext_ln55_1_fu_190_p1, "zext_ln55_1_fu_190_p1");
    sc_trace(mVcdFile, zext_ln55_4_fu_228_p1, "zext_ln55_4_fu_228_p1");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage10_iter0, "ap_block_state12_pp0_stage10_iter0");
    sc_trace(mVcdFile, ap_block_state12_io, "ap_block_state12_io");
    sc_trace(mVcdFile, ap_block_pp0_stage10_11001, "ap_block_pp0_stage10_11001");
    sc_trace(mVcdFile, ap_block_pp0_stage10_01001, "ap_block_pp0_stage10_01001");
    sc_trace(mVcdFile, icmp_ln55_fu_152_p2, "icmp_ln55_fu_152_p2");
    sc_trace(mVcdFile, add_ln55_1_fu_158_p2, "add_ln55_1_fu_158_p2");
    sc_trace(mVcdFile, select_ln55_fu_164_p3, "select_ln55_fu_164_p3");
    sc_trace(mVcdFile, select_ln55_1_fu_176_p3, "select_ln55_1_fu_176_p3");
    sc_trace(mVcdFile, zext_ln55_fu_172_p1, "zext_ln55_fu_172_p1");
    sc_trace(mVcdFile, add_ln55_2_fu_184_p2, "add_ln55_2_fu_184_p2");
    sc_trace(mVcdFile, zext_ln50_fu_148_p1, "zext_ln50_fu_148_p1");
    sc_trace(mVcdFile, add_ln55_fu_195_p2, "add_ln55_fu_195_p2");
    sc_trace(mVcdFile, tmp_7_fu_201_p4, "tmp_7_fu_201_p4");
    sc_trace(mVcdFile, zext_ln55_2_fu_211_p1, "zext_ln55_2_fu_211_p1");
    sc_trace(mVcdFile, zext_ln55_3_fu_215_p1, "zext_ln55_3_fu_215_p1");
    sc_trace(mVcdFile, tmp_8_fu_238_p3, "tmp_8_fu_238_p3");
    sc_trace(mVcdFile, zext_ln55_5_fu_245_p1, "zext_ln55_5_fu_245_p1");
    sc_trace(mVcdFile, shl_ln55_fu_249_p2, "shl_ln55_fu_249_p2");
    sc_trace(mVcdFile, xor_ln55_fu_255_p2, "xor_ln55_fu_255_p2");
    sc_trace(mVcdFile, zext_ln55_6_fu_266_p1, "zext_ln55_6_fu_266_p1");
    sc_trace(mVcdFile, and_ln55_fu_261_p2, "and_ln55_fu_261_p2");
    sc_trace(mVcdFile, shl_ln55_1_fu_269_p2, "shl_ln55_1_fu_269_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage4_iter0, "ap_block_state6_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage5_iter0, "ap_block_state7_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage5_subdone, "ap_block_pp0_stage5_subdone");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage6_iter0, "ap_block_state8_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage6_subdone, "ap_block_pp0_stage6_subdone");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage7_iter0, "ap_block_state9_pp0_stage7_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage7_subdone, "ap_block_pp0_stage7_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage8_subdone, "ap_block_pp0_stage8_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage9_subdone, "ap_block_pp0_stage9_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage10_subdone, "ap_block_pp0_stage10_subdone");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage11_iter0, "ap_block_state13_pp0_stage11_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage11_subdone, "ap_block_pp0_stage11_subdone");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage12_iter0, "ap_block_state14_pp0_stage12_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage12_subdone, "ap_block_pp0_stage12_subdone");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage13_iter0, "ap_block_state15_pp0_stage13_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage13_subdone, "ap_block_pp0_stage13_subdone");
    sc_trace(mVcdFile, ap_ext_blocking_cur_n, "ap_ext_blocking_cur_n");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage11, "ap_CS_fsm_pp0_stage11");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage12, "ap_CS_fsm_pp0_stage12");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage13, "ap_CS_fsm_pp0_stage13");
#endif

    }
}

gcnconv_kernel_merlin_memcpy_1_0_0::~gcnconv_kernel_merlin_memcpy_1_0_0() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_block_pp0_stage14_subdone.read(), ap_const_boolean_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read())))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_0_reg_125 = i_reg_290.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_125 = ap_const_lv17_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln50_fu_136_p2.read()))) {
        add_ln55_3_reg_300 = add_ln55_3_fu_218_p2.read();
        empty_reg_305 = empty_fu_224_p1.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0))) {
        dst_addr_read_reg_322 = m_axi_dst_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        dst_addr_reg_315 = zext_ln55_4_fu_228_p1.read();
        src_load_reg_310 = src_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_reg_290 = i_fu_142_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln50_reg_286 = icmp_ln50_fu_136_p2.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0))) {
        or_ln55_reg_327 = or_ln55_fu_275_p2.read();
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_add_ln55_1_fu_158_p2() {
    add_ln55_1_fu_158_p2 = (!ap_const_lv17_58B3.is_01() || !ap_phi_mux_i_0_phi_fu_129_p4.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_58B3) + sc_biguint<17>(ap_phi_mux_i_0_phi_fu_129_p4.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_add_ln55_2_fu_184_p2() {
    add_ln55_2_fu_184_p2 = (!select_ln55_1_fu_176_p3.read().is_01() || !zext_ln55_fu_172_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(select_ln55_1_fu_176_p3.read()) + sc_biguint<18>(zext_ln55_fu_172_p1.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_add_ln55_3_fu_218_p2() {
    add_ln55_3_fu_218_p2 = (!zext_ln55_2_fu_211_p1.read().is_01() || !zext_ln55_3_fu_215_p1.read().is_01())? sc_lv<59>(): (sc_biguint<59>(zext_ln55_2_fu_211_p1.read()) + sc_biguint<59>(zext_ln55_3_fu_215_p1.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_add_ln55_fu_195_p2() {
    add_ln55_fu_195_p2 = (!ap_const_lv18_15A48.is_01() || !zext_ln50_fu_148_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(ap_const_lv18_15A48) + sc_biguint<18>(zext_ln50_fu_148_p1.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_and_ln55_fu_261_p2() {
    and_ln55_fu_261_p2 = (dst_addr_read_reg_322.read() & xor_ln55_fu_255_p2.read());
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_pp0_stage10() {
    ap_CS_fsm_pp0_stage10 = ap_CS_fsm.read()[11];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_pp0_stage11() {
    ap_CS_fsm_pp0_stage11 = ap_CS_fsm.read()[12];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_pp0_stage12() {
    ap_CS_fsm_pp0_stage12 = ap_CS_fsm.read()[13];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_pp0_stage13() {
    ap_CS_fsm_pp0_stage13 = ap_CS_fsm.read()[14];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_pp0_stage14() {
    ap_CS_fsm_pp0_stage14 = ap_CS_fsm.read()[15];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[5];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[6];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[7];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read()[8];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_pp0_stage8() {
    ap_CS_fsm_pp0_stage8 = ap_CS_fsm.read()[9];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_pp0_stage9() {
    ap_CS_fsm_pp0_stage9 = ap_CS_fsm.read()[10];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[16];
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_dst_BVALID.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_dst_BVALID.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage10() {
    ap_block_pp0_stage10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage10_01001() {
    ap_block_pp0_stage10_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage10_11001() {
    ap_block_pp0_stage10_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state12_io.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage10_subdone() {
    ap_block_pp0_stage10_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state12_io.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage11_subdone() {
    ap_block_pp0_stage11_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage12_subdone() {
    ap_block_pp0_stage12_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage13_subdone() {
    ap_block_pp0_stage13_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage14_subdone() {
    ap_block_pp0_stage14_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage5_subdone() {
    ap_block_pp0_stage5_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage6_subdone() {
    ap_block_pp0_stage6_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage7_subdone() {
    ap_block_pp0_stage7_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage8() {
    ap_block_pp0_stage8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage8_11001() {
    ap_block_pp0_stage8_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_dst_RVALID.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage8_subdone() {
    ap_block_pp0_stage8_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_dst_RVALID.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage9() {
    ap_block_pp0_stage9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage9_11001() {
    ap_block_pp0_stage9_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state11_io.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_pp0_stage9_subdone() {
    ap_block_pp0_stage9_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state11_io.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state10_pp0_stage8_iter0() {
    ap_block_state10_pp0_stage8_iter0 = (esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_dst_RVALID.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state11_io() {
    ap_block_state11_io = (esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_dst_AWREADY.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state11_pp0_stage9_iter0() {
    ap_block_state11_pp0_stage9_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state12_io() {
    ap_block_state12_io = (esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_dst_WREADY.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state12_pp0_stage10_iter0() {
    ap_block_state12_pp0_stage10_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state13_pp0_stage11_iter0() {
    ap_block_state13_pp0_stage11_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state14_pp0_stage12_iter0() {
    ap_block_state14_pp0_stage12_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state15_pp0_stage13_iter0() {
    ap_block_state15_pp0_stage13_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state16_pp0_stage14_iter0() {
    ap_block_state16_pp0_stage14_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state17_pp0_stage0_iter1() {
    ap_block_state17_pp0_stage0_iter1 = (esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_dst_BVALID.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state3_io() {
    ap_block_state3_io = (esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_dst_ARREADY.read()));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state6_pp0_stage4_iter0() {
    ap_block_state6_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state7_pp0_stage5_iter0() {
    ap_block_state7_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state8_pp0_stage6_iter0() {
    ap_block_state8_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_block_state9_pp0_stage7_iter0() {
    ap_block_state9_pp0_stage7_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln50_fu_136_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_ext_blocking_cur_n() {
    ap_ext_blocking_cur_n = (dst_blk_n_AR.read() & dst_blk_n_R.read() & dst_blk_n_AW.read() & dst_blk_n_W.read() & dst_blk_n_B.read());
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_ext_blocking_n() {
    ap_ext_blocking_n = (ap_ext_blocking_cur_n.read() & ap_const_logic_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_int_blocking_n() {
    ap_int_blocking_n = (ap_const_logic_1 & ap_const_logic_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_phi_mux_i_0_phi_fu_129_p4() {
    if ((esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_129_p4 = i_reg_290.read();
    } else {
        ap_phi_mux_i_0_phi_fu_129_p4 = i_0_reg_125.read();
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_str_blocking_n() {
    ap_str_blocking_n = (ap_const_logic_1 & ap_const_logic_1);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_dst_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0))) {
        dst_blk_n_AR = m_axi_dst_ARREADY.read();
    } else {
        dst_blk_n_AR = ap_const_logic_1;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_dst_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0))) {
        dst_blk_n_AW = m_axi_dst_AWREADY.read();
    } else {
        dst_blk_n_AW = ap_const_logic_1;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_dst_blk_n_B() {
    if ((esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        dst_blk_n_B = m_axi_dst_BVALID.read();
    } else {
        dst_blk_n_B = ap_const_logic_1;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_dst_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0))) {
        dst_blk_n_R = m_axi_dst_RVALID.read();
    } else {
        dst_blk_n_R = ap_const_logic_1;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_dst_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage10.read(), ap_const_boolean_0))) {
        dst_blk_n_W = m_axi_dst_WREADY.read();
    } else {
        dst_blk_n_W = ap_const_logic_1;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_empty_fu_224_p1() {
    empty_fu_224_p1 = add_ln55_fu_195_p2.read().range(4-1, 0);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_i_fu_142_p2() {
    i_fu_142_p2 = (!ap_phi_mux_i_0_phi_fu_129_p4.read().is_01() || !ap_const_lv17_1.is_01())? sc_lv<17>(): (sc_biguint<17>(ap_phi_mux_i_0_phi_fu_129_p4.read()) + sc_biguint<17>(ap_const_lv17_1));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_icmp_ln50_fu_136_p2() {
    icmp_ln50_fu_136_p2 = (!ap_phi_mux_i_0_phi_fu_129_p4.read().is_01() || !ap_const_lv17_1F452.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_129_p4.read() == ap_const_lv17_1F452);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_icmp_ln55_fu_152_p2() {
    icmp_ln55_fu_152_p2 = (!ap_phi_mux_i_0_phi_fu_129_p4.read().is_01() || !ap_const_lv17_1A74D.is_01())? sc_lv<1>(): (sc_biguint<17>(ap_phi_mux_i_0_phi_fu_129_p4.read()) < sc_biguint<17>(ap_const_lv17_1A74D));
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_ARADDR() {
    m_axi_dst_ARADDR = zext_ln55_4_fu_228_p1.read();
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_ARBURST() {
    m_axi_dst_ARBURST = ap_const_lv2_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_ARCACHE() {
    m_axi_dst_ARCACHE = ap_const_lv4_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_ARID() {
    m_axi_dst_ARID = ap_const_lv1_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_ARLEN() {
    m_axi_dst_ARLEN = ap_const_lv32_1;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_ARLOCK() {
    m_axi_dst_ARLOCK = ap_const_lv2_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_ARPROT() {
    m_axi_dst_ARPROT = ap_const_lv3_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_ARQOS() {
    m_axi_dst_ARQOS = ap_const_lv4_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_ARREGION() {
    m_axi_dst_ARREGION = ap_const_lv4_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_ARSIZE() {
    m_axi_dst_ARSIZE = ap_const_lv3_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_ARUSER() {
    m_axi_dst_ARUSER = ap_const_lv1_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        m_axi_dst_ARVALID = ap_const_logic_1;
    } else {
        m_axi_dst_ARVALID = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_AWADDR() {
    m_axi_dst_AWADDR = dst_addr_reg_315.read();
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_AWBURST() {
    m_axi_dst_AWBURST = ap_const_lv2_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_AWCACHE() {
    m_axi_dst_AWCACHE = ap_const_lv4_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_AWID() {
    m_axi_dst_AWID = ap_const_lv1_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_AWLEN() {
    m_axi_dst_AWLEN = ap_const_lv32_1;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_AWLOCK() {
    m_axi_dst_AWLOCK = ap_const_lv2_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_AWPROT() {
    m_axi_dst_AWPROT = ap_const_lv3_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_AWQOS() {
    m_axi_dst_AWQOS = ap_const_lv4_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_AWREGION() {
    m_axi_dst_AWREGION = ap_const_lv4_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_AWSIZE() {
    m_axi_dst_AWSIZE = ap_const_lv3_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_AWUSER() {
    m_axi_dst_AWUSER = ap_const_lv1_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0))) {
        m_axi_dst_AWVALID = ap_const_logic_1;
    } else {
        m_axi_dst_AWVALID = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_BREADY() {
    if ((esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_dst_BREADY = ap_const_logic_1;
    } else {
        m_axi_dst_BREADY = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0))) {
        m_axi_dst_RREADY = ap_const_logic_1;
    } else {
        m_axi_dst_RREADY = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_WDATA() {
    m_axi_dst_WDATA = or_ln55_reg_327.read();
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_WID() {
    m_axi_dst_WID = ap_const_lv1_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_WLAST() {
    m_axi_dst_WLAST = ap_const_logic_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_WSTRB() {
    m_axi_dst_WSTRB = ap_const_lv64_FFFFFFFFFFFFFFFF;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_WUSER() {
    m_axi_dst_WUSER = ap_const_lv1_0;
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_m_axi_dst_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln50_reg_286.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0))) {
        m_axi_dst_WVALID = ap_const_logic_1;
    } else {
        m_axi_dst_WVALID = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_or_ln55_fu_275_p2() {
    or_ln55_fu_275_p2 = (and_ln55_fu_261_p2.read() | shl_ln55_1_fu_269_p2.read());
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_select_ln55_1_fu_176_p3() {
    select_ln55_1_fu_176_p3 = (!icmp_ln55_fu_152_p2.read()[0].is_01())? sc_lv<18>(): ((icmp_ln55_fu_152_p2.read()[0].to_bool())? ap_const_lv18_0: ap_const_lv18_1A74D);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_select_ln55_fu_164_p3() {
    select_ln55_fu_164_p3 = (!icmp_ln55_fu_152_p2.read()[0].is_01())? sc_lv<17>(): ((icmp_ln55_fu_152_p2.read()[0].to_bool())? ap_phi_mux_i_0_phi_fu_129_p4.read(): add_ln55_1_fu_158_p2.read());
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_shl_ln55_1_fu_269_p2() {
    shl_ln55_1_fu_269_p2 = (!zext_ln55_5_fu_245_p1.read().is_01())? sc_lv<512>(): zext_ln55_6_fu_266_p1.read() << (unsigned short)zext_ln55_5_fu_245_p1.read().to_uint();
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_shl_ln55_fu_249_p2() {
    shl_ln55_fu_249_p2 = (!zext_ln55_5_fu_245_p1.read().is_01())? sc_lv<512>(): ap_const_lv512_lc_2 << (unsigned short)zext_ln55_5_fu_245_p1.read().to_uint();
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_src_address0() {
    src_address0 =  (sc_lv<18>) (zext_ln55_1_fu_190_p1.read());
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_src_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_ce0 = ap_const_logic_1;
    } else {
        src_ce0 = ap_const_logic_0;
    }
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_tmp_7_fu_201_p4() {
    tmp_7_fu_201_p4 = add_ln55_fu_195_p2.read().range(17, 4);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_tmp_8_fu_238_p3() {
    tmp_8_fu_238_p3 = esl_concat<4,5>(empty_reg_305.read(), ap_const_lv5_0);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_xor_ln55_fu_255_p2() {
    xor_ln55_fu_255_p2 = (shl_ln55_fu_249_p2.read() ^ ap_const_lv512_lc_3);
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_zext_ln50_fu_148_p1() {
    zext_ln50_fu_148_p1 = esl_zext<18,17>(ap_phi_mux_i_0_phi_fu_129_p4.read());
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_zext_ln55_1_fu_190_p1() {
    zext_ln55_1_fu_190_p1 = esl_zext<64,18>(add_ln55_2_fu_184_p2.read());
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_zext_ln55_2_fu_211_p1() {
    zext_ln55_2_fu_211_p1 = esl_zext<59,14>(tmp_7_fu_201_p4.read());
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_zext_ln55_3_fu_215_p1() {
    zext_ln55_3_fu_215_p1 = esl_zext<59,58>(dst_offset.read());
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_zext_ln55_4_fu_228_p1() {
    zext_ln55_4_fu_228_p1 = esl_zext<64,59>(add_ln55_3_reg_300.read());
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_zext_ln55_5_fu_245_p1() {
    zext_ln55_5_fu_245_p1 = esl_zext<512,9>(tmp_8_fu_238_p3.read());
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_zext_ln55_6_fu_266_p1() {
    zext_ln55_6_fu_266_p1 = esl_zext<512,32>(src_load_reg_310.read());
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_zext_ln55_fu_172_p1() {
    zext_ln55_fu_172_p1 = esl_zext<18,17>(select_ln55_fu_164_p3.read());
}

void gcnconv_kernel_merlin_memcpy_1_0_0::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln50_fu_136_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln50_fu_136_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage5_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage6_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            }
            break;
        case 512 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage8_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            }
            break;
        case 1024 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage9_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            }
            break;
        case 2048 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage10_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            }
            break;
        case 4096 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage11_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            }
            break;
        case 8192 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage12_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            }
            break;
        case 16384 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage13_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            }
            break;
        case 32768 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage14_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXX";
            break;
    }
}

}

