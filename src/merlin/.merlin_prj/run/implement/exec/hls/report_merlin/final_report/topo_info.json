[
    {
        "line": 117,
        "col": 10,
        "source": "__merlinkernel_gcnconv_kernel.cpp",
        "topo_id": "F_0_0_0_12",
        "unparse_info": "void gcnconv_kernel(::merlin_uint_512* x,::merlin_uint_512* weight,int [2 *(88648 + 197... edge_index,::merlin_uint_512* result) {...}",
        "type": "kernel",
        "name": "gcnconv_kernel",
        "begin": "118",
        "end": "252",
        "interfaces": [
            {
                "line": 117,
                "col": 47,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_0_0",
                "unparse_info": "x",
                "type": "interface",
                "name": "x",
                "var_type": "array",
                "const": "yes"
            },
            {
                "line": 117,
                "col": 66,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_0_1",
                "unparse_info": "weight",
                "type": "interface",
                "name": "weight",
                "var_type": "array",
                "const": "yes"
            },
            {
                "line": 117,
                "col": 77,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_0_2",
                "unparse_info": "edge_index",
                "type": "interface",
                "name": "edge_index",
                "var_type": "array",
                "const": "yes"
            },
            {
                "line": 117,
                "col": 126,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_0_3",
                "unparse_info": "result",
                "type": "interface",
                "name": "result",
                "var_type": "array",
                "const": "yes"
            }
        ],
        "arrays": [
            {
                "line": 143,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_12_1",
                "unparse_info": "weight_buf_0",
                "type": "array",
                "name": "weight_buf_0"
            },
            {
                "line": 146,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_14_1",
                "unparse_info": "edge_index_buf_3",
                "type": "array",
                "name": "edge_index_buf_3"
            },
            {
                "line": 147,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_15_1",
                "unparse_info": "edge_index_buf_2",
                "type": "array",
                "name": "edge_index_buf_2"
            },
            {
                "line": 148,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_16_1",
                "unparse_info": "edge_index_buf_1",
                "type": "array",
                "name": "edge_index_buf_1"
            },
            {
                "line": 149,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_17_1",
                "unparse_info": "edge_index_buf_0",
                "type": "array",
                "name": "edge_index_buf_0"
            },
            {
                "line": 158,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_22_1",
                "unparse_info": "edge_weight",
                "type": "array",
                "name": "edge_weight"
            },
            {
                "line": 159,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_23_1",
                "unparse_info": "x_mul",
                "type": "array",
                "name": "x_mul"
            },
            {
                "line": 162,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_25_1",
                "unparse_info": "deg",
                "type": "array",
                "name": "deg"
            },
            {
                "line": 163,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_26_1",
                "unparse_info": "deg_inv_sqrt",
                "type": "array",
                "name": "deg_inv_sqrt"
            },
            {
                "line": 164,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_27_1",
                "unparse_info": "norm",
                "type": "array",
                "name": "norm"
            },
            {
                "line": 170,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_0_1",
                "unparse_info": "x_buf_0",
                "type": "array",
                "name": "x_buf_0"
            }
        ],
        "var_refs": [
            {
                "line": 166,
                "col": 40,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_28_0_1_0",
                "unparse_info": "weight_buf_0",
                "type": "var_ref",
                "name": "weight_buf_0"
            },
            {
                "line": 166,
                "col": 76,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_28_0_1_3_0",
                "unparse_info": "weight",
                "type": "var_ref",
                "name": "weight"
            },
            {
                "line": 174,
                "col": 37,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_2_0_1_0_0_0",
                "unparse_info": "x_buf_0",
                "type": "var_ref",
                "name": "x_buf_0"
            },
            {
                "line": 174,
                "col": 67,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_2_0_1_1_0",
                "unparse_info": "x",
                "type": "var_ref",
                "name": "x"
            },
            {
                "line": 187,
                "col": 16,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_3_1_0_3_1_0_1_0_0",
                "unparse_info": "x_buf_0",
                "type": "var_ref",
                "name": "x_buf_0"
            },
            {
                "line": 187,
                "col": 29,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_3_1_0_3_1_0_1_1_0_0",
                "unparse_info": "weight_buf_0",
                "type": "var_ref",
                "name": "weight_buf_0"
            },
            {
                "line": 189,
                "col": 7,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_3_2_0_0_0_0",
                "unparse_info": "x_mul",
                "type": "var_ref",
                "name": "x_mul"
            },
            {
                "line": 192,
                "col": 19,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_30_0_1_0",
                "unparse_info": "edge_index_buf_2",
                "type": "var_ref",
                "name": "edge_index_buf_2"
            },
            {
                "line": 192,
                "col": 40,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_30_0_1_3",
                "unparse_info": "edge_index",
                "type": "var_ref",
                "name": "edge_index"
            },
            {
                "line": 207,
                "col": 7,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_31_0_3_1_0_3_1_0_0_0_0",
                "unparse_info": "edge_index_buf_2",
                "type": "var_ref",
                "name": "edge_index_buf_2"
            },
            {
                "line": 210,
                "col": 19,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_32_0_1_0",
                "unparse_info": "edge_index",
                "type": "var_ref",
                "name": "edge_index"
            },
            {
                "line": 210,
                "col": 36,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_32_0_1_2",
                "unparse_info": "edge_index_buf_2",
                "type": "var_ref",
                "name": "edge_index_buf_2"
            },
            {
                "line": 218,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_33_0_3_1_0_0_0",
                "unparse_info": "edge_weight",
                "type": "var_ref",
                "name": "edge_weight"
            },
            {
                "line": 220,
                "col": 19,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_34_0_1_0",
                "unparse_info": "edge_index_buf_0",
                "type": "var_ref",
                "name": "edge_index_buf_0"
            },
            {
                "line": 220,
                "col": 38,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_34_0_1_2",
                "unparse_info": "edge_index",
                "type": "var_ref",
                "name": "edge_index"
            },
            {
                "line": 228,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_35_0_3_1_0_0_0",
                "unparse_info": "deg",
                "type": "var_ref",
                "name": "deg"
            },
            {
                "line": 228,
                "col": 9,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_35_0_3_1_0_0_1_0",
                "unparse_info": "edge_index_buf_0",
                "type": "var_ref",
                "name": "edge_index_buf_0"
            },
            {
                "line": 228,
                "col": 33,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_35_0_3_1_0_1_0",
                "unparse_info": "edge_weight",
                "type": "var_ref",
                "name": "edge_weight"
            },
            {
                "line": 237,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_36_0_3_1_0_0_0",
                "unparse_info": "deg_inv_sqrt",
                "type": "var_ref",
                "name": "deg_inv_sqrt"
            },
            {
                "line": 237,
                "col": 43,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_36_0_3_1_0_1_1_1_0_0",
                "unparse_info": "deg",
                "type": "var_ref",
                "name": "deg"
            },
            {
                "line": 239,
                "col": 19,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_37_0_1_0",
                "unparse_info": "edge_index_buf_1",
                "type": "var_ref",
                "name": "edge_index_buf_1"
            },
            {
                "line": 239,
                "col": 38,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_37_0_1_2",
                "unparse_info": "edge_index",
                "type": "var_ref",
                "name": "edge_index"
            },
            {
                "line": 247,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_38_0_3_1_0_0_0",
                "unparse_info": "norm",
                "type": "var_ref",
                "name": "norm"
            },
            {
                "line": 247,
                "col": 15,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_38_0_3_1_0_1_0_0_0",
                "unparse_info": "deg_inv_sqrt",
                "type": "var_ref",
                "name": "deg_inv_sqrt"
            },
            {
                "line": 247,
                "col": 28,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_38_0_3_1_0_1_0_0_1_0",
                "unparse_info": "edge_index_buf_1",
                "type": "var_ref",
                "name": "edge_index_buf_1"
            },
            {
                "line": 247,
                "col": 51,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_38_0_3_1_0_1_0_1_0",
                "unparse_info": "edge_weight",
                "type": "var_ref",
                "name": "edge_weight"
            },
            {
                "line": 247,
                "col": 68,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_38_0_3_1_0_1_1_0",
                "unparse_info": "deg_inv_sqrt",
                "type": "var_ref",
                "name": "deg_inv_sqrt"
            },
            {
                "line": 247,
                "col": 81,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_38_0_3_1_0_1_1_1_0",
                "unparse_info": "edge_index_buf_1",
                "type": "var_ref",
                "name": "edge_index_buf_1"
            },
            {
                "line": 249,
                "col": 19,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_39_0_1_0",
                "unparse_info": "edge_index_buf_3",
                "type": "var_ref",
                "name": "edge_index_buf_3"
            },
            {
                "line": 249,
                "col": 38,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_39_0_1_2",
                "unparse_info": "edge_index",
                "type": "var_ref",
                "name": "edge_index"
            },
            {
                "line": 265,
                "col": 72,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_3_2_0_1_1_0_0",
                "unparse_info": "result",
                "type": "var_ref",
                "name": "result"
            },
            {
                "line": 265,
                "col": 81,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_3_2_0_1_1_1_0_0_0_0_0",
                "unparse_info": "edge_index_buf_3",
                "type": "var_ref",
                "name": "edge_index_buf_3"
            },
            {
                "line": 266,
                "col": 16,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_3_3_0_1_0_0",
                "unparse_info": "norm",
                "type": "var_ref",
                "name": "norm"
            },
            {
                "line": 266,
                "col": 26,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_3_3_0_1_1_0_0",
                "unparse_info": "x_mul",
                "type": "var_ref",
                "name": "x_mul"
            },
            {
                "line": 266,
                "col": 32,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_3_3_0_1_1_0_1_0",
                "unparse_info": "edge_index_buf_3",
                "type": "var_ref",
                "name": "edge_index_buf_3"
            },
            {
                "line": 267,
                "col": 65,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_3_4_0_1_0_0",
                "unparse_info": "result",
                "type": "var_ref",
                "name": "result"
            },
            {
                "line": 267,
                "col": 84,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_3_4_0_1_2_0_1_0_0_0",
                "unparse_info": "edge_index_buf_3",
                "type": "var_ref",
                "name": "edge_index_buf_3"
            }
        ],
        "var_defs": [
            {
                "line": 169,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_0_0_1",
                "unparse_info": "i",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 178,
                "col": 10,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_0_0_1",
                "unparse_info": "j",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 179,
                "col": 7,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_3_0_1",
                "unparse_info": "mul",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 182,
                "col": 12,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_3_1_0_0_0_1",
                "unparse_info": "k",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 195,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_31_0_0_0_1",
                "unparse_info": "i",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 202,
                "col": 10,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_31_0_3_1_0_0_0_1",
                "unparse_info": "j",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 213,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_33_0_0_0_1",
                "unparse_info": "i",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 223,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_35_0_0_0_1",
                "unparse_info": "i",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 232,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_36_0_0_0_1",
                "unparse_info": "i",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 242,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_38_0_0_0_1",
                "unparse_info": "i",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 252,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_0_0_1",
                "unparse_info": "i",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 259,
                "col": 10,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_0_0_1",
                "unparse_info": "j",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 264,
                "col": 7,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_3_1_1",
                "unparse_info": "tmp_0",
                "type": "var_def",
                "name": ""
            }
        ],
        "stmts": [
            {
                "line": 117,
                "col": 10,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "F_0_0_0_12",
                "unparse_info": "void gcnconv_kernel(::merlin_uint_512* x,::merlin_uint_512* weight,int [2 *(88648 + 197... edge_index,::merlin_uint_512* result) {...}",
                "type": "stmt"
            },
            {
                "line": 117,
                "col": 10,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_0",
                "unparse_info": "::merlin_uint_512* x,::merlin_uint_512* weight,int [2 *(88648 + 197... edge_index,::merlin_uint_512* result",
                "type": "stmt"
            },
            {
                "line": 118,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "F_0_0_0_12_2",
                "unparse_info": "function definition: void gcnconv_kernel(::merlin_uint_512* x,::merlin_uint_512* weight,int [2 *(88648 + 197... edge_index,::merlin_uint_512* result) {...}",
                "type": "stmt"
            },
            {
                "line": 118,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0",
                "unparse_info": "{#pragma HLS INTERFACE m_axi port=edge_index offset=slave depth=216730#pragma HLS INTERFACE m_axi port=result offset=slave depth=19717#pragma HLS INTERFACE m_axi port=weight offset=slave depth=500#pragma HLS INTERFACE m_axi port=x offset=slave depth=616157#pragma HLS INTERFACE s_axilite port=edge_index bundle=control#pragma HLS INTERFACE s_axilite port=result bundle=control#pragma HLS INTERFACE s_axilite port=weight bundle=control#pragma HLS INTERFACE s_axilite port=x bundle=control#pragma HLS INTERFACE s_axilite port=return bundle=control#pragma HLS DATA_PACK VARIABLE=result#pragma HLS DATA_PACK VARIABLE=weight#pragma HLS DATA_PACK VARIABLE=xfloat weight_buf_0[500][16];#pragma HLS array_partition variable=weight_buf_0 cyclic factor=8 dim=2int edge_index_buf_3[216730];int edge_index_buf_2[2][108365];int edge_index_buf_1[216730];int edge_index_buf_0[108365];#pragma ACCEL interface variable=result max_depth=315472 depth=315472#pragma ACCEL interface variable=edge_index max_depth=216730 depth=216730#pragma ACCEL interface variable=weight max_depth=8000 depth=8000#pragma ACCEL interface variable=x max_depth=9858500 depth=9858500float edge_weight[88648 + 19717];float x_mul[19717][16];#pragma HLS array_partition variable=x_mul complete dim=2float deg[19717];float deg_inv_sqrt[19717];float norm[88648 + 19717];memcpy_wide_bus_read_float_2d_16_512(weight_buf_0,0,0,(merlin_uint_512 *)weight,(0 * 4),sizeof(float ) *((unsigned long )8000),8000L);matrixumului0:for(int i = 0;i < 19717;++i) {float x_buf_0[500];#pragma HLS array_partition variable=x_buf_0 cyclic factor=8 dim=1memcpy_wide_bus_read_float_512(&x_buf_0[0],(merlin_uint_512 *)x,(i * 500 * 4),sizeof(float ) *((unsigned long )500),500L);matrixumuluj0:for(int j = 0;j < 16;++j) {float mul =(float )0;matrixumuluk0:for(int k = 0;k < 500;++k) {#pragma HLS pipelinemul += x_buf_0[k] * weight_buf_0[k][j];}x_mul[i][j] = mul;}}merlin_memcpy_0(edge_index_buf_2,0,0,edge_index,88648,(sizeof(int ) *((unsigned long )128082)),512328UL);assignuindexui0:for(int i = 0;i < 19717;++i) {#pragma HLS pipelineassignuindexuj0:for(int j = 0;j < 2;++j) {#pragma HLS unrolledge_index_buf_2[j][i] = i;}}merlin_memcpy_1(edge_index,88648,edge_index_buf_2,0,0,(sizeof(int ) *((unsigned long )128082)),512328UL);assignuweight0:for(int i = 0;i < 88648 + 19717;++i) {#pragma HLS pipelineedge_weight[i] =((float )1);}merlin_memcpy_2(edge_index_buf_0,0,edge_index,0,(sizeof(int ) *((unsigned long )108365)),433460UL);incudegree0:for(int i = 0;i < 88648 + 19717;++i) {#pragma HLS pipelinedeg[edge_index_buf_0[i]] += edge_weight[i];}invert:for(int i = 0;i < 19717;++i) {#pragma HLS pipelinedeg_inv_sqrt[i] =((float )1) / sqrtf(deg[i]);}merlin_memcpy_3(edge_index_buf_1,0,edge_index,0,(sizeof(int ) *((unsigned long )216730L)),866920UL);assignunorm0:for(int i = 0;i < 88648 + 19717;++i) {#pragma HLS pipelinenorm[i] = deg_inv_sqrt[edge_index_buf_1[i]] * edge_weight[i] * deg_inv_sqrt[edge_index_buf_1[108365 + i]];}merlin_memcpy_4(edge_index_buf_3,0,edge_index,0,(sizeof(int ) *((unsigned long )216730L)),866920UL);calcuresultui0:for(int i = 0;i < 88648 + 19717;++i) {#pragma HLS pipelinecalcuresultuj0:for(int j = 0;j < 16;++j) {#pragma HLS unrollfloat tmp_0;tmp_0 = memcpy_wide_bus_single_read_float_512((merlin_uint_512 *)result,((edge_index_buf_3[108365 + i] * 16 + j) * 4));tmp_0 += norm[i] * x_mul[edge_index_buf_3[i]][j];memcpy_wide_bus_single_write_float_512((merlin_uint_512 *)result,tmp_0,(4 *(edge_index_buf_3[108365 + i] * 16 + j)));}}}",
                "type": "stmt"
            },
            {
                "line": 120,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_0",
                "unparse_info": "#pragma HLS INTERFACE m_axi port=edge_index offset=slave depth=216730",
                "type": "stmt"
            },
            {
                "line": 122,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_1",
                "unparse_info": "#pragma HLS INTERFACE m_axi port=result offset=slave depth=19717",
                "type": "stmt"
            },
            {
                "line": 124,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_2",
                "unparse_info": "#pragma HLS INTERFACE m_axi port=weight offset=slave depth=500",
                "type": "stmt"
            },
            {
                "line": 126,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_3",
                "unparse_info": "#pragma HLS INTERFACE m_axi port=x offset=slave depth=616157",
                "type": "stmt"
            },
            {
                "line": 128,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_4",
                "unparse_info": "#pragma HLS INTERFACE s_axilite port=edge_index bundle=control",
                "type": "stmt"
            },
            {
                "line": 130,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_5",
                "unparse_info": "#pragma HLS INTERFACE s_axilite port=result bundle=control",
                "type": "stmt"
            },
            {
                "line": 132,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_6",
                "unparse_info": "#pragma HLS INTERFACE s_axilite port=weight bundle=control",
                "type": "stmt"
            },
            {
                "line": 134,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_7",
                "unparse_info": "#pragma HLS INTERFACE s_axilite port=x bundle=control",
                "type": "stmt"
            },
            {
                "line": 136,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_8",
                "unparse_info": "#pragma HLS INTERFACE s_axilite port=return bundle=control",
                "type": "stmt"
            },
            {
                "line": 138,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_9",
                "unparse_info": "#pragma HLS DATA_PACK VARIABLE=result",
                "type": "stmt"
            },
            {
                "line": 140,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_10",
                "unparse_info": "#pragma HLS DATA_PACK VARIABLE=weight",
                "type": "stmt"
            },
            {
                "line": 142,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_11",
                "unparse_info": "#pragma HLS DATA_PACK VARIABLE=x",
                "type": "stmt"
            },
            {
                "line": 143,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_12",
                "unparse_info": "float weight_buf_0[500][16];",
                "type": "stmt"
            },
            {
                "line": 145,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_13",
                "unparse_info": "#pragma HLS array_partition variable=weight_buf_0 cyclic factor=8 dim=2",
                "type": "stmt"
            },
            {
                "line": 146,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_14",
                "unparse_info": "int edge_index_buf_3[216730];",
                "type": "stmt"
            },
            {
                "line": 147,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_15",
                "unparse_info": "int edge_index_buf_2[2][108365];",
                "type": "stmt"
            },
            {
                "line": 148,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_16",
                "unparse_info": "int edge_index_buf_1[216730];",
                "type": "stmt"
            },
            {
                "line": 149,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_17",
                "unparse_info": "int edge_index_buf_0[108365];",
                "type": "stmt"
            },
            {
                "line": 151,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_18",
                "unparse_info": "#pragma ACCEL interface variable=result max_depth=315472 depth=315472",
                "type": "stmt"
            },
            {
                "line": 153,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_19",
                "unparse_info": "#pragma ACCEL interface variable=edge_index max_depth=216730 depth=216730",
                "type": "stmt"
            },
            {
                "line": 155,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_20",
                "unparse_info": "#pragma ACCEL interface variable=weight max_depth=8000 depth=8000",
                "type": "stmt"
            },
            {
                "line": 157,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_21",
                "unparse_info": "#pragma ACCEL interface variable=x max_depth=9858500 depth=9858500",
                "type": "stmt"
            },
            {
                "line": 158,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_22",
                "unparse_info": "float edge_weight[88648 + 19717];",
                "type": "stmt"
            },
            {
                "line": 159,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_23",
                "unparse_info": "float x_mul[19717][16];",
                "type": "stmt"
            },
            {
                "line": 161,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_24",
                "unparse_info": "#pragma HLS array_partition variable=x_mul complete dim=2",
                "type": "stmt"
            },
            {
                "line": 162,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_25",
                "unparse_info": "float deg[19717];",
                "type": "stmt"
            },
            {
                "line": 163,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_26",
                "unparse_info": "float deg_inv_sqrt[19717];",
                "type": "stmt"
            },
            {
                "line": 164,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_27",
                "unparse_info": "float norm[88648 + 19717];",
                "type": "stmt"
            },
            {
                "line": 166,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_28",
                "unparse_info": "memcpy_wide_bus_read_float_2d_16_512(weight_buf_0,0,0,(merlin_uint_512 *)weight,(0 * 4),sizeof(float ) *((unsigned long )8000),8000L);",
                "type": "stmt"
            },
            {
                "line": 168,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29",
                "unparse_info": "matrixumului0:for(int i = 0;i < 19717;++i) {float x_buf_0[500];#pragma HLS array_partition variable=x_buf_0 cyclic factor=8 dim=1memcpy_wide_bus_read_float_512(&x_buf_0[0],(merlin_uint_512 *)x,(i * 500 * 4),sizeof(float ) *((unsigned long )500),500L);matrixumuluj0:for(int j = 0;j < 16;++j) {float mul =(float )0;matrixumuluk0:for(int k = 0;k < 500;++k) {#pragma HLS pipelinemul += x_buf_0[k] * weight_buf_0[k][j];}x_mul[i][j] = mul;}}",
                "type": "stmt"
            },
            {
                "line": 169,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_29_0",
                "unparse_info": "for(int i = 0;i < 19717;++i) {...}",
                "type": "stmt"
            },
            {
                "line": 169,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_0",
                "unparse_info": "int i = 0;;",
                "type": "stmt"
            },
            {
                "line": 169,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_29_0_0_0",
                "unparse_info": "int i = 0;",
                "type": "stmt"
            },
            {
                "line": 169,
                "col": 19,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_1",
                "unparse_info": "i < 19717;",
                "type": "stmt"
            },
            {
                "line": 169,
                "col": 35,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3",
                "unparse_info": "{float x_buf_0[500];#pragma HLS array_partition variable=x_buf_0 cyclic factor=8 dim=1memcpy_wide_bus_read_float_512(&x_buf_0[0],(merlin_uint_512 *)x,(i * 500 * 4),sizeof(float ) *((unsigned long )500),500L);matrixumuluj0:for(int j = 0;j < 16;++j) {float mul =(float )0;matrixumuluk0:for(int k = 0;k < 500;++k) {#pragma HLS pipelinemul += x_buf_0[k] * weight_buf_0[k][j];}x_mul[i][j] = mul;}}",
                "type": "stmt"
            },
            {
                "line": 170,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_29_0_3_0",
                "unparse_info": "float x_buf_0[500];",
                "type": "stmt"
            },
            {
                "line": 173,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_1",
                "unparse_info": "#pragma HLS array_partition variable=x_buf_0 cyclic factor=8 dim=1",
                "type": "stmt"
            },
            {
                "line": 174,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_2",
                "unparse_info": "memcpy_wide_bus_read_float_512(&x_buf_0[0],(merlin_uint_512 *)x,(i * 500 * 4),sizeof(float ) *((unsigned long )500),500L);",
                "type": "stmt"
            },
            {
                "line": 177,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3",
                "unparse_info": "matrixumuluj0:for(int j = 0;j < 16;++j) {float mul =(float )0;matrixumuluk0:for(int k = 0;k < 500;++k) {#pragma HLS pipelinemul += x_buf_0[k] * weight_buf_0[k][j];}x_mul[i][j] = mul;}",
                "type": "stmt"
            },
            {
                "line": 178,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_29_0_3_3_0",
                "unparse_info": "for(int j = 0;j < 16;++j) {...}",
                "type": "stmt"
            },
            {
                "line": 178,
                "col": 10,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_0",
                "unparse_info": "int j = 0;;",
                "type": "stmt"
            },
            {
                "line": 178,
                "col": 10,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_29_0_3_3_0_0_0",
                "unparse_info": "int j = 0;",
                "type": "stmt"
            },
            {
                "line": 178,
                "col": 21,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_1",
                "unparse_info": "j < 16;",
                "type": "stmt"
            },
            {
                "line": 178,
                "col": 34,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_3",
                "unparse_info": "{float mul =(float )0;matrixumuluk0:for(int k = 0;k < 500;++k) {#pragma HLS pipelinemul += x_buf_0[k] * weight_buf_0[k][j];}x_mul[i][j] = mul;}",
                "type": "stmt"
            },
            {
                "line": 179,
                "col": 7,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_29_0_3_3_0_3_0",
                "unparse_info": "float mul =(float )0;",
                "type": "stmt"
            },
            {
                "line": 181,
                "col": 7,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_3_1",
                "unparse_info": "matrixumuluk0:for(int k = 0;k < 500;++k) {#pragma HLS pipelinemul += x_buf_0[k] * weight_buf_0[k][j];}",
                "type": "stmt"
            },
            {
                "line": 182,
                "col": 7,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_29_0_3_3_0_3_1_0",
                "unparse_info": "for(int k = 0;k < 500;++k) {...}",
                "type": "stmt"
            },
            {
                "line": 182,
                "col": 12,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_3_1_0_0",
                "unparse_info": "int k = 0;;",
                "type": "stmt"
            },
            {
                "line": 182,
                "col": 12,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_29_0_3_3_0_3_1_0_0_0",
                "unparse_info": "int k = 0;",
                "type": "stmt"
            },
            {
                "line": 182,
                "col": 23,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_3_1_0_1",
                "unparse_info": "k < 500;",
                "type": "stmt"
            },
            {
                "line": 184,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_3_1_0_3",
                "unparse_info": "{#pragma HLS pipelinemul += x_buf_0[k] * weight_buf_0[k][j];}",
                "type": "stmt"
            },
            {
                "line": 186,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_3_1_0_3_0",
                "unparse_info": "#pragma HLS pipeline",
                "type": "stmt"
            },
            {
                "line": 187,
                "col": 9,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_3_1_0_3_1",
                "unparse_info": "mul += x_buf_0[k] * weight_buf_0[k][j];",
                "type": "stmt"
            },
            {
                "line": 189,
                "col": 7,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_29_0_3_3_0_3_2",
                "unparse_info": "x_mul[i][j] = mul;",
                "type": "stmt"
            },
            {
                "line": 192,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_30",
                "unparse_info": "merlin_memcpy_0(edge_index_buf_2,0,0,edge_index,88648,(sizeof(int ) *((unsigned long )128082)),512328UL);",
                "type": "stmt"
            },
            {
                "line": 194,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_31",
                "unparse_info": "assignuindexui0:for(int i = 0;i < 19717;++i) {#pragma HLS pipelineassignuindexuj0:for(int j = 0;j < 2;++j) {#pragma HLS unrolledge_index_buf_2[j][i] = i;}}",
                "type": "stmt"
            },
            {
                "line": 195,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_31_0",
                "unparse_info": "for(int i = 0;i < 19717;++i) {...}",
                "type": "stmt"
            },
            {
                "line": 195,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_31_0_0",
                "unparse_info": "int i = 0;;",
                "type": "stmt"
            },
            {
                "line": 195,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_31_0_0_0",
                "unparse_info": "int i = 0;",
                "type": "stmt"
            },
            {
                "line": 195,
                "col": 19,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_31_0_1",
                "unparse_info": "i < 19717;",
                "type": "stmt"
            },
            {
                "line": 197,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_31_0_3",
                "unparse_info": "{#pragma HLS pipelineassignuindexuj0:for(int j = 0;j < 2;++j) {#pragma HLS unrolledge_index_buf_2[j][i] = i;}}",
                "type": "stmt"
            },
            {
                "line": 199,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_31_0_3_0",
                "unparse_info": "#pragma HLS pipeline",
                "type": "stmt"
            },
            {
                "line": 201,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_31_0_3_1",
                "unparse_info": "assignuindexuj0:for(int j = 0;j < 2;++j) {#pragma HLS unrolledge_index_buf_2[j][i] = i;}",
                "type": "stmt"
            },
            {
                "line": 202,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_31_0_3_1_0",
                "unparse_info": "for(int j = 0;j < 2;++j) {...}",
                "type": "stmt"
            },
            {
                "line": 202,
                "col": 10,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_31_0_3_1_0_0",
                "unparse_info": "int j = 0;;",
                "type": "stmt"
            },
            {
                "line": 202,
                "col": 10,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_31_0_3_1_0_0_0",
                "unparse_info": "int j = 0;",
                "type": "stmt"
            },
            {
                "line": 202,
                "col": 21,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_31_0_3_1_0_1",
                "unparse_info": "j < 2;",
                "type": "stmt"
            },
            {
                "line": 204,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_31_0_3_1_0_3",
                "unparse_info": "{#pragma HLS unrolledge_index_buf_2[j][i] = i;}",
                "type": "stmt"
            },
            {
                "line": 206,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_31_0_3_1_0_3_0",
                "unparse_info": "#pragma HLS unroll",
                "type": "stmt"
            },
            {
                "line": 207,
                "col": 7,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_31_0_3_1_0_3_1",
                "unparse_info": "edge_index_buf_2[j][i] = i;",
                "type": "stmt"
            },
            {
                "line": 210,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_32",
                "unparse_info": "merlin_memcpy_1(edge_index,88648,edge_index_buf_2,0,0,(sizeof(int ) *((unsigned long )128082)),512328UL);",
                "type": "stmt"
            },
            {
                "line": 212,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_33",
                "unparse_info": "assignuweight0:for(int i = 0;i < 88648 + 19717;++i) {#pragma HLS pipelineedge_weight[i] =((float )1);}",
                "type": "stmt"
            },
            {
                "line": 213,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_33_0",
                "unparse_info": "for(int i = 0;i < 88648 + 19717;++i) {...}",
                "type": "stmt"
            },
            {
                "line": 213,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_33_0_0",
                "unparse_info": "int i = 0;;",
                "type": "stmt"
            },
            {
                "line": 213,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_33_0_0_0",
                "unparse_info": "int i = 0;",
                "type": "stmt"
            },
            {
                "line": 213,
                "col": 19,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_33_0_1",
                "unparse_info": "i < 88648 + 19717;",
                "type": "stmt"
            },
            {
                "line": 215,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_33_0_3",
                "unparse_info": "{#pragma HLS pipelineedge_weight[i] =((float )1);}",
                "type": "stmt"
            },
            {
                "line": 217,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_33_0_3_0",
                "unparse_info": "#pragma HLS pipeline",
                "type": "stmt"
            },
            {
                "line": 218,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_33_0_3_1",
                "unparse_info": "edge_weight[i] =((float )1);",
                "type": "stmt"
            },
            {
                "line": 220,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_34",
                "unparse_info": "merlin_memcpy_2(edge_index_buf_0,0,edge_index,0,(sizeof(int ) *((unsigned long )108365)),433460UL);",
                "type": "stmt"
            },
            {
                "line": 222,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_35",
                "unparse_info": "incudegree0:for(int i = 0;i < 88648 + 19717;++i) {#pragma HLS pipelinedeg[edge_index_buf_0[i]] += edge_weight[i];}",
                "type": "stmt"
            },
            {
                "line": 223,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_35_0",
                "unparse_info": "for(int i = 0;i < 88648 + 19717;++i) {...}",
                "type": "stmt"
            },
            {
                "line": 223,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_35_0_0",
                "unparse_info": "int i = 0;;",
                "type": "stmt"
            },
            {
                "line": 223,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_35_0_0_0",
                "unparse_info": "int i = 0;",
                "type": "stmt"
            },
            {
                "line": 223,
                "col": 19,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_35_0_1",
                "unparse_info": "i < 88648 + 19717;",
                "type": "stmt"
            },
            {
                "line": 225,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_35_0_3",
                "unparse_info": "{#pragma HLS pipelinedeg[edge_index_buf_0[i]] += edge_weight[i];}",
                "type": "stmt"
            },
            {
                "line": 227,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_35_0_3_0",
                "unparse_info": "#pragma HLS pipeline",
                "type": "stmt"
            },
            {
                "line": 228,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_35_0_3_1",
                "unparse_info": "deg[edge_index_buf_0[i]] += edge_weight[i];",
                "type": "stmt"
            },
            {
                "line": 231,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_36",
                "unparse_info": "invert:for(int i = 0;i < 19717;++i) {#pragma HLS pipelinedeg_inv_sqrt[i] =((float )1) / sqrtf(deg[i]);}",
                "type": "stmt"
            },
            {
                "line": 232,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_36_0",
                "unparse_info": "for(int i = 0;i < 19717;++i) {...}",
                "type": "stmt"
            },
            {
                "line": 232,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_36_0_0",
                "unparse_info": "int i = 0;;",
                "type": "stmt"
            },
            {
                "line": 232,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_36_0_0_0",
                "unparse_info": "int i = 0;",
                "type": "stmt"
            },
            {
                "line": 232,
                "col": 19,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_36_0_1",
                "unparse_info": "i < 19717;",
                "type": "stmt"
            },
            {
                "line": 234,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_36_0_3",
                "unparse_info": "{#pragma HLS pipelinedeg_inv_sqrt[i] =((float )1) / sqrtf(deg[i]);}",
                "type": "stmt"
            },
            {
                "line": 236,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_36_0_3_0",
                "unparse_info": "#pragma HLS pipeline",
                "type": "stmt"
            },
            {
                "line": 237,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_36_0_3_1",
                "unparse_info": "deg_inv_sqrt[i] =((float )1) / sqrtf(deg[i]);",
                "type": "stmt"
            },
            {
                "line": 239,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_37",
                "unparse_info": "merlin_memcpy_3(edge_index_buf_1,0,edge_index,0,(sizeof(int ) *((unsigned long )216730L)),866920UL);",
                "type": "stmt"
            },
            {
                "line": 241,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_38",
                "unparse_info": "assignunorm0:for(int i = 0;i < 88648 + 19717;++i) {#pragma HLS pipelinenorm[i] = deg_inv_sqrt[edge_index_buf_1[i]] * edge_weight[i] * deg_inv_sqrt[edge_index_buf_1[108365 + i]];}",
                "type": "stmt"
            },
            {
                "line": 242,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_38_0",
                "unparse_info": "for(int i = 0;i < 88648 + 19717;++i) {...}",
                "type": "stmt"
            },
            {
                "line": 242,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_38_0_0",
                "unparse_info": "int i = 0;;",
                "type": "stmt"
            },
            {
                "line": 242,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_38_0_0_0",
                "unparse_info": "int i = 0;",
                "type": "stmt"
            },
            {
                "line": 242,
                "col": 19,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_38_0_1",
                "unparse_info": "i < 88648 + 19717;",
                "type": "stmt"
            },
            {
                "line": 244,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_38_0_3",
                "unparse_info": "{#pragma HLS pipelinenorm[i] = deg_inv_sqrt[edge_index_buf_1[i]] * edge_weight[i] * deg_inv_sqrt[edge_index_buf_1[108365 + i]];}",
                "type": "stmt"
            },
            {
                "line": 246,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_38_0_3_0",
                "unparse_info": "#pragma HLS pipeline",
                "type": "stmt"
            },
            {
                "line": 247,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_38_0_3_1",
                "unparse_info": "norm[i] = deg_inv_sqrt[edge_index_buf_1[i]] * edge_weight[i] * deg_inv_sqrt[edge_index_buf_1[108365 + i]];",
                "type": "stmt"
            },
            {
                "line": 249,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_39",
                "unparse_info": "merlin_memcpy_4(edge_index_buf_3,0,edge_index,0,(sizeof(int ) *((unsigned long )216730L)),866920UL);",
                "type": "stmt"
            },
            {
                "line": 251,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40",
                "unparse_info": "calcuresultui0:for(int i = 0;i < 88648 + 19717;++i) {#pragma HLS pipelinecalcuresultuj0:for(int j = 0;j < 16;++j) {#pragma HLS unrollfloat tmp_0;tmp_0 = memcpy_wide_bus_single_read_float_512((merlin_uint_512 *)result,((edge_index_buf_3[108365 + i] * 16 + j) * 4));tmp_0 += norm[i] * x_mul[edge_index_buf_3[i]][j];memcpy_wide_bus_single_write_float_512((merlin_uint_512 *)result,tmp_0,(4 *(edge_index_buf_3[108365 + i] * 16 + j)));}}",
                "type": "stmt"
            },
            {
                "line": 252,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_40_0",
                "unparse_info": "for(int i = 0;i < 88648 + 19717;++i) {...}",
                "type": "stmt"
            },
            {
                "line": 252,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_0",
                "unparse_info": "int i = 0;;",
                "type": "stmt"
            },
            {
                "line": 252,
                "col": 8,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_40_0_0_0",
                "unparse_info": "int i = 0;",
                "type": "stmt"
            },
            {
                "line": 252,
                "col": 19,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_1",
                "unparse_info": "i < 88648 + 19717;",
                "type": "stmt"
            },
            {
                "line": 254,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3",
                "unparse_info": "{#pragma HLS pipelinecalcuresultuj0:for(int j = 0;j < 16;++j) {#pragma HLS unrollfloat tmp_0;tmp_0 = memcpy_wide_bus_single_read_float_512((merlin_uint_512 *)result,((edge_index_buf_3[108365 + i] * 16 + j) * 4));tmp_0 += norm[i] * x_mul[edge_index_buf_3[i]][j];memcpy_wide_bus_single_write_float_512((merlin_uint_512 *)result,tmp_0,(4 *(edge_index_buf_3[108365 + i] * 16 + j)));}}",
                "type": "stmt"
            },
            {
                "line": 256,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_0",
                "unparse_info": "#pragma HLS pipeline",
                "type": "stmt"
            },
            {
                "line": 258,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1",
                "unparse_info": "calcuresultuj0:for(int j = 0;j < 16;++j) {#pragma HLS unrollfloat tmp_0;tmp_0 = memcpy_wide_bus_single_read_float_512((merlin_uint_512 *)result,((edge_index_buf_3[108365 + i] * 16 + j) * 4));tmp_0 += norm[i] * x_mul[edge_index_buf_3[i]][j];memcpy_wide_bus_single_write_float_512((merlin_uint_512 *)result,tmp_0,(4 *(edge_index_buf_3[108365 + i] * 16 + j)));}",
                "type": "stmt"
            },
            {
                "line": 259,
                "col": 5,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_40_0_3_1_0",
                "unparse_info": "for(int j = 0;j < 16;++j) {...}",
                "type": "stmt"
            },
            {
                "line": 259,
                "col": 10,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_0",
                "unparse_info": "int j = 0;;",
                "type": "stmt"
            },
            {
                "line": 259,
                "col": 10,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_40_0_3_1_0_0_0",
                "unparse_info": "int j = 0;",
                "type": "stmt"
            },
            {
                "line": 259,
                "col": 21,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_1",
                "unparse_info": "j < 16;",
                "type": "stmt"
            },
            {
                "line": 261,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_3",
                "unparse_info": "{#pragma HLS unrollfloat tmp_0;tmp_0 = memcpy_wide_bus_single_read_float_512((merlin_uint_512 *)result,((edge_index_buf_3[108365 + i] * 16 + j) * 4));tmp_0 += norm[i] * x_mul[edge_index_buf_3[i]][j];memcpy_wide_bus_single_write_float_512((merlin_uint_512 *)result,tmp_0,(4 *(edge_index_buf_3[108365 + i] * 16 + j)));}",
                "type": "stmt"
            },
            {
                "line": 263,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_3_0",
                "unparse_info": "#pragma HLS unroll",
                "type": "stmt"
            },
            {
                "line": 264,
                "col": 7,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "V_0_0_0_12_2_0_40_0_3_1_0_3_1",
                "unparse_info": "float tmp_0;",
                "type": "stmt"
            },
            {
                "line": 265,
                "col": 7,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_3_2",
                "unparse_info": "tmp_0 = memcpy_wide_bus_single_read_float_512((merlin_uint_512 *)result,((edge_index_buf_3[108365 + i] * 16 + j) * 4));",
                "type": "stmt"
            },
            {
                "line": 266,
                "col": 7,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_3_3",
                "unparse_info": "tmp_0 += norm[i] * x_mul[edge_index_buf_3[i]][j];",
                "type": "stmt"
            },
            {
                "line": 267,
                "col": 7,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_3_4",
                "unparse_info": "memcpy_wide_bus_single_write_float_512((merlin_uint_512 *)result,tmp_0,(4 *(edge_index_buf_3[108365 + i] * 16 + j)));",
                "type": "stmt"
            }
        ],
        "childs": [
            {
                "line": 166,
                "col": 39,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_28_0",
                "unparse_info": "memcpy_wide_bus_read_float_2d_16_512(weight_buf_0,0,0,(merlin_uint_512 *)weight,(0 * 4),sizeof(float ) *((unsigned long )8000),8000L)",
                "type": "callfunction",
                "name": "memcpy_wide_bus_read_float_2d_16_512",
                "function_id": "",
                "childs": []
            },
            {
                "line": 169,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_29_0",
                "unparse_info": "for(int i = 0;i < 19717;++i) {...}",
                "type": "loop",
                "name": "i",
                "canonical": "yes",
                "begin": "169",
                "end": "178",
                "lc-trip-count": 19717,
                "loop_label": "matrixumului0",
                "loop_body_line": 169,
                "loop_body_col": 35,
                "childs": [
                    {
                        "line": 174,
                        "col": 35,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_29_0_3_2_0",
                        "unparse_info": "memcpy_wide_bus_read_float_512(&x_buf_0[0],(merlin_uint_512 *)x,(i * 500 * 4),sizeof(float ) *((unsigned long )500),500L)",
                        "type": "callfunction",
                        "name": "memcpy_wide_bus_read_float_512",
                        "function_id": "",
                        "childs": []
                    },
                    {
                        "line": 178,
                        "col": 5,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "L_0_0_0_12_2_0_29_0_3_3_0",
                        "unparse_info": "for(int j = 0;j < 16;++j) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "178",
                        "end": "190",
                        "lc-trip-count": 16,
                        "loop_label": "matrixumuluj0",
                        "loop_body_line": 178,
                        "loop_body_col": 34,
                        "childs": [
                            {
                                "line": 182,
                                "col": 7,
                                "source": "__merlinkernel_gcnconv_kernel.cpp",
                                "topo_id": "L_0_0_0_12_2_0_29_0_3_3_0_3_1_0",
                                "unparse_info": "for(int k = 0;k < 500;++k) {...}",
                                "type": "loop",
                                "name": "k",
                                "canonical": "yes",
                                "begin": "182",
                                "end": "188",
                                "lc-trip-count": 500,
                                "loop_label": "matrixumuluk0",
                                "loop_body_line": 184,
                                "loop_body_col": 1,
                                "childs": []
                            }
                        ]
                    }
                ]
            },
            {
                "line": 192,
                "col": 18,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_30_0",
                "unparse_info": "merlin_memcpy_0(edge_index_buf_2,0,0,edge_index,88648,(sizeof(int ) *((unsigned long )128082)),512328UL)",
                "type": "callfunction",
                "name": "merlin_memcpy_0",
                "function_id": "F_0_0_0_7",
                "childs": []
            },
            {
                "line": 195,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_31_0",
                "unparse_info": "for(int i = 0;i < 19717;++i) {...}",
                "type": "loop",
                "name": "i",
                "canonical": "yes",
                "begin": "195",
                "end": "202",
                "lc-trip-count": 19717,
                "loop_label": "assignuindexui0",
                "loop_body_line": 197,
                "loop_body_col": 1,
                "childs": [
                    {
                        "line": 202,
                        "col": 5,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "L_0_0_0_12_2_0_31_0_3_1_0",
                        "unparse_info": "for(int j = 0;j < 2;++j) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "202",
                        "end": "208",
                        "lc-trip-count": 2,
                        "loop_label": "assignuindexuj0",
                        "loop_body_line": 204,
                        "loop_body_col": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    }
                ]
            },
            {
                "line": 210,
                "col": 18,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_32_0",
                "unparse_info": "merlin_memcpy_1(edge_index,88648,edge_index_buf_2,0,0,(sizeof(int ) *((unsigned long )128082)),512328UL)",
                "type": "callfunction",
                "name": "merlin_memcpy_1",
                "function_id": "F_0_0_0_8",
                "childs": []
            },
            {
                "line": 213,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_33_0",
                "unparse_info": "for(int i = 0;i < 88648 + 19717;++i) {...}",
                "type": "loop",
                "name": "i",
                "canonical": "yes",
                "begin": "213",
                "end": "219",
                "lc-trip-count": 108365,
                "loop_label": "assignuweight0",
                "loop_body_line": 215,
                "loop_body_col": 1,
                "childs": []
            },
            {
                "line": 220,
                "col": 18,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_34_0",
                "unparse_info": "merlin_memcpy_2(edge_index_buf_0,0,edge_index,0,(sizeof(int ) *((unsigned long )108365)),433460UL)",
                "type": "callfunction",
                "name": "merlin_memcpy_2",
                "function_id": "F_0_0_0_9",
                "childs": []
            },
            {
                "line": 223,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_35_0",
                "unparse_info": "for(int i = 0;i < 88648 + 19717;++i) {...}",
                "type": "loop",
                "name": "i",
                "canonical": "yes",
                "begin": "223",
                "end": "229",
                "lc-trip-count": 108365,
                "loop_label": "incudegree0",
                "loop_body_line": 225,
                "loop_body_col": 1,
                "childs": []
            },
            {
                "line": 232,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_36_0",
                "unparse_info": "for(int i = 0;i < 19717;++i) {...}",
                "type": "loop",
                "name": "i",
                "canonical": "yes",
                "begin": "232",
                "end": "238",
                "lc-trip-count": 19717,
                "loop_label": "invert",
                "loop_body_line": 234,
                "loop_body_col": 1,
                "childs": [
                    {
                        "line": 237,
                        "col": 42,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_36_0_3_1_0_1_1",
                        "unparse_info": "sqrtf(deg[i])",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    }
                ]
            },
            {
                "line": 239,
                "col": 18,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_37_0",
                "unparse_info": "merlin_memcpy_3(edge_index_buf_1,0,edge_index,0,(sizeof(int ) *((unsigned long )216730L)),866920UL)",
                "type": "callfunction",
                "name": "merlin_memcpy_3",
                "function_id": "F_0_0_0_10",
                "childs": []
            },
            {
                "line": 242,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_38_0",
                "unparse_info": "for(int i = 0;i < 88648 + 19717;++i) {...}",
                "type": "loop",
                "name": "i",
                "canonical": "yes",
                "begin": "242",
                "end": "248",
                "lc-trip-count": 108365,
                "loop_label": "assignunorm0",
                "loop_body_line": 244,
                "loop_body_col": 1,
                "childs": []
            },
            {
                "line": 249,
                "col": 18,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "X_0_0_0_12_2_0_39_0",
                "unparse_info": "merlin_memcpy_4(edge_index_buf_3,0,edge_index,0,(sizeof(int ) *((unsigned long )216730L)),866920UL)",
                "type": "callfunction",
                "name": "merlin_memcpy_4",
                "function_id": "F_0_0_0_11",
                "childs": []
            },
            {
                "line": 252,
                "col": 3,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "L_0_0_0_12_2_0_40_0",
                "unparse_info": "for(int i = 0;i < 88648 + 19717;++i) {...}",
                "type": "loop",
                "name": "i",
                "canonical": "yes",
                "begin": "252",
                "end": "259",
                "lc-trip-count": 108365,
                "loop_label": "calcuresultui0",
                "loop_body_line": 254,
                "loop_body_col": 1,
                "childs": [
                    {
                        "line": 259,
                        "col": 5,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "L_0_0_0_12_2_0_40_0_3_1_0",
                        "unparse_info": "for(int j = 0;j < 16;++j) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "259",
                        "end": "268",
                        "lc-trip-count": 16,
                        "loop_label": "calcuresultuj0",
                        "loop_body_line": 261,
                        "loop_body_col": 1,
                        "childs": [
                            {
                                "line": 265,
                                "col": 52,
                                "source": "__merlinkernel_gcnconv_kernel.cpp",
                                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_3_2_0_1",
                                "unparse_info": "memcpy_wide_bus_single_read_float_512((merlin_uint_512 *)result,((edge_index_buf_3[108365 + i] * 16 + j) * 4))",
                                "type": "callfunction",
                                "name": "memcpy_wide_bus_single_read_float_512",
                                "function_id": "",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 267,
                                "col": 45,
                                "source": "__merlinkernel_gcnconv_kernel.cpp",
                                "topo_id": "X_0_0_0_12_2_0_40_0_3_1_0_3_4_0",
                                "unparse_info": "memcpy_wide_bus_single_write_float_512((merlin_uint_512 *)result,tmp_0,(4 *(edge_index_buf_3[108365 + i] * 16 + j)))",
                                "type": "callfunction",
                                "name": "memcpy_wide_bus_single_write_float_512",
                                "function_id": "",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    }
                ]
            }
        ],
        "sub_functions": [
            {
                "line": 1048,
                "col": 1,
                "source": "mars_wide_bus_2d.h",
                "topo_id": "is_skipped_node",
                "unparse_info": "void memcpy_wide_bus_read_float_2d_16_512(float [][16] a_buf,::size_t index2_offset,::size_t index1_offset,::merlin_uint_512* a,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size) {...}",
                "type": "function",
                "name": "memcpy_wide_bus_read_float_2d_16_512",
                "begin": "1051",
                "end": "1097",
                "arrays": [],
                "childs": [
                    {
                        "line": 1082,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"len <= const_buf_size / num_elements + 2\",\"mars_wide_bus_2d.h\",1082,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    },
                    {
                        "line": 1083,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"len >= buf_size / num_elements\",\"mars_wide_bus_2d.h\",1083,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    },
                    {
                        "line": 1085,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "1085",
                        "end": "1092",
                        "lc-trip-count": 16,
                        "childs": [
                            {
                                "line": 1090,
                                "col": 22,
                                "source": "mars_wide_bus_2d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "(merlin_get_range_512(&a[start],(j * data_width),data_width))",
                                "type": "callfunction",
                                "name": "merlin_get_range_512",
                                "function_id": "",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 1097,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < len;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "1097",
                        "end": "1140",
                        "lc-trip-count": 0,
                        "loop_label": "L2",
                        "loop_body_line": 1097,
                        "loop_body_col": 29,
                        "childs": [
                            {
                                "line": 1106,
                                "col": 9,
                                "source": "mars_wide_bus_2d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "1106",
                                "end": "1112",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 1110,
                                        "col": 26,
                                        "source": "mars_wide_bus_2d.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 1116,
                                "col": 9,
                                "source": "mars_wide_bus_2d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j0 = 0;j0 < bound0;++j0) {...}",
                                "type": "loop",
                                "name": "j0",
                                "canonical": "yes",
                                "begin": "1116",
                                "end": "1124",
                                "lc-trip-count": 1,
                                "childs": [
                                    {
                                        "line": 1117,
                                        "col": 11,
                                        "source": "mars_wide_bus_2d.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "for(j1 = 0;j1 < 16;++j1) {...}",
                                        "type": "loop",
                                        "name": "j1",
                                        "canonical": "yes",
                                        "begin": "1117",
                                        "end": "1123",
                                        "lc-trip-count": 16,
                                        "childs": [
                                            {
                                                "line": 1121,
                                                "col": 28,
                                                "source": "mars_wide_bus_2d.h",
                                                "topo_id": "is_skipped_node",
                                                "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                                "type": "callfunction",
                                                "name": "merlin_get_range_512",
                                                "function_id": "",
                                                "childs": []
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "line": 1128,
                                "col": 7,
                                "source": "mars_wide_bus_2d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "1128",
                                "end": "1137",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 1134,
                                        "col": 24,
                                        "source": "mars_wide_bus_2d.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            }
                        ]
                    }
                ],
                "var_refs": [
                    {
                        "line": 1082,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    },
                    {
                        "line": 1083,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    },
                    {
                        "line": 1090,
                        "col": 22,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 1091,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 1110,
                        "col": 26,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 1111,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 1121,
                        "col": 28,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 1122,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 1134,
                        "col": 24,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 1136,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    }
                ],
                "var_defs": [
                    {
                        "line": 1053,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1054,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bus_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1055,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "num_elements",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1056,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_size",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1057,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1058,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1059,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "new_offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1060,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tail_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1061,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1062,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "end",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1064,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1064,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1065,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1065,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1066,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index_offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1067,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bound",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1068,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bound0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1069,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1078,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1089,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_index",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1090,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1110,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1115,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1115,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1121,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1134,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1135,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_index",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 1048,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "void memcpy_wide_bus_read_float_2d_16_512(float [][16] a_buf,::size_t index2_offset,::size_t index1_offset,::merlin_uint_512* a,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1048,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float [][16] a_buf,::size_t index2_offset,::size_t index1_offset,::merlin_uint_512* a,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size",
                        "type": "stmt"
                    },
                    {
                        "line": 1051,
                        "col": 34,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "function definition: void memcpy_wide_bus_read_float_2d_16_512(float [][16] a_buf,::size_t index2_offset,::size_t index1_offset,::merlin_uint_512* a,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1051,
                        "col": 34,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS inline selfconst size_t data_width = sizeof(float );const size_t bus_width =(512 / 8);const size_t num_elements = bus_width / data_width;size_t buf_size = size_byte / data_width;size_t offset = offset_byte / data_width;size_t head_align = offset & num_elements - 1;size_t new_offset = offset + buf_size;size_t tail_align = new_offset - 1 & num_elements - 1;size_t start = offset / num_elements;size_t end =(offset + buf_size + num_elements - 1) / num_elements;size_t i;size_t j;size_t index2 = index2_offset;size_t index1 = index1_offset;const size_t index_offset = 16 * index2_offset + index1_offset;const size_t bound = 16 / num_elements;const size_t bound0 = num_elements / 16;int aligned = 0;if(16 % num_elements == 0 && index1_offset % num_elements == 0) {aligned = 1;index1 = index1_offset / num_elements;}else if(num_elements % 16 == 0 && index2_offset * 16 % num_elements == 0 && !index1_offset) {aligned = - 1;index2 = index2_offset * 16 / num_elements;}int len =(end - start);if(head_align == 0) len =((buf_size + num_elements - 1) / num_elements);len <= const_buf_size / num_elements + 2?(static_cast < void > (0)) : __assert_fail(\"len <= const_buf_size / num_elements + 2\",\"mars_wide_bus_2d.h\",1082,__PRETTY_FUNCTION__);len >= buf_size / num_elements?(static_cast < void > (0)) : __assert_fail(\"len >= buf_size / num_elements\",\"mars_wide_bus_2d.h\",1083,__PRETTY_FUNCTION__);if(1 == len) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align || j > tail_align) continue;size_t buf_index = j - head_align + index_offset;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[buf_index / 16][buf_index % 16] = *((float *)(&raw_bits));}return ;}L2:for(i = 0;i < len;++i) {#pragma HLS pipelineif(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;}else if(aligned == - 1) {int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));size_t buf_index = i * num_elements + j - head_align + index_offset;a_buf[buf_index / 16][buf_index % 16] = *((float *)(&raw_bits));}}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 1052,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS inline self",
                        "type": "stmt"
                    },
                    {
                        "line": 1053,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t data_width = sizeof(float );",
                        "type": "stmt"
                    },
                    {
                        "line": 1054,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bus_width =(512 / 8);",
                        "type": "stmt"
                    },
                    {
                        "line": 1055,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t num_elements = bus_width / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 1056,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buf_size = size_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 1057,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t offset = offset_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 1058,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t head_align = offset & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1059,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t new_offset = offset + buf_size;",
                        "type": "stmt"
                    },
                    {
                        "line": 1060,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t tail_align = new_offset - 1 & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1061,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t start = offset / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1062,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t end =(offset + buf_size + num_elements - 1) / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1064,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t i;",
                        "type": "stmt"
                    },
                    {
                        "line": 1064,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t j;",
                        "type": "stmt"
                    },
                    {
                        "line": 1065,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t index2 = index2_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 1065,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t index1 = index1_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 1066,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t index_offset = 16 * index2_offset + index1_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 1067,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bound = 16 / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1068,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bound0 = num_elements / 16;",
                        "type": "stmt"
                    },
                    {
                        "line": 1069,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int aligned = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1070,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(16 % num_elements == 0 && index1_offset % num_elements == 0) {aligned = 1;index1 = index1_offset / num_elements;}else if(num_elements % 16 == 0 && index2_offset * 16 % num_elements == 0 && !index1_offset) {aligned = - 1;index2 = index2_offset * 16 / num_elements;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1070,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "16 % num_elements == 0 && index1_offset % num_elements == 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1070,
                        "col": 76,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{aligned = 1;index1 = index1_offset / num_elements;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1071,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned = 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1072,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1 = index1_offset / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1073,
                        "col": 10,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(num_elements % 16 == 0 && index2_offset * 16 % num_elements == 0 && !index1_offset) {aligned = - 1;index2 = index2_offset * 16 / num_elements;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1073,
                        "col": 14,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "num_elements % 16 == 0 && index2_offset * 16 % num_elements == 0 && !index1_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 1074,
                        "col": 80,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{aligned = - 1;index2 = index2_offset * 16 / num_elements;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1075,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned = - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1076,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2 = index2_offset * 16 / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1078,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int len =(end - start);",
                        "type": "stmt"
                    },
                    {
                        "line": 1079,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 0) len =((buf_size + num_elements - 1) / num_elements);",
                        "type": "stmt"
                    },
                    {
                        "line": 1079,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1080,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len =((buf_size + num_elements - 1) / num_elements);",
                        "type": "stmt"
                    },
                    {
                        "line": 1082,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len <= const_buf_size / num_elements + 2?(static_cast < void > (0)) : __assert_fail(\"len <= const_buf_size / num_elements + 2\",\"mars_wide_bus_2d.h\",1082,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 1083,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len >= buf_size / num_elements?(static_cast < void > (0)) : __assert_fail(\"len >= buf_size / num_elements\",\"mars_wide_bus_2d.h\",1083,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 1084,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(1 == len) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align || j > tail_align) continue;size_t buf_index = j - head_align + index_offset;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[buf_index / 16][buf_index % 16] = *((float *)(&raw_bits));}return ;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1084,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "1 == len;",
                        "type": "stmt"
                    },
                    {
                        "line": 1084,
                        "col": 17,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align || j > tail_align) continue;size_t buf_index = j - head_align + index_offset;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[buf_index / 16][buf_index % 16] = *((float *)(&raw_bits));}return ;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1085,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1085,
                        "col": 10,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 1085,
                        "col": 10,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1085,
                        "col": 17,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1085,
                        "col": 40,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(j < head_align || j > tail_align) continue;size_t buf_index = j - head_align + index_offset;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[buf_index / 16][buf_index % 16] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 1086,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 1087,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(j < head_align || j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1087,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < head_align || j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 1088,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1089,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buf_index = j - head_align + index_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 1090,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 1091,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[buf_index / 16][buf_index % 16] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 1093,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "return ;",
                        "type": "stmt"
                    },
                    {
                        "line": 1096,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "L2:for(i = 0;i < len;++i) {#pragma HLS pipelineif(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;}else if(aligned == - 1) {int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));size_t buf_index = i * num_elements + j - head_align + index_offset;a_buf[buf_index / 16][buf_index % 16] = *((float *)(&raw_bits));}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 1097,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < len;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1097,
                        "col": 8,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 1097,
                        "col": 8,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1097,
                        "col": 15,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < len;",
                        "type": "stmt"
                    },
                    {
                        "line": 1097,
                        "col": 29,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS pipelineif(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;}else if(aligned == - 1) {int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));size_t buf_index = i * num_elements + j - head_align + index_offset;a_buf[buf_index / 16][buf_index % 16] = *((float *)(&raw_bits));}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 1101,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS pipeline",
                        "type": "stmt"
                    },
                    {
                        "line": 1104,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;}else if(aligned == - 1) {int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));size_t buf_index = i * num_elements + j - head_align + index_offset;a_buf[buf_index / 16][buf_index % 16] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 1104,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 0 && aligned;",
                        "type": "stmt"
                    },
                    {
                        "line": 1104,
                        "col": 37,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;}else if(aligned == - 1) {int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}}",
                        "type": "stmt"
                    },
                    {
                        "line": 1105,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;}else if(aligned == - 1) {int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1105,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1105,
                        "col": 25,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1106,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1106,
                        "col": 14,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 1106,
                        "col": 14,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1106,
                        "col": 21,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1106,
                        "col": 44,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 1107,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 1108,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1108,
                        "col": 15,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 1109,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1110,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 1111,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 1113,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;",
                        "type": "stmt"
                    },
                    {
                        "line": 1113,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1 == bound - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1113,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{index1 = 0;++index2;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1113,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1113,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "++index2;",
                        "type": "stmt"
                    },
                    {
                        "line": 1113,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1++;",
                        "type": "stmt"
                    },
                    {
                        "line": 1114,
                        "col": 14,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(aligned == - 1) {int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1114,
                        "col": 18,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned == - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1114,
                        "col": 33,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1115,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int j0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1115,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int j1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1116,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j0 = 0;j0 < bound0;++j0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1116,
                        "col": 14,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 1116,
                        "col": 14,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1116,
                        "col": 22,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 < bound0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1116,
                        "col": 41,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 1117,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j1 = 0;j1 < 16;++j1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1117,
                        "col": 16,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 1117,
                        "col": 16,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1117,
                        "col": 24,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 < 16;",
                        "type": "stmt"
                    },
                    {
                        "line": 1117,
                        "col": 43,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 1118,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j =(j0 * 16 + j1);",
                        "type": "stmt"
                    },
                    {
                        "line": 1119,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1119,
                        "col": 17,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 1120,
                        "col": 15,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1121,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 1122,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 1125,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2++;",
                        "type": "stmt"
                    },
                    {
                        "line": 1127,
                        "col": 12,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));size_t buf_index = i * num_elements + j - head_align + index_offset;a_buf[buf_index / 16][buf_index % 16] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 1128,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1128,
                        "col": 12,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 1128,
                        "col": 12,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1128,
                        "col": 19,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1128,
                        "col": 42,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));size_t buf_index = i * num_elements + j - head_align + index_offset;a_buf[buf_index / 16][buf_index % 16] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 1129,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 1130,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < head_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1130,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < head_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 1131,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1132,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1132,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 1133,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1134,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 1135,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buf_index = i * num_elements + j - head_align + index_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 1136,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[buf_index / 16][buf_index % 16] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 8,
                "col": 1,
                "source": "memcpy_512.h",
                "topo_id": "is_skipped_node",
                "unparse_info": "::uint64_t merlin_get_range_512(::merlin_uint_512* tmp,int low,int len) {...}",
                "type": "function",
                "name": "merlin_get_range_512",
                "begin": "8",
                "end": "46",
                "arrays": [],
                "childs": [
                    {
                        "line": 15,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i >= 0;--i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "15",
                        "end": "19",
                        "lc-trip-count": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 22,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 1;i >= 0;--i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "22",
                        "end": "26",
                        "lc-trip-count": 2,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 29,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 3;i >= 0;--i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "29",
                        "end": "33",
                        "lc-trip-count": 4,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 36,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 7;i >= 0;--i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "36",
                        "end": "40",
                        "lc-trip-count": 8,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 43,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"0\",\"memcpy_512.h\",43,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 18,
                        "col": 14,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 18,
                        "col": 19,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 25,
                        "col": 14,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 25,
                        "col": 19,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 32,
                        "col": 14,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 32,
                        "col": 19,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 39,
                        "col": 14,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 39,
                        "col": 19,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 43,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    }
                ],
                "var_defs": [
                    {
                        "line": 10,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 11,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 12,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 8,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "::uint64_t merlin_get_range_512(::merlin_uint_512* tmp,int low,int len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 8,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "::merlin_uint_512* tmp,int low,int len",
                        "type": "stmt"
                    },
                    {
                        "line": 8,
                        "col": 78,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "function definition: ::uint64_t merlin_get_range_512(::merlin_uint_512* tmp,int low,int len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 8,
                        "col": 78,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS INLINE SELFuint64_t ret = 0;int i;int start = low;switch(len){case 1:for(i = 0;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 2:for(i = 1;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 4:for(i = 3;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 8:for(i = 7;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_512.h\",43,__PRETTY_FUNCTION__);}return ret;}",
                        "type": "stmt"
                    },
                    {
                        "line": 9,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS INLINE SELF",
                        "type": "stmt"
                    },
                    {
                        "line": 10,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "uint64_t ret = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 11,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int i;",
                        "type": "stmt"
                    },
                    {
                        "line": 12,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int start = low;",
                        "type": "stmt"
                    },
                    {
                        "line": 13,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "switch(len){case 1:for(i = 0;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 2:for(i = 1;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 4:for(i = 3;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 8:for(i = 7;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_512.h\",43,__PRETTY_FUNCTION__);}",
                        "type": "stmt"
                    },
                    {
                        "line": 13,
                        "col": 11,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len;",
                        "type": "stmt"
                    },
                    {
                        "line": 13,
                        "col": 16,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{case 1:for(i = 0;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 2:for(i = 1;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 4:for(i = 3;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 8:for(i = 7;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_512.h\",43,__PRETTY_FUNCTION__);}",
                        "type": "stmt"
                    },
                    {
                        "line": 14,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 1:for(i = 0;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 15,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i >= 0;--i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 15,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 15,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 15,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i >= 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 15,
                        "col": 30,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 16,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 17,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret <<= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 18,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret |= tmp -> data[i + start];",
                        "type": "stmt"
                    },
                    {
                        "line": 20,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 21,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 2:for(i = 1;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 1;i >= 0;--i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 1;;",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i >= 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 30,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 23,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 24,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret <<= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 25,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret |= tmp -> data[i + start];",
                        "type": "stmt"
                    },
                    {
                        "line": 27,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 28,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 4:for(i = 3;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 3;i >= 0;--i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 3;;",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 3;",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i >= 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 30,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 30,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 31,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret <<= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 32,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret |= tmp -> data[i + start];",
                        "type": "stmt"
                    },
                    {
                        "line": 34,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 35,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 8:for(i = 7;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 7;i >= 0;--i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 7;;",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 7;",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i >= 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 30,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 37,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 38,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret <<= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 39,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret |= tmp -> data[i + start];",
                        "type": "stmt"
                    },
                    {
                        "line": 41,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 42,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_512.h\",43,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 43,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_512.h\",43,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 45,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "return ret;",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 3328,
                "col": 1,
                "source": "mars_wide_bus.h",
                "topo_id": "is_skipped_node",
                "unparse_info": "void memcpy_wide_bus_read_float_512(float * a_buf,::merlin_uint_512* a,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size) {...}",
                "type": "function",
                "name": "memcpy_wide_bus_read_float_512",
                "begin": "3331",
                "end": "3363",
                "arrays": [],
                "childs": [
                    {
                        "line": 3349,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"len <= const_buf_size / num_elements + 2\",\"mars_wide_bus.h\",3349,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    },
                    {
                        "line": 3350,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"len >= buf_size / num_elements\",\"mars_wide_bus.h\",3350,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    },
                    {
                        "line": 3352,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "3352",
                        "end": "3358",
                        "lc-trip-count": 16,
                        "childs": [
                            {
                                "line": 3356,
                                "col": 22,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "(merlin_get_range_512(&a[start],(j * data_width),data_width))",
                                "type": "callfunction",
                                "name": "merlin_get_range_512",
                                "function_id": "",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 3363,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < len;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "3363",
                        "end": "3574",
                        "lc-trip-count": 0,
                        "loop_label": "L2",
                        "loop_body_line": 3363,
                        "loop_body_col": 29,
                        "childs": [
                            {
                                "line": 3371,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3371",
                                "end": "3377",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3375,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3381,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3381",
                                "end": "3389",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3387,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3393,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3393",
                                "end": "3401",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3399,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3405,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3405",
                                "end": "3413",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3411,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3417,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3417",
                                "end": "3425",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3423,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3429,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3429",
                                "end": "3437",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3435,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3441,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3441",
                                "end": "3449",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3447,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3453,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3453",
                                "end": "3461",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3459,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3465,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3465",
                                "end": "3473",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3471,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3477,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3477",
                                "end": "3485",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3483,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3489,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3489",
                                "end": "3497",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3495,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3501,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3501",
                                "end": "3509",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3507,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3513,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3513",
                                "end": "3521",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3519,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3525,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3525",
                                "end": "3533",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3531,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3537,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3537",
                                "end": "3545",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3543,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3549,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3549",
                                "end": "3557",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3555,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            }
                        ]
                    }
                ],
                "var_refs": [
                    {
                        "line": 3349,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    },
                    {
                        "line": 3350,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    },
                    {
                        "line": 3356,
                        "col": 22,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3357,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3375,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3376,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3387,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3388,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3399,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3400,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3411,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3412,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3423,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3424,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3435,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3436,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3447,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3448,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3459,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3460,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3471,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3472,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3483,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3484,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3495,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3496,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3507,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3508,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3519,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3520,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3531,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3532,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3543,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3544,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3555,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3556,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    }
                ],
                "var_defs": [
                    {
                        "line": 3333,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3334,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bus_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3335,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "num_elements",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3336,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_size",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3337,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3338,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3339,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "new_offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3340,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tail_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3341,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3342,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "end",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3344,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3344,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3345,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3356,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3375,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3387,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3399,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3411,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3423,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3435,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3447,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3459,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3471,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3483,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3495,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3507,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3519,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3531,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3543,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3555,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 3328,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "void memcpy_wide_bus_read_float_512(float * a_buf,::merlin_uint_512* a,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3328,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float * a_buf,::merlin_uint_512* a,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size",
                        "type": "stmt"
                    },
                    {
                        "line": 3331,
                        "col": 69,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "function definition: void memcpy_wide_bus_read_float_512(float * a_buf,::merlin_uint_512* a,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3331,
                        "col": 69,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS inline selfconst size_t data_width = sizeof(float );const size_t bus_width =(512 / 8);const size_t num_elements = bus_width / data_width;size_t buf_size = size_byte / data_width;size_t offset = offset_byte / data_width;size_t head_align = offset & num_elements - 1;size_t new_offset = offset + buf_size;size_t tail_align = new_offset - 1 & num_elements - 1;size_t start = offset / num_elements;size_t end =(offset + buf_size + num_elements - 1) / num_elements;size_t i;size_t j;int len =(end - start);if(head_align == 0) {len =((buf_size + num_elements - 1) / num_elements);}len <= const_buf_size / num_elements + 2?(static_cast < void > (0)) : __assert_fail(\"len <= const_buf_size / num_elements + 2\",\"mars_wide_bus.h\",3349,__PRETTY_FUNCTION__);len >= buf_size / num_elements?(static_cast < void > (0)) : __assert_fail(\"len >= buf_size / num_elements\",\"mars_wide_bus.h\",3350,__PRETTY_FUNCTION__);if(1 == len) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align || j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[j - head_align] = *((float *)(&raw_bits));}return ;}L2:for(i = 0;i < len;++i) {#pragma HLS pipelineif(head_align == 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 0] = *((float *)(&raw_bits));}}else if(head_align == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 1) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));}}else if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3332,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS inline self",
                        "type": "stmt"
                    },
                    {
                        "line": 3333,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t data_width = sizeof(float );",
                        "type": "stmt"
                    },
                    {
                        "line": 3334,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bus_width =(512 / 8);",
                        "type": "stmt"
                    },
                    {
                        "line": 3335,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t num_elements = bus_width / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 3336,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buf_size = size_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 3337,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t offset = offset_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 3338,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t head_align = offset & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 3339,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t new_offset = offset + buf_size;",
                        "type": "stmt"
                    },
                    {
                        "line": 3340,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t tail_align = new_offset - 1 & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 3341,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t start = offset / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3342,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t end =(offset + buf_size + num_elements - 1) / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3344,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t i;",
                        "type": "stmt"
                    },
                    {
                        "line": 3344,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t j;",
                        "type": "stmt"
                    },
                    {
                        "line": 3345,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int len =(end - start);",
                        "type": "stmt"
                    },
                    {
                        "line": 3346,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 0) {len =((buf_size + num_elements - 1) / num_elements);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3346,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3346,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{len =((buf_size + num_elements - 1) / num_elements);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3347,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len =((buf_size + num_elements - 1) / num_elements);",
                        "type": "stmt"
                    },
                    {
                        "line": 3349,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len <= const_buf_size / num_elements + 2?(static_cast < void > (0)) : __assert_fail(\"len <= const_buf_size / num_elements + 2\",\"mars_wide_bus.h\",3349,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 3350,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len >= buf_size / num_elements?(static_cast < void > (0)) : __assert_fail(\"len >= buf_size / num_elements\",\"mars_wide_bus.h\",3350,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 3351,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(1 == len) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align || j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[j - head_align] = *((float *)(&raw_bits));}return ;}",
                        "type": "stmt"
                    },
                    {
                        "line": 3351,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "1 == len;",
                        "type": "stmt"
                    },
                    {
                        "line": 3351,
                        "col": 17,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align || j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[j - head_align] = *((float *)(&raw_bits));}return ;}",
                        "type": "stmt"
                    },
                    {
                        "line": 3352,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3352,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3352,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3352,
                        "col": 17,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3352,
                        "col": 40,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(j < head_align || j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[j - head_align] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3353,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3354,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(j < head_align || j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3354,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < head_align || j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3355,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3356,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3357,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[j - head_align] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3359,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "return ;",
                        "type": "stmt"
                    },
                    {
                        "line": 3362,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "L2:for(i = 0;i < len;++i) {#pragma HLS pipelineif(head_align == 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 0] = *((float *)(&raw_bits));}}else if(head_align == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 1) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));}}else if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3363,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < len;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3363,
                        "col": 8,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3363,
                        "col": 8,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3363,
                        "col": 15,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < len;",
                        "type": "stmt"
                    },
                    {
                        "line": 3363,
                        "col": 29,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS pipelineif(head_align == 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 0] = *((float *)(&raw_bits));}}else if(head_align == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 1) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));}}else if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3367,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS pipeline",
                        "type": "stmt"
                    },
                    {
                        "line": 3370,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 0] = *((float *)(&raw_bits));}}else if(head_align == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 1) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));}}else if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3370,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3370,
                        "col": 26,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 0] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3371,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3371,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3371,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3371,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3371,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 0] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3372,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3373,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3373,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3374,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3375,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3376,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 0] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3380,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 1) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));}}else if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3380,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 3380,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 1) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3381,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3381,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3381,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3381,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3381,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 1) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3382,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3383,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 1) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3383,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 3384,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3385,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3385,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3386,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3387,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3388,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3392,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3392,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 3392,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3393,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3393,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3393,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3393,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3393,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3394,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3395,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 2) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3395,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 3396,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3397,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3397,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3398,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3399,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3400,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3404,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3404,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 3;",
                        "type": "stmt"
                    },
                    {
                        "line": 3404,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3405,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3405,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3405,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3405,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3405,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3406,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3407,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 3) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3407,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 3;",
                        "type": "stmt"
                    },
                    {
                        "line": 3408,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3409,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3409,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3410,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3411,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3412,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3416,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3416,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 4;",
                        "type": "stmt"
                    },
                    {
                        "line": 3416,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3417,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3417,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3417,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3417,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3417,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3418,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3419,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 4) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3419,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 4;",
                        "type": "stmt"
                    },
                    {
                        "line": 3420,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3421,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3421,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3422,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3423,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3424,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3428,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3428,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 5;",
                        "type": "stmt"
                    },
                    {
                        "line": 3428,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3429,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3429,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3429,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3429,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3429,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3430,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3431,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 5) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3431,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 5;",
                        "type": "stmt"
                    },
                    {
                        "line": 3432,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3433,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3433,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3434,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3435,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3436,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3440,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3440,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 6;",
                        "type": "stmt"
                    },
                    {
                        "line": 3440,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3441,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3441,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3441,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3441,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3441,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3442,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3443,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 6) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3443,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 6;",
                        "type": "stmt"
                    },
                    {
                        "line": 3444,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3445,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3445,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3446,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3447,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3448,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3452,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3452,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 7;",
                        "type": "stmt"
                    },
                    {
                        "line": 3452,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3453,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3453,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3453,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3453,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3453,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3454,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3455,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 7) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3455,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 7;",
                        "type": "stmt"
                    },
                    {
                        "line": 3456,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3457,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3457,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3458,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3459,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3460,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3464,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3464,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 3464,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3465,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3465,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3465,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3465,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3465,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3466,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3467,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 8) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3467,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 3468,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3469,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3469,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3470,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3471,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3472,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3476,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3476,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 9;",
                        "type": "stmt"
                    },
                    {
                        "line": 3476,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3477,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3477,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3477,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3477,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3477,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3478,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3479,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 9) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3479,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 9;",
                        "type": "stmt"
                    },
                    {
                        "line": 3480,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3481,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3481,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3482,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3483,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3484,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3488,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3488,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 10;",
                        "type": "stmt"
                    },
                    {
                        "line": 3488,
                        "col": 32,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3489,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3489,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3489,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3489,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3489,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3490,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3491,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 10) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3491,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 10;",
                        "type": "stmt"
                    },
                    {
                        "line": 3492,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3493,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3493,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3494,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3495,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3496,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3500,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3500,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 11;",
                        "type": "stmt"
                    },
                    {
                        "line": 3500,
                        "col": 32,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3501,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3501,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3501,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3501,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3501,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3502,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3503,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 11) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3503,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 11;",
                        "type": "stmt"
                    },
                    {
                        "line": 3504,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3505,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3505,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3506,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3507,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3508,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3512,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3512,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 12;",
                        "type": "stmt"
                    },
                    {
                        "line": 3512,
                        "col": 32,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3513,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3513,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3513,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3513,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3513,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3514,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3515,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 12) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3515,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 12;",
                        "type": "stmt"
                    },
                    {
                        "line": 3516,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3517,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3517,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3518,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3519,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3520,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3524,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3524,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 13;",
                        "type": "stmt"
                    },
                    {
                        "line": 3524,
                        "col": 32,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3525,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3525,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3525,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3525,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3525,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3526,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3527,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 13) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3527,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 13;",
                        "type": "stmt"
                    },
                    {
                        "line": 3528,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3529,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3529,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3530,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3531,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3532,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3536,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3536,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 14;",
                        "type": "stmt"
                    },
                    {
                        "line": 3536,
                        "col": 32,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3537,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3537,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3537,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3537,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3537,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3538,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3539,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 14) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3539,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 14;",
                        "type": "stmt"
                    },
                    {
                        "line": 3540,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3541,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3541,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3542,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3543,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3544,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3548,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3549,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3549,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3549,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3549,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3549,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3550,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3551,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 15) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3551,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 15;",
                        "type": "stmt"
                    },
                    {
                        "line": 3552,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3553,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3553,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3554,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3555,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3556,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 21,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "F_0_0_0_7",
                "unparse_info": "void merlin_memcpy_0(int [2][108365] dst,int dst_idx_0,int dst_idx_1,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len) {...}",
                "type": "function",
                "name": "merlin_memcpy_0",
                "begin": "22",
                "end": "31",
                "arrays": [],
                "childs": [
                    {
                        "line": 31,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "L_0_0_0_7_2_0_5_0",
                        "unparse_info": "for(i = 0;i <(len / 4);++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "31",
                        "end": "37",
                        "lc-trip-count": 0,
                        "loop_label": "merlinL0",
                        "loop_body_line": 31,
                        "loop_body_col": 33,
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 36,
                        "col": 5,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_5_0_3_2_0_0_0_0",
                        "unparse_info": "dst",
                        "type": "var_ref",
                        "name": "dst"
                    },
                    {
                        "line": 36,
                        "col": 71,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_5_0_3_2_0_1_0",
                        "unparse_info": "src",
                        "type": "var_ref",
                        "name": "src"
                    }
                ],
                "var_defs": [
                    {
                        "line": 27,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_2_1",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 28,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_3_1",
                        "unparse_info": "total_offset1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 29,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_4_1",
                        "unparse_info": "total_offset2",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 21,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "F_0_0_0_7",
                        "unparse_info": "void merlin_memcpy_0(int [2][108365] dst,int dst_idx_0,int dst_idx_1,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 21,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_0",
                        "unparse_info": "int [2][108365] dst,int dst_idx_0,int dst_idx_1,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "F_0_0_0_7_2",
                        "unparse_info": "function definition: void merlin_memcpy_0(int [2][108365] dst,int dst_idx_0,int dst_idx_1,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0",
                        "unparse_info": "{#pragma HLS inline off#pragma HLS function_instantiate variable=dst_idx_0,dst_idx_1,src_idx_0unsigned long i;unsigned long total_offset1 =((0 * 2 + dst_idx_0) * 108365 + dst_idx_1);unsigned long total_offset2 =(0 * 216730 + src_idx_0);merlinL0:for(i = 0;i <(len / 4);++i) {#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=128082dst[(total_offset1 + i) / 108365][(total_offset1 + i) % 108365] = src[total_offset2 + i];}}",
                        "type": "stmt"
                    },
                    {
                        "line": 24,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_0",
                        "unparse_info": "#pragma HLS inline off",
                        "type": "stmt"
                    },
                    {
                        "line": 26,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_1",
                        "unparse_info": "#pragma HLS function_instantiate variable=dst_idx_0,dst_idx_1,src_idx_0",
                        "type": "stmt"
                    },
                    {
                        "line": 27,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "V_0_0_0_7_2_0_2",
                        "unparse_info": "unsigned long i;",
                        "type": "stmt"
                    },
                    {
                        "line": 28,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "V_0_0_0_7_2_0_3",
                        "unparse_info": "unsigned long total_offset1 =((0 * 2 + dst_idx_0) * 108365 + dst_idx_1);",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "V_0_0_0_7_2_0_4",
                        "unparse_info": "unsigned long total_offset2 =(0 * 216730 + src_idx_0);",
                        "type": "stmt"
                    },
                    {
                        "line": 30,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_5",
                        "unparse_info": "merlinL0:for(i = 0;i <(len / 4);++i) {#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=128082dst[(total_offset1 + i) / 108365][(total_offset1 + i) % 108365] = src[total_offset2 + i];}",
                        "type": "stmt"
                    },
                    {
                        "line": 31,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "L_0_0_0_7_2_0_5_0",
                        "unparse_info": "for(i = 0;i <(len / 4);++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 31,
                        "col": 8,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_5_0_0",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 31,
                        "col": 8,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_5_0_0_0",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 31,
                        "col": 15,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_5_0_1",
                        "unparse_info": "i <(len / 4);",
                        "type": "stmt"
                    },
                    {
                        "line": 31,
                        "col": 33,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_5_0_3",
                        "unparse_info": "{#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=128082dst[(total_offset1 + i) / 108365][(total_offset1 + i) % 108365] = src[total_offset2 + i];}",
                        "type": "stmt"
                    },
                    {
                        "line": 33,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_5_0_3_0",
                        "unparse_info": "#pragma HLS PIPELINE II=1",
                        "type": "stmt"
                    },
                    {
                        "line": 35,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_5_0_3_1",
                        "unparse_info": "#pragma HLS LOOP_TRIPCOUNT max=128082",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 5,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_5_0_3_2",
                        "unparse_info": "dst[(total_offset1 + i) / 108365][(total_offset1 + i) % 108365] = src[total_offset2 + i];",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 40,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "F_0_0_0_8",
                "unparse_info": "void merlin_memcpy_1(int [216730] dst,int dst_idx_0,int [2][108365] src,int src_idx_0,int src_idx_1,unsigned int len,unsigned int max_len) {...}",
                "type": "function",
                "name": "merlin_memcpy_1",
                "begin": "41",
                "end": "50",
                "arrays": [],
                "childs": [
                    {
                        "line": 50,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "L_0_0_0_8_2_0_5_0",
                        "unparse_info": "for(i = 0;i <(len / 4);++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "50",
                        "end": "56",
                        "lc-trip-count": 0,
                        "loop_label": "merlinL1",
                        "loop_body_line": 50,
                        "loop_body_col": 33,
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 55,
                        "col": 5,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_5_0_3_2_0_0_0",
                        "unparse_info": "dst",
                        "type": "var_ref",
                        "name": "dst"
                    },
                    {
                        "line": 55,
                        "col": 30,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_5_0_3_2_0_1_0_0",
                        "unparse_info": "src",
                        "type": "var_ref",
                        "name": "src"
                    }
                ],
                "var_defs": [
                    {
                        "line": 46,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_2_1",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 47,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_3_1",
                        "unparse_info": "total_offset1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 48,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_4_1",
                        "unparse_info": "total_offset2",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 40,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "F_0_0_0_8",
                        "unparse_info": "void merlin_memcpy_1(int [216730] dst,int dst_idx_0,int [2][108365] src,int src_idx_0,int src_idx_1,unsigned int len,unsigned int max_len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 40,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_0",
                        "unparse_info": "int [216730] dst,int dst_idx_0,int [2][108365] src,int src_idx_0,int src_idx_1,unsigned int len,unsigned int max_len",
                        "type": "stmt"
                    },
                    {
                        "line": 41,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "F_0_0_0_8_2",
                        "unparse_info": "function definition: void merlin_memcpy_1(int [216730] dst,int dst_idx_0,int [2][108365] src,int src_idx_0,int src_idx_1,unsigned int len,unsigned int max_len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 41,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0",
                        "unparse_info": "{#pragma HLS inline off#pragma HLS function_instantiate variable=dst_idx_0,src_idx_0,src_idx_1unsigned long i;unsigned long total_offset1 =(0 * 216730 + dst_idx_0);unsigned long total_offset2 =((0 * 2 + src_idx_0) * 108365 + src_idx_1);merlinL1:for(i = 0;i <(len / 4);++i) {#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=128082dst[total_offset1 + i] = src[(total_offset2 + i) / 108365][(total_offset2 + i) % 108365];}}",
                        "type": "stmt"
                    },
                    {
                        "line": 43,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_0",
                        "unparse_info": "#pragma HLS inline off",
                        "type": "stmt"
                    },
                    {
                        "line": 45,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_1",
                        "unparse_info": "#pragma HLS function_instantiate variable=dst_idx_0,src_idx_0,src_idx_1",
                        "type": "stmt"
                    },
                    {
                        "line": 46,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "V_0_0_0_8_2_0_2",
                        "unparse_info": "unsigned long i;",
                        "type": "stmt"
                    },
                    {
                        "line": 47,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "V_0_0_0_8_2_0_3",
                        "unparse_info": "unsigned long total_offset1 =(0 * 216730 + dst_idx_0);",
                        "type": "stmt"
                    },
                    {
                        "line": 48,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "V_0_0_0_8_2_0_4",
                        "unparse_info": "unsigned long total_offset2 =((0 * 2 + src_idx_0) * 108365 + src_idx_1);",
                        "type": "stmt"
                    },
                    {
                        "line": 49,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_5",
                        "unparse_info": "merlinL1:for(i = 0;i <(len / 4);++i) {#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=128082dst[total_offset1 + i] = src[(total_offset2 + i) / 108365][(total_offset2 + i) % 108365];}",
                        "type": "stmt"
                    },
                    {
                        "line": 50,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "L_0_0_0_8_2_0_5_0",
                        "unparse_info": "for(i = 0;i <(len / 4);++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 50,
                        "col": 8,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_5_0_0",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 50,
                        "col": 8,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_5_0_0_0",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 50,
                        "col": 15,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_5_0_1",
                        "unparse_info": "i <(len / 4);",
                        "type": "stmt"
                    },
                    {
                        "line": 50,
                        "col": 33,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_5_0_3",
                        "unparse_info": "{#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=128082dst[total_offset1 + i] = src[(total_offset2 + i) / 108365][(total_offset2 + i) % 108365];}",
                        "type": "stmt"
                    },
                    {
                        "line": 52,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_5_0_3_0",
                        "unparse_info": "#pragma HLS PIPELINE II=1",
                        "type": "stmt"
                    },
                    {
                        "line": 54,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_5_0_3_1",
                        "unparse_info": "#pragma HLS LOOP_TRIPCOUNT max=128082",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 5,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_5_0_3_2",
                        "unparse_info": "dst[total_offset1 + i] = src[(total_offset2 + i) / 108365][(total_offset2 + i) % 108365];",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 59,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "F_0_0_0_9",
                "unparse_info": "void merlin_memcpy_2(int [108365] dst,int dst_idx_0,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len) {...}",
                "type": "function",
                "name": "merlin_memcpy_2",
                "begin": "60",
                "end": "69",
                "arrays": [],
                "childs": [
                    {
                        "line": 69,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "L_0_0_0_9_2_0_5_0",
                        "unparse_info": "for(i = 0;i <(len / 4);++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "69",
                        "end": "75",
                        "lc-trip-count": 0,
                        "loop_label": "merlinL2",
                        "loop_body_line": 69,
                        "loop_body_col": 33,
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 74,
                        "col": 5,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_5_0_3_2_0_0_0",
                        "unparse_info": "dst",
                        "type": "var_ref",
                        "name": "dst"
                    },
                    {
                        "line": 74,
                        "col": 30,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_5_0_3_2_0_1_0",
                        "unparse_info": "src",
                        "type": "var_ref",
                        "name": "src"
                    }
                ],
                "var_defs": [
                    {
                        "line": 65,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_2_1",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 66,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_3_1",
                        "unparse_info": "total_offset1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 67,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_4_1",
                        "unparse_info": "total_offset2",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 59,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "F_0_0_0_9",
                        "unparse_info": "void merlin_memcpy_2(int [108365] dst,int dst_idx_0,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 59,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_0",
                        "unparse_info": "int [108365] dst,int dst_idx_0,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len",
                        "type": "stmt"
                    },
                    {
                        "line": 60,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "F_0_0_0_9_2",
                        "unparse_info": "function definition: void merlin_memcpy_2(int [108365] dst,int dst_idx_0,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 60,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0",
                        "unparse_info": "{#pragma HLS inline off#pragma HLS function_instantiate variable=dst_idx_0,src_idx_0unsigned long i;unsigned long total_offset1 =(0 * 108365 + dst_idx_0);unsigned long total_offset2 =(0 * 216730 + src_idx_0);merlinL2:for(i = 0;i <(len / 4);++i) {#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=108365dst[total_offset1 + i] = src[total_offset2 + i];}}",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_0",
                        "unparse_info": "#pragma HLS inline off",
                        "type": "stmt"
                    },
                    {
                        "line": 64,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_1",
                        "unparse_info": "#pragma HLS function_instantiate variable=dst_idx_0,src_idx_0",
                        "type": "stmt"
                    },
                    {
                        "line": 65,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "V_0_0_0_9_2_0_2",
                        "unparse_info": "unsigned long i;",
                        "type": "stmt"
                    },
                    {
                        "line": 66,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "V_0_0_0_9_2_0_3",
                        "unparse_info": "unsigned long total_offset1 =(0 * 108365 + dst_idx_0);",
                        "type": "stmt"
                    },
                    {
                        "line": 67,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "V_0_0_0_9_2_0_4",
                        "unparse_info": "unsigned long total_offset2 =(0 * 216730 + src_idx_0);",
                        "type": "stmt"
                    },
                    {
                        "line": 68,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_5",
                        "unparse_info": "merlinL2:for(i = 0;i <(len / 4);++i) {#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=108365dst[total_offset1 + i] = src[total_offset2 + i];}",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "L_0_0_0_9_2_0_5_0",
                        "unparse_info": "for(i = 0;i <(len / 4);++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 8,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_5_0_0",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 8,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_5_0_0_0",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 15,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_5_0_1",
                        "unparse_info": "i <(len / 4);",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 33,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_5_0_3",
                        "unparse_info": "{#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=108365dst[total_offset1 + i] = src[total_offset2 + i];}",
                        "type": "stmt"
                    },
                    {
                        "line": 71,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_5_0_3_0",
                        "unparse_info": "#pragma HLS PIPELINE II=1",
                        "type": "stmt"
                    },
                    {
                        "line": 73,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_5_0_3_1",
                        "unparse_info": "#pragma HLS LOOP_TRIPCOUNT max=108365",
                        "type": "stmt"
                    },
                    {
                        "line": 74,
                        "col": 5,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_5_0_3_2",
                        "unparse_info": "dst[total_offset1 + i] = src[total_offset2 + i];",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 78,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "F_0_0_0_10",
                "unparse_info": "void merlin_memcpy_3(int [216730] dst,int dst_idx_0,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len) {...}",
                "type": "function",
                "name": "merlin_memcpy_3",
                "begin": "79",
                "end": "88",
                "arrays": [],
                "childs": [
                    {
                        "line": 88,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "L_0_0_0_10_2_0_5_0",
                        "unparse_info": "for(i = 0;i <(len / 4);++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "88",
                        "end": "94",
                        "lc-trip-count": 0,
                        "loop_label": "merlinL3",
                        "loop_body_line": 88,
                        "loop_body_col": 33,
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 93,
                        "col": 5,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_5_0_3_2_0_0_0",
                        "unparse_info": "dst",
                        "type": "var_ref",
                        "name": "dst"
                    },
                    {
                        "line": 93,
                        "col": 30,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_5_0_3_2_0_1_0",
                        "unparse_info": "src",
                        "type": "var_ref",
                        "name": "src"
                    }
                ],
                "var_defs": [
                    {
                        "line": 84,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_2_1",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 85,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_3_1",
                        "unparse_info": "total_offset1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 86,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_4_1",
                        "unparse_info": "total_offset2",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 78,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "F_0_0_0_10",
                        "unparse_info": "void merlin_memcpy_3(int [216730] dst,int dst_idx_0,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 78,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_0",
                        "unparse_info": "int [216730] dst,int dst_idx_0,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len",
                        "type": "stmt"
                    },
                    {
                        "line": 79,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "F_0_0_0_10_2",
                        "unparse_info": "function definition: void merlin_memcpy_3(int [216730] dst,int dst_idx_0,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 79,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0",
                        "unparse_info": "{#pragma HLS inline off#pragma HLS function_instantiate variable=dst_idx_0,src_idx_0unsigned long i;unsigned long total_offset1 =(0 * 216730 + dst_idx_0);unsigned long total_offset2 =(0 * 216730 + src_idx_0);merlinL3:for(i = 0;i <(len / 4);++i) {#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=216730dst[total_offset1 + i] = src[total_offset2 + i];}}",
                        "type": "stmt"
                    },
                    {
                        "line": 81,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_0",
                        "unparse_info": "#pragma HLS inline off",
                        "type": "stmt"
                    },
                    {
                        "line": 83,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_1",
                        "unparse_info": "#pragma HLS function_instantiate variable=dst_idx_0,src_idx_0",
                        "type": "stmt"
                    },
                    {
                        "line": 84,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "V_0_0_0_10_2_0_2",
                        "unparse_info": "unsigned long i;",
                        "type": "stmt"
                    },
                    {
                        "line": 85,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "V_0_0_0_10_2_0_3",
                        "unparse_info": "unsigned long total_offset1 =(0 * 216730 + dst_idx_0);",
                        "type": "stmt"
                    },
                    {
                        "line": 86,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "V_0_0_0_10_2_0_4",
                        "unparse_info": "unsigned long total_offset2 =(0 * 216730 + src_idx_0);",
                        "type": "stmt"
                    },
                    {
                        "line": 87,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_5",
                        "unparse_info": "merlinL3:for(i = 0;i <(len / 4);++i) {#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=216730dst[total_offset1 + i] = src[total_offset2 + i];}",
                        "type": "stmt"
                    },
                    {
                        "line": 88,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "L_0_0_0_10_2_0_5_0",
                        "unparse_info": "for(i = 0;i <(len / 4);++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 88,
                        "col": 8,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_5_0_0",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 88,
                        "col": 8,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_5_0_0_0",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 88,
                        "col": 15,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_5_0_1",
                        "unparse_info": "i <(len / 4);",
                        "type": "stmt"
                    },
                    {
                        "line": 88,
                        "col": 33,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_5_0_3",
                        "unparse_info": "{#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=216730dst[total_offset1 + i] = src[total_offset2 + i];}",
                        "type": "stmt"
                    },
                    {
                        "line": 90,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_5_0_3_0",
                        "unparse_info": "#pragma HLS PIPELINE II=1",
                        "type": "stmt"
                    },
                    {
                        "line": 92,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_5_0_3_1",
                        "unparse_info": "#pragma HLS LOOP_TRIPCOUNT max=216730",
                        "type": "stmt"
                    },
                    {
                        "line": 93,
                        "col": 5,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_5_0_3_2",
                        "unparse_info": "dst[total_offset1 + i] = src[total_offset2 + i];",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 97,
                "col": 1,
                "source": "__merlinkernel_gcnconv_kernel.cpp",
                "topo_id": "F_0_0_0_11",
                "unparse_info": "void merlin_memcpy_4(int [216730] dst,int dst_idx_0,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len) {...}",
                "type": "function",
                "name": "merlin_memcpy_4",
                "begin": "98",
                "end": "107",
                "arrays": [],
                "childs": [
                    {
                        "line": 107,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "L_0_0_0_11_2_0_5_0",
                        "unparse_info": "for(i = 0;i <(len / 4);++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "107",
                        "end": "113",
                        "lc-trip-count": 0,
                        "loop_label": "merlinL4",
                        "loop_body_line": 107,
                        "loop_body_col": 33,
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 112,
                        "col": 5,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_5_0_3_2_0_0_0",
                        "unparse_info": "dst",
                        "type": "var_ref",
                        "name": "dst"
                    },
                    {
                        "line": 112,
                        "col": 30,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_5_0_3_2_0_1_0",
                        "unparse_info": "src",
                        "type": "var_ref",
                        "name": "src"
                    }
                ],
                "var_defs": [
                    {
                        "line": 103,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_2_1",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 104,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_3_1",
                        "unparse_info": "total_offset1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 105,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_4_1",
                        "unparse_info": "total_offset2",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 97,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "F_0_0_0_11",
                        "unparse_info": "void merlin_memcpy_4(int [216730] dst,int dst_idx_0,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 97,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_0",
                        "unparse_info": "int [216730] dst,int dst_idx_0,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len",
                        "type": "stmt"
                    },
                    {
                        "line": 98,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "F_0_0_0_11_2",
                        "unparse_info": "function definition: void merlin_memcpy_4(int [216730] dst,int dst_idx_0,int [216730] src,int src_idx_0,unsigned int len,unsigned int max_len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 98,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0",
                        "unparse_info": "{#pragma HLS inline off#pragma HLS function_instantiate variable=dst_idx_0,src_idx_0unsigned long i;unsigned long total_offset1 =(0 * 216730 + dst_idx_0);unsigned long total_offset2 =(0 * 216730 + src_idx_0);merlinL4:for(i = 0;i <(len / 4);++i) {#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=216730dst[total_offset1 + i] = src[total_offset2 + i];}}",
                        "type": "stmt"
                    },
                    {
                        "line": 100,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_0",
                        "unparse_info": "#pragma HLS inline off",
                        "type": "stmt"
                    },
                    {
                        "line": 102,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_1",
                        "unparse_info": "#pragma HLS function_instantiate variable=dst_idx_0,src_idx_0",
                        "type": "stmt"
                    },
                    {
                        "line": 103,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "V_0_0_0_11_2_0_2",
                        "unparse_info": "unsigned long i;",
                        "type": "stmt"
                    },
                    {
                        "line": 104,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "V_0_0_0_11_2_0_3",
                        "unparse_info": "unsigned long total_offset1 =(0 * 216730 + dst_idx_0);",
                        "type": "stmt"
                    },
                    {
                        "line": 105,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "V_0_0_0_11_2_0_4",
                        "unparse_info": "unsigned long total_offset2 =(0 * 216730 + src_idx_0);",
                        "type": "stmt"
                    },
                    {
                        "line": 106,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_5",
                        "unparse_info": "merlinL4:for(i = 0;i <(len / 4);++i) {#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=216730dst[total_offset1 + i] = src[total_offset2 + i];}",
                        "type": "stmt"
                    },
                    {
                        "line": 107,
                        "col": 3,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "L_0_0_0_11_2_0_5_0",
                        "unparse_info": "for(i = 0;i <(len / 4);++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 107,
                        "col": 8,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_5_0_0",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 107,
                        "col": 8,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_5_0_0_0",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 107,
                        "col": 15,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_5_0_1",
                        "unparse_info": "i <(len / 4);",
                        "type": "stmt"
                    },
                    {
                        "line": 107,
                        "col": 33,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_5_0_3",
                        "unparse_info": "{#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=216730dst[total_offset1 + i] = src[total_offset2 + i];}",
                        "type": "stmt"
                    },
                    {
                        "line": 109,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_5_0_3_0",
                        "unparse_info": "#pragma HLS PIPELINE II=1",
                        "type": "stmt"
                    },
                    {
                        "line": 111,
                        "col": 1,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_5_0_3_1",
                        "unparse_info": "#pragma HLS LOOP_TRIPCOUNT max=216730",
                        "type": "stmt"
                    },
                    {
                        "line": 112,
                        "col": 5,
                        "source": "__merlinkernel_gcnconv_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_5_0_3_2",
                        "unparse_info": "dst[total_offset1 + i] = src[total_offset2 + i];",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 151,
                "col": 1,
                "source": "mars_wide_bus.h",
                "topo_id": "is_skipped_node",
                "unparse_info": "float memcpy_wide_bus_single_read_float_512(::merlin_uint_512* a,::size_t offset_byte) {...}",
                "type": "function",
                "name": "memcpy_wide_bus_single_read_float_512",
                "begin": "153",
                "end": "165",
                "arrays": [],
                "childs": [
                    {
                        "line": 162,
                        "col": 18,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "(merlin_get_range_512(&a[start],(head_align * data_width),data_width))",
                        "type": "callfunction",
                        "name": "merlin_get_range_512",
                        "function_id": "",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 162,
                        "col": 18,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    }
                ],
                "var_defs": [
                    {
                        "line": 155,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 156,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bus_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 157,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "num_elements",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 158,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 159,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 160,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 162,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 163,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 151,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float memcpy_wide_bus_single_read_float_512(::merlin_uint_512* a,::size_t offset_byte) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 151,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "::merlin_uint_512* a,::size_t offset_byte",
                        "type": "stmt"
                    },
                    {
                        "line": 153,
                        "col": 68,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "function definition: float memcpy_wide_bus_single_read_float_512(::merlin_uint_512* a,::size_t offset_byte) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 153,
                        "col": 68,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS inline selfconst size_t data_width = sizeof(float );const size_t bus_width =(512 / 8);const size_t num_elements = bus_width / data_width;size_t offset = offset_byte / data_width;size_t head_align = offset & num_elements - 1;size_t start = offset / num_elements;int raw_bits =(merlin_get_range_512(&a[start],(head_align * data_width),data_width));float ret = *((float *)(&raw_bits));return ret;}",
                        "type": "stmt"
                    },
                    {
                        "line": 154,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS inline self",
                        "type": "stmt"
                    },
                    {
                        "line": 155,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t data_width = sizeof(float );",
                        "type": "stmt"
                    },
                    {
                        "line": 156,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bus_width =(512 / 8);",
                        "type": "stmt"
                    },
                    {
                        "line": 157,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t num_elements = bus_width / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 158,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t offset = offset_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 159,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t head_align = offset & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 160,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t start = offset / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 162,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[start],(head_align * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 163,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float ret = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 164,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "return ret;",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 167,
                "col": 1,
                "source": "mars_wide_bus.h",
                "topo_id": "is_skipped_node",
                "unparse_info": "void memcpy_wide_bus_single_write_float_512(::merlin_uint_512* c,float c_buf,::size_t offset_byte) {...}",
                "type": "function",
                "name": "memcpy_wide_bus_single_write_float_512",
                "begin": "169",
                "end": "181",
                "arrays": [],
                "childs": [
                    {
                        "line": 179,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[start],(head_align * data_width),data_width,raw_bits)",
                        "type": "callfunction",
                        "name": "merlin_set_range_512",
                        "function_id": "",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 179,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    }
                ],
                "var_defs": [
                    {
                        "line": 171,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 172,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bus_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 173,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "num_elements",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 174,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 175,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 176,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 177,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 178,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 167,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "void memcpy_wide_bus_single_write_float_512(::merlin_uint_512* c,float c_buf,::size_t offset_byte) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 167,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "::merlin_uint_512* c,float c_buf,::size_t offset_byte",
                        "type": "stmt"
                    },
                    {
                        "line": 169,
                        "col": 80,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "function definition: void memcpy_wide_bus_single_write_float_512(::merlin_uint_512* c,float c_buf,::size_t offset_byte) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 169,
                        "col": 80,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS inline selfconst size_t data_width = sizeof(float );const size_t bus_width =(512 / 8);const size_t num_elements = bus_width / data_width;size_t offset = offset_byte / data_width;size_t head_align = offset & num_elements - 1;size_t start = offset / num_elements;float buf_tmp = c_buf;int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[start],(head_align * data_width),data_width,raw_bits);return ;}",
                        "type": "stmt"
                    },
                    {
                        "line": 170,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS inline self",
                        "type": "stmt"
                    },
                    {
                        "line": 171,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t data_width = sizeof(float );",
                        "type": "stmt"
                    },
                    {
                        "line": 172,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bus_width =(512 / 8);",
                        "type": "stmt"
                    },
                    {
                        "line": 173,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t num_elements = bus_width / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 174,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t offset = offset_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 175,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t head_align = offset & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 176,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t start = offset / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 177,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf;",
                        "type": "stmt"
                    },
                    {
                        "line": 178,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 179,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[start],(head_align * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 180,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "return ;",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 48,
                "col": 1,
                "source": "memcpy_512.h",
                "topo_id": "is_skipped_node",
                "unparse_info": "void merlin_set_range_512(::merlin_uint_512* tmp,int low,int len,::uint64_t val) {...}",
                "type": "function",
                "name": "merlin_set_range_512",
                "begin": "49",
                "end": "84",
                "arrays": [],
                "childs": [
                    {
                        "line": 55,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 1;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "55",
                        "end": "59",
                        "lc-trip-count": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 62,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 2;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "62",
                        "end": "66",
                        "lc-trip-count": 2,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 69,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 4;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "69",
                        "end": "73",
                        "lc-trip-count": 4,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 76,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 8;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "76",
                        "end": "80",
                        "lc-trip-count": 8,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 83,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"0\",\"memcpy_512.h\",83,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 57,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 57,
                        "col": 12,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 64,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 64,
                        "col": 12,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 71,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 71,
                        "col": 12,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 78,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 78,
                        "col": 12,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 83,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    }
                ],
                "var_defs": [
                    {
                        "line": 51,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 52,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 48,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "void merlin_set_range_512(::merlin_uint_512* tmp,int low,int len,::uint64_t val) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 48,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "::merlin_uint_512* tmp,int low,int len,::uint64_t val",
                        "type": "stmt"
                    },
                    {
                        "line": 49,
                        "col": 48,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "function definition: void merlin_set_range_512(::merlin_uint_512* tmp,int low,int len,::uint64_t val) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 49,
                        "col": 48,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS INLINE SELFint i;int start = low;switch(len){case 1:for(i = 0;i < 1;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 2:for(i = 0;i < 2;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 4:for(i = 0;i < 4;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 8:for(i = 0;i < 8;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_512.h\",83,__PRETTY_FUNCTION__);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 50,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS INLINE SELF",
                        "type": "stmt"
                    },
                    {
                        "line": 51,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int i;",
                        "type": "stmt"
                    },
                    {
                        "line": 52,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int start = low;",
                        "type": "stmt"
                    },
                    {
                        "line": 53,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "switch(len){case 1:for(i = 0;i < 1;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 2:for(i = 0;i < 2;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 4:for(i = 0;i < 4;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 8:for(i = 0;i < 8;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_512.h\",83,__PRETTY_FUNCTION__);}",
                        "type": "stmt"
                    },
                    {
                        "line": 53,
                        "col": 11,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len;",
                        "type": "stmt"
                    },
                    {
                        "line": 53,
                        "col": 16,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{case 1:for(i = 0;i < 1;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 2:for(i = 0;i < 2;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 4:for(i = 0;i < 4;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 8:for(i = 0;i < 8;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_512.h\",83,__PRETTY_FUNCTION__);}",
                        "type": "stmt"
                    },
                    {
                        "line": 54,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 1:for(i = 0;i < 1;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 1;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 29,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 56,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 57,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp -> data[start + i] =(val & 0xff);",
                        "type": "stmt"
                    },
                    {
                        "line": 58,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "val >>= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 60,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 61,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 2:for(i = 0;i < 2;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 2;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 29,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 63,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 64,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp -> data[start + i] =(val & 0xff);",
                        "type": "stmt"
                    },
                    {
                        "line": 65,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "val >>= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 67,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 68,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 4:for(i = 0;i < 4;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 4;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < 4;",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 29,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 70,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 71,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp -> data[start + i] =(val & 0xff);",
                        "type": "stmt"
                    },
                    {
                        "line": 72,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "val >>= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 74,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 75,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 8:for(i = 0;i < 8;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 8;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 29,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 77,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 78,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp -> data[start + i] =(val & 0xff);",
                        "type": "stmt"
                    },
                    {
                        "line": 79,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "val >>= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 81,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 82,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_512.h\",83,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 83,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_512.h\",83,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    }
                ]
            }
        ]
    }
]