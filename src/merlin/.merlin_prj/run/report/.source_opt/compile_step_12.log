debug mode

====== Typedef replace ========>
=> nondefine func Orig: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func REPLACE: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func Orig: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func REPLACE: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func Orig: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func REPLACE: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func Orig: SgFunctionDeclaration:void __merlin_dummy_889() {...}
=> nondefine func REPLACE: SgFunctionDeclaration:void __merlin_dummy_889() {...}
=> nondefine func Orig: SgFunctionDeclaration:void gcnconv_kernel(float [19717 * 500] x,float [500 * 16] weight,int [2 *(88648 + 197... edge_index,float [19717 * 16] result) {...}
=> nondefine func REPLACE: SgFunctionDeclaration:void gcnconv_kernel(float [19717 * 500] x,float [500 * 16] weight,int [2 *(88648 + 197... edge_index,float [19717 * 16] result) {...}
=> nondefine func Orig: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_L_() {...}
=> nondefine func REPLACE: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_L_() {...}
=> nondefine func Orig: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_L_() {...}
=> nondefine func REPLACE: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_L_() {...}
=> nondefine func Orig: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func REPLACE: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func Orig: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func REPLACE: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func Orig: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func REPLACE: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func Orig: SgFunctionDeclaration:void __merlin_dummy_kernel_pragma() {...}
=> nondefine func REPLACE: SgFunctionDeclaration:void __merlin_dummy_kernel_pragma() {...}
FUNC in: SgFunctionDeclaration:void gcnconv_kernel(float [19717 * 500] x,float [500 * 16] weight,int [2 *(88648 + 197... edge_index,float [19717 * 16] result) {...}
[print topo:]1
[print topo:]12
--result[0] 315472
--edge_index[0] 216730
--weight[0] 8000
--x[0] 9858500
==============================================
-----=# wide bus Interface Optimization Start#=----
==============================================
found the kenerl function

 Total BRAM size is 3145728 byte.
FUNC in: SgFunctionDeclaration:void gcnconv_kernel(float [19717 * 500] x,float [500 * 16] weight,int [2 *(88648 + 197... edge_index,float [19717 * 16] result) {...}
[print topo:]1
[print topo:]12
==============================================
-----=# Memory Burst Optimization Start#=----
==============================================

--result[0] 315472
--edge_index[0] 216730
--weight[0] 8000
--x[0] 9858500
[print topo:]1
infer small caching in fine grained scope for coalescing: 
access range for variable 'result' within scope '{#pragma ACCEL PIPELINE AUTOcalc_result_j:for(int j = 0;j < 16;++j) {#pragma ACCEL PARALLEL COMPLETEresult[edge_index_buf_3[108365 + i] * 16 + j] += norm[i] * x_mul[edge_index_buf_3[i]][j];}}':  
edge_index_buf_3[108365 + i] * 16..15 + edge_index_buf_3[108365 + i] * 16 exact
access range for variable 'result' within scope 'for(int i = 0;i < 88648 + 19717;++i) {...}':  
0..315471 inexact
cannot infer caching for variable 'result' because of inexact range in scope 'SgForStatement:for(int i = 0;i < 88648 + 19717;++i) {...}'
access range for variable 'result' within scope '{#pragma ACCEL PIPELINE AUTOcalc_result_j:for(int j = 0;j < 16;++j) {#pragma ACCEL PARALLEL COMPLETEresult[edge_index_buf_3[108365 + i] * 16 + j] += norm[i] * x_mul[edge_index_buf_3[i]][j];}}':  
edge_index_buf_3[108365 + i] * 16..15 + edge_index_buf_3[108365 + i] * 16 exact
access range for variable 'result' within scope '{#pragma ACCEL PIPELINE AUTOcalc_result_j:for(int j = 0;j < 16;++j) {#pragma ACCEL PARALLEL COMPLETEresult[edge_index_buf_3[108365 + i] * 16 + j] += norm[i] * x_mul[edge_index_buf_3[i]][j];}}':  
edge_index_buf_3[108365 + i] * 16..15 + edge_index_buf_3[108365 + i] * 16 exact
============================================
-----=# Memory Burst Optimization End#=----
============================================

disable wide bus for port 'edge_index' (gcnconv.cpp:11) because of sub optimial access SgExprStatement:memcpy(edge_index_buf_2[0],(const void *)(&edge_index[88648]),sizeof(int ) * 128082);
Current is in function gcnconv_kernel
x need to enlarge bit width
weight need to enlarge bit width
result need to enlarge bit width
============================================
-----=# wide bus Interface Optimization End#=----
============================================

mars_opt  __merlinwrapper_gcnconv_kernel.cpp __merlinkernel_gcnconv_kernel.cpp  -e c -p bitwidth_opt  -a impl_tool=sdaccel -a effort=standard -a generate_l2_api=on -a bus_length_threshold= -a lift_fine_grained_cache= -a debug_mode=debug  -I/home/centos/CS_259/Project/GCN_FPGA/src/merlin -I/home/centos/CS_259/Project/GCN_FPGA/src/merlin/./ -I/opt/merlin/build/..//mars-gen/lib/merlin -I /opt/merlin/build/..//mars-gen/lib/merlin -I /opt/merlin/build/..//source-opt/include/apint_include -a cflags="-D XILINX"
mars_opt  __merlinwrapper_gcnconv_kernel.cpp __merlinkernel_gcnconv_kernel.cpp  -e c -p bitwidth_opt  -a impl_tool=sdaccel -a effort=standard -a generate_l2_api=on -a bus_length_threshold= -a lift_fine_grained_cache= -a debug_mode=debug  -I/home/centos/CS_259/Project/GCN_FPGA/src/merlin -I/home/centos/CS_259/Project/GCN_FPGA/src/merlin/./ -I/opt/merlin/build/..//mars-gen/lib/merlin -I /opt/merlin/build/..//mars-gen/lib/merlin -I /opt/merlin/build/..//source-opt/include/apint_include -a cflags="-D XILINX"
