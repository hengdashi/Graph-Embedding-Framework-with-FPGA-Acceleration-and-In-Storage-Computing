************************************************************************************
 Merlin Compiler (TM) Version 2019.4.dev (sprint-35-26-g192e097.13153)
 Built Sun Oct 20 23:49:59 2019 -0700
 Copyright (C) 2015-2019 Falcon Computing Solutions, Inc. All Rights Reserved.
************************************************************************************

====================================================================================
Summary
====================================================================================

Date: 2019-12-02 22:33:53
Target Device: xilinx_aws-vu9p-f1-04261818_dynamic_5_0
Target Frequency: 300MHz
+------------------------------+-------------------+-----------+-----------+--------+--------+-------+------+
|            Kernel            |      Cycles       |    LUT    |    FF     |  BRAM  |  DSP   | URAM  |Detail|
+------------------------------+-------------------+-----------+-----------+--------+--------+-------+------+
|gcnconv_kernel (gcnconv.cpp:8)|17345588 (57.819ms)|106821 (9%)|119013 (5%)|382 (8%)|130 (1%)|0 (~0%)|-     |
+------------------------------+-------------------+-----------+-----------+--------+--------+-------+------+


====================================================================================
Interface
====================================================================================

+---------------------------+-----------+-----------+----+---------------------+
|         Interface         |SW Bitwidth|HW Bitwidth|Type|       Detail        |
+---------------------------+-----------+-----------+----+---------------------+
|x (gcnconv.cpp:9)          |         32|        512|  RO|cached & coalesced   |
|weight (gcnconv.cpp:10)    |         32|        512|  RO|cached & coalesced[1]|
|edge_index (gcnconv.cpp:11)|         32|        512| R/W|cached & coalesced   |
|result (gcnconv.cpp:12)    |         32|        512| R/W|cached & coalesced   |
+---------------------------+-----------+-----------+----+---------------------+
[1]: Coarse-grained parallelization NOT applied: loop (gcnconv.cpp:24) because access on array 'weight' (gcnconv.cpp:10) cannot be parallelized due to required buffer size (1466432 bytes) more than single buffer size threshold (1048576 bytes).
  Hint: 1. decrease parallel factor
        2. specify the burst length threshold by adding interface attribute 
        'max_burst_size=?'
        3. increase the single resource threshold by using 
        '--attribute burst_single_size_threshold=?'
        4. make range analysis accurate by changing 
        pointer parameter into array parameter in sub function 




====================================================================================
Performance Estimate (TC: Trip Count, AC: Accumulated Cycles, CPC: Cycles Per Call)
====================================================================================

+----------------------------------------------+-----+-----------------+--------+----------------------------------------------+
|                  Hierarchy                   | TC  |       AC        |  CPC   |                    Detail                    |
+----------------------------------------------+-----+-----------------+--------+----------------------------------------------+
|gcnconv_kernel (gcnconv.cpp:8)                |     |17345588 (100.0%)|17345588|-                                             |
|    auto memory burst for 'weight'(read)      |     |    1433 (  0.0%)|    1433|cache size=91712B                             |
|    auto memory burst for 'edge_index'(read)  |     |    1658 (  0.0%)|    1658|cache size=106112B                            |
|    loop matrix_mul_i (gcnconv.cpp:21)        | 2708|17045028 ( 98.3%)|17045028|-                                             |
|        loop matrix_mul_j (gcnconv.cpp:24)    |   16|17027904 ( 98.2%)|    6288|-                                             |
|            loop matrix_mul_k (gcnconv.cpp:27)| 1433|14948160 ( 86.2%)|     345|loop tiled, parallel factor=64x, pipeline II=7|
|    loop assign_index_i (gcnconv.cpp:35)      | 2708|    2708 (  0.0%)|    2708|pipeline II=1                                 |
|        loop assign_index_j (gcnconv.cpp:37)  |    2|                -|       -|parallel factor=2x                            |
|    loop assign_weight (gcnconv.cpp:43)       |13264|   13264 (  0.1%)|   13264|-                                             |
|    loop inc_degree (gcnconv.cpp:48)          |13264|  132640 (  0.8%)|  132640|pipeline II=10[2]                             |
|    loop invert (gcnconv.cpp:53)              | 2708|    2722 (  0.0%)|    2722|pipeline II=1                                 |
|    loop assign_norm (gcnconv.cpp:58)         |13264|   13274 (  0.1%)|   13274|pipeline II=1                                 |
|    auto memory burst for 'result'(read)      |     |    2708 (  0.0%)|    2708|cache size=173312B                            |
|    auto memory burst for 'result'(read)      |     |    2708 (  0.0%)|    2708|cache size=173312B                            |
|    loop calc_result_i (gcnconv.cpp:63)       |13264|  132651 (  0.8%)|  132651|pipeline II=10[3]                             |
|        loop calc_result_j (gcnconv.cpp:65)   |   16|                -|       -|parallel factor=16x                           |
|    auto memory burst for 'result'(write)     |     |    2708 (  0.0%)|    2708|cache size=173312B                            |
|    auto memory burst for 'edge_index'(write) |     |     998 (  0.0%)|     998|cache size=63888B                             |
+----------------------------------------------+-----+-----------------+--------+----------------------------------------------+
[2]: Unable to enforce a carried dependence constraint because of the access on variable "deg (gcnconv.cpp:16)"
[3]: Unable to enforce a carried dependence constraint because of the access on variable "result (gcnconv.cpp:12)"


====================================================================================
Resource Estimate
====================================================================================

+----------------------------------------------+-----------+-----------+--------+--------+-------+------+
|                  Hierarchy                   |    LUT    |    FF     |  BRAM  |  DSP   | URAM  |Detail|
+----------------------------------------------+-----------+-----------+--------+--------+-------+------+
|gcnconv_kernel (gcnconv.cpp:8)                |106821 (9%)|119013 (5%)|382 (8%)|130 (1%)|0 (~0%)|-     |
|    auto memory burst for 'weight'(read)      |          -|          -|       -|       -|      -|-     |
|    auto memory burst for 'edge_index'(read)  |          -|          -|       -|       -|      -|-     |
|    loop matrix_mul_i (gcnconv.cpp:21)        |          -|          -|       -|       -|      -|-     |
|        loop matrix_mul_j (gcnconv.cpp:24)    |          -|          -|       -|       -|      -|-     |
|            loop matrix_mul_k (gcnconv.cpp:27)|          -|          -|       -|       -|      -|-     |
|    loop assign_index_i (gcnconv.cpp:35)      |          -|          -|       -|       -|      -|-     |
|        loop assign_index_j (gcnconv.cpp:37)  |          -|          -|       -|       -|      -|-     |
|    loop assign_weight (gcnconv.cpp:43)       |          -|          -|       -|       -|      -|-     |
|    loop inc_degree (gcnconv.cpp:48)          |          -|          -|       -|       -|      -|-     |
|    loop invert (gcnconv.cpp:53)              |          -|          -|       -|       -|      -|-     |
|    loop assign_norm (gcnconv.cpp:58)         |          -|          -|       -|       -|      -|-     |
|    auto memory burst for 'result'(read)      |          -|          -|       -|       -|      -|-     |
|    auto memory burst for 'result'(read)      |          -|          -|       -|       -|      -|-     |
|    loop calc_result_i (gcnconv.cpp:63)       |          -|          -|       -|       -|      -|-     |
|        loop calc_result_j (gcnconv.cpp:65)   |          -|          -|       -|       -|      -|-     |
|    auto memory burst for 'result'(write)     |          -|          -|       -|       -|      -|-     |
|    auto memory burst for 'edge_index'(write) |          -|          -|       -|       -|      -|-     |
+----------------------------------------------+-----------+-----------+--------+--------+-------+------+
